/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.AlternativeDistributionPackageVersionRelationshipsAlternativeDistributionPackage;
import org.openapitools.client.model.AlternativeDistributionPackageVersionRelationshipsDeltas;
import org.openapitools.client.model.AlternativeDistributionPackageVersionRelationshipsVariants;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * AlternativeDistributionPackageVersionRelationships
 */
@JsonPropertyOrder({
  AlternativeDistributionPackageVersionRelationships.JSON_PROPERTY_VARIANTS,
  AlternativeDistributionPackageVersionRelationships.JSON_PROPERTY_DELTAS,
  AlternativeDistributionPackageVersionRelationships.JSON_PROPERTY_ALTERNATIVE_DISTRIBUTION_PACKAGE
})
@JsonTypeName("AlternativeDistributionPackageVersion_relationships")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class AlternativeDistributionPackageVersionRelationships {
  public static final String JSON_PROPERTY_VARIANTS = "variants";
  private AlternativeDistributionPackageVersionRelationshipsVariants variants;

  public static final String JSON_PROPERTY_DELTAS = "deltas";
  private AlternativeDistributionPackageVersionRelationshipsDeltas deltas;

  public static final String JSON_PROPERTY_ALTERNATIVE_DISTRIBUTION_PACKAGE = "alternativeDistributionPackage";
  private AlternativeDistributionPackageVersionRelationshipsAlternativeDistributionPackage alternativeDistributionPackage;

  public AlternativeDistributionPackageVersionRelationships() { 
  }

  public AlternativeDistributionPackageVersionRelationships variants(AlternativeDistributionPackageVersionRelationshipsVariants variants) {
    this.variants = variants;
    return this;
  }

   /**
   * Get variants
   * @return variants
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VARIANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlternativeDistributionPackageVersionRelationshipsVariants getVariants() {
    return variants;
  }


  @JsonProperty(JSON_PROPERTY_VARIANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVariants(AlternativeDistributionPackageVersionRelationshipsVariants variants) {
    this.variants = variants;
  }


  public AlternativeDistributionPackageVersionRelationships deltas(AlternativeDistributionPackageVersionRelationshipsDeltas deltas) {
    this.deltas = deltas;
    return this;
  }

   /**
   * Get deltas
   * @return deltas
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELTAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlternativeDistributionPackageVersionRelationshipsDeltas getDeltas() {
    return deltas;
  }


  @JsonProperty(JSON_PROPERTY_DELTAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeltas(AlternativeDistributionPackageVersionRelationshipsDeltas deltas) {
    this.deltas = deltas;
  }


  public AlternativeDistributionPackageVersionRelationships alternativeDistributionPackage(AlternativeDistributionPackageVersionRelationshipsAlternativeDistributionPackage alternativeDistributionPackage) {
    this.alternativeDistributionPackage = alternativeDistributionPackage;
    return this;
  }

   /**
   * Get alternativeDistributionPackage
   * @return alternativeDistributionPackage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_DISTRIBUTION_PACKAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlternativeDistributionPackageVersionRelationshipsAlternativeDistributionPackage getAlternativeDistributionPackage() {
    return alternativeDistributionPackage;
  }


  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_DISTRIBUTION_PACKAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlternativeDistributionPackage(AlternativeDistributionPackageVersionRelationshipsAlternativeDistributionPackage alternativeDistributionPackage) {
    this.alternativeDistributionPackage = alternativeDistributionPackage;
  }


  /**
   * Return true if this AlternativeDistributionPackageVersion_relationships object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlternativeDistributionPackageVersionRelationships alternativeDistributionPackageVersionRelationships = (AlternativeDistributionPackageVersionRelationships) o;
    return Objects.equals(this.variants, alternativeDistributionPackageVersionRelationships.variants) &&
        Objects.equals(this.deltas, alternativeDistributionPackageVersionRelationships.deltas) &&
        Objects.equals(this.alternativeDistributionPackage, alternativeDistributionPackageVersionRelationships.alternativeDistributionPackage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(variants, deltas, alternativeDistributionPackage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlternativeDistributionPackageVersionRelationships {\n");
    sb.append("    variants: ").append(toIndentedString(variants)).append("\n");
    sb.append("    deltas: ").append(toIndentedString(deltas)).append("\n");
    sb.append("    alternativeDistributionPackage: ").append(toIndentedString(alternativeDistributionPackage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

