/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * GameCenterAchievementAttributes
 */
@JsonPropertyOrder({
  GameCenterAchievementAttributes.JSON_PROPERTY_REFERENCE_NAME,
  GameCenterAchievementAttributes.JSON_PROPERTY_VENDOR_IDENTIFIER,
  GameCenterAchievementAttributes.JSON_PROPERTY_POINTS,
  GameCenterAchievementAttributes.JSON_PROPERTY_SHOW_BEFORE_EARNED,
  GameCenterAchievementAttributes.JSON_PROPERTY_REPEATABLE,
  GameCenterAchievementAttributes.JSON_PROPERTY_ARCHIVED
})
@JsonTypeName("GameCenterAchievement_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class GameCenterAchievementAttributes {
  public static final String JSON_PROPERTY_REFERENCE_NAME = "referenceName";
  private String referenceName;

  public static final String JSON_PROPERTY_VENDOR_IDENTIFIER = "vendorIdentifier";
  private String vendorIdentifier;

  public static final String JSON_PROPERTY_POINTS = "points";
  private Integer points;

  public static final String JSON_PROPERTY_SHOW_BEFORE_EARNED = "showBeforeEarned";
  private Boolean showBeforeEarned;

  public static final String JSON_PROPERTY_REPEATABLE = "repeatable";
  private Boolean repeatable;

  public static final String JSON_PROPERTY_ARCHIVED = "archived";
  private Boolean archived;

  public GameCenterAchievementAttributes() { 
  }

  public GameCenterAchievementAttributes referenceName(String referenceName) {
    this.referenceName = referenceName;
    return this;
  }

   /**
   * Get referenceName
   * @return referenceName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReferenceName() {
    return referenceName;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceName(String referenceName) {
    this.referenceName = referenceName;
  }


  public GameCenterAchievementAttributes vendorIdentifier(String vendorIdentifier) {
    this.vendorIdentifier = vendorIdentifier;
    return this;
  }

   /**
   * Get vendorIdentifier
   * @return vendorIdentifier
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VENDOR_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVendorIdentifier() {
    return vendorIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_VENDOR_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVendorIdentifier(String vendorIdentifier) {
    this.vendorIdentifier = vendorIdentifier;
  }


  public GameCenterAchievementAttributes points(Integer points) {
    this.points = points;
    return this;
  }

   /**
   * Get points
   * @return points
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPoints() {
    return points;
  }


  @JsonProperty(JSON_PROPERTY_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPoints(Integer points) {
    this.points = points;
  }


  public GameCenterAchievementAttributes showBeforeEarned(Boolean showBeforeEarned) {
    this.showBeforeEarned = showBeforeEarned;
    return this;
  }

   /**
   * Get showBeforeEarned
   * @return showBeforeEarned
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_BEFORE_EARNED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShowBeforeEarned() {
    return showBeforeEarned;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_BEFORE_EARNED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowBeforeEarned(Boolean showBeforeEarned) {
    this.showBeforeEarned = showBeforeEarned;
  }


  public GameCenterAchievementAttributes repeatable(Boolean repeatable) {
    this.repeatable = repeatable;
    return this;
  }

   /**
   * Get repeatable
   * @return repeatable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPEATABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRepeatable() {
    return repeatable;
  }


  @JsonProperty(JSON_PROPERTY_REPEATABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepeatable(Boolean repeatable) {
    this.repeatable = repeatable;
  }


  public GameCenterAchievementAttributes archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getArchived() {
    return archived;
  }


  @JsonProperty(JSON_PROPERTY_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  /**
   * Return true if this GameCenterAchievement_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameCenterAchievementAttributes gameCenterAchievementAttributes = (GameCenterAchievementAttributes) o;
    return Objects.equals(this.referenceName, gameCenterAchievementAttributes.referenceName) &&
        Objects.equals(this.vendorIdentifier, gameCenterAchievementAttributes.vendorIdentifier) &&
        Objects.equals(this.points, gameCenterAchievementAttributes.points) &&
        Objects.equals(this.showBeforeEarned, gameCenterAchievementAttributes.showBeforeEarned) &&
        Objects.equals(this.repeatable, gameCenterAchievementAttributes.repeatable) &&
        Objects.equals(this.archived, gameCenterAchievementAttributes.archived);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceName, vendorIdentifier, points, showBeforeEarned, repeatable, archived);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameCenterAchievementAttributes {\n");
    sb.append("    referenceName: ").append(toIndentedString(referenceName)).append("\n");
    sb.append("    vendorIdentifier: ").append(toIndentedString(vendorIdentifier)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    showBeforeEarned: ").append(toIndentedString(showBeforeEarned)).append("\n");
    sb.append("    repeatable: ").append(toIndentedString(repeatable)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

