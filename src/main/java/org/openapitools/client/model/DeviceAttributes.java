/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.BundleIdPlatform;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * DeviceAttributes
 */
@JsonPropertyOrder({
  DeviceAttributes.JSON_PROPERTY_NAME,
  DeviceAttributes.JSON_PROPERTY_PLATFORM,
  DeviceAttributes.JSON_PROPERTY_UDID,
  DeviceAttributes.JSON_PROPERTY_DEVICE_CLASS,
  DeviceAttributes.JSON_PROPERTY_STATUS,
  DeviceAttributes.JSON_PROPERTY_MODEL,
  DeviceAttributes.JSON_PROPERTY_ADDED_DATE
})
@JsonTypeName("Device_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class DeviceAttributes {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PLATFORM = "platform";
  private BundleIdPlatform platform;

  public static final String JSON_PROPERTY_UDID = "udid";
  private String udid;

  /**
   * Gets or Sets deviceClass
   */
  public enum DeviceClassEnum {
    APPLE_WATCH("APPLE_WATCH"),
    
    IPAD("IPAD"),
    
    IPHONE("IPHONE"),
    
    IPOD("IPOD"),
    
    APPLE_TV("APPLE_TV"),
    
    MAC("MAC");

    private String value;

    DeviceClassEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DeviceClassEnum fromValue(String value) {
      for (DeviceClassEnum b : DeviceClassEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DEVICE_CLASS = "deviceClass";
  private DeviceClassEnum deviceClass;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    ENABLED("ENABLED"),
    
    DISABLED("DISABLED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_MODEL = "model";
  private String model;

  public static final String JSON_PROPERTY_ADDED_DATE = "addedDate";
  private OffsetDateTime addedDate;

  public DeviceAttributes() { 
  }

  public DeviceAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public DeviceAttributes platform(BundleIdPlatform platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BundleIdPlatform getPlatform() {
    return platform;
  }


  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlatform(BundleIdPlatform platform) {
    this.platform = platform;
  }


  public DeviceAttributes udid(String udid) {
    this.udid = udid;
    return this;
  }

   /**
   * Get udid
   * @return udid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UDID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUdid() {
    return udid;
  }


  @JsonProperty(JSON_PROPERTY_UDID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUdid(String udid) {
    this.udid = udid;
  }


  public DeviceAttributes deviceClass(DeviceClassEnum deviceClass) {
    this.deviceClass = deviceClass;
    return this;
  }

   /**
   * Get deviceClass
   * @return deviceClass
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeviceClassEnum getDeviceClass() {
    return deviceClass;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceClass(DeviceClassEnum deviceClass) {
    this.deviceClass = deviceClass;
  }


  public DeviceAttributes status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public DeviceAttributes model(String model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModel() {
    return model;
  }


  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModel(String model) {
    this.model = model;
  }


  public DeviceAttributes addedDate(OffsetDateTime addedDate) {
    this.addedDate = addedDate;
    return this;
  }

   /**
   * Get addedDate
   * @return addedDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getAddedDate() {
    return addedDate;
  }


  @JsonProperty(JSON_PROPERTY_ADDED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddedDate(OffsetDateTime addedDate) {
    this.addedDate = addedDate;
  }


  /**
   * Return true if this Device_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceAttributes deviceAttributes = (DeviceAttributes) o;
    return Objects.equals(this.name, deviceAttributes.name) &&
        Objects.equals(this.platform, deviceAttributes.platform) &&
        Objects.equals(this.udid, deviceAttributes.udid) &&
        Objects.equals(this.deviceClass, deviceAttributes.deviceClass) &&
        Objects.equals(this.status, deviceAttributes.status) &&
        Objects.equals(this.model, deviceAttributes.model) &&
        Objects.equals(this.addedDate, deviceAttributes.addedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, platform, udid, deviceClass, status, model, addedDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceAttributes {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    udid: ").append(toIndentedString(udid)).append("\n");
    sb.append("    deviceClass: ").append(toIndentedString(deviceClass)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    addedDate: ").append(toIndentedString(addedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

