/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CiAction;
import org.openapitools.client.model.CiBranchStartCondition;
import org.openapitools.client.model.CiManualBranchStartCondition;
import org.openapitools.client.model.CiManualPullRequestStartCondition;
import org.openapitools.client.model.CiManualTagStartCondition;
import org.openapitools.client.model.CiPullRequestStartCondition;
import org.openapitools.client.model.CiScheduledStartCondition;
import org.openapitools.client.model.CiTagStartCondition;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * CiWorkflowCreateRequestDataAttributes
 */
@JsonPropertyOrder({
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_NAME,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_DESCRIPTION,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_BRANCH_START_CONDITION,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_TAG_START_CONDITION,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_PULL_REQUEST_START_CONDITION,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_SCHEDULED_START_CONDITION,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_MANUAL_BRANCH_START_CONDITION,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_MANUAL_TAG_START_CONDITION,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_MANUAL_PULL_REQUEST_START_CONDITION,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_ACTIONS,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_IS_ENABLED,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_IS_LOCKED_FOR_EDITING,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_CLEAN,
  CiWorkflowCreateRequestDataAttributes.JSON_PROPERTY_CONTAINER_FILE_PATH
})
@JsonTypeName("CiWorkflowCreateRequest_data_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class CiWorkflowCreateRequestDataAttributes {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_BRANCH_START_CONDITION = "branchStartCondition";
  private CiBranchStartCondition branchStartCondition;

  public static final String JSON_PROPERTY_TAG_START_CONDITION = "tagStartCondition";
  private CiTagStartCondition tagStartCondition;

  public static final String JSON_PROPERTY_PULL_REQUEST_START_CONDITION = "pullRequestStartCondition";
  private CiPullRequestStartCondition pullRequestStartCondition;

  public static final String JSON_PROPERTY_SCHEDULED_START_CONDITION = "scheduledStartCondition";
  private CiScheduledStartCondition scheduledStartCondition;

  public static final String JSON_PROPERTY_MANUAL_BRANCH_START_CONDITION = "manualBranchStartCondition";
  private CiManualBranchStartCondition manualBranchStartCondition;

  public static final String JSON_PROPERTY_MANUAL_TAG_START_CONDITION = "manualTagStartCondition";
  private CiManualTagStartCondition manualTagStartCondition;

  public static final String JSON_PROPERTY_MANUAL_PULL_REQUEST_START_CONDITION = "manualPullRequestStartCondition";
  private CiManualPullRequestStartCondition manualPullRequestStartCondition;

  public static final String JSON_PROPERTY_ACTIONS = "actions";
  private List<CiAction> actions = new ArrayList<>();

  public static final String JSON_PROPERTY_IS_ENABLED = "isEnabled";
  private Boolean isEnabled;

  public static final String JSON_PROPERTY_IS_LOCKED_FOR_EDITING = "isLockedForEditing";
  private Boolean isLockedForEditing;

  public static final String JSON_PROPERTY_CLEAN = "clean";
  private Boolean clean;

  public static final String JSON_PROPERTY_CONTAINER_FILE_PATH = "containerFilePath";
  private String containerFilePath;

  public CiWorkflowCreateRequestDataAttributes() { 
  }

  public CiWorkflowCreateRequestDataAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CiWorkflowCreateRequestDataAttributes description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CiWorkflowCreateRequestDataAttributes branchStartCondition(CiBranchStartCondition branchStartCondition) {
    this.branchStartCondition = branchStartCondition;
    return this;
  }

   /**
   * Get branchStartCondition
   * @return branchStartCondition
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRANCH_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiBranchStartCondition getBranchStartCondition() {
    return branchStartCondition;
  }


  @JsonProperty(JSON_PROPERTY_BRANCH_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranchStartCondition(CiBranchStartCondition branchStartCondition) {
    this.branchStartCondition = branchStartCondition;
  }


  public CiWorkflowCreateRequestDataAttributes tagStartCondition(CiTagStartCondition tagStartCondition) {
    this.tagStartCondition = tagStartCondition;
    return this;
  }

   /**
   * Get tagStartCondition
   * @return tagStartCondition
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAG_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiTagStartCondition getTagStartCondition() {
    return tagStartCondition;
  }


  @JsonProperty(JSON_PROPERTY_TAG_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTagStartCondition(CiTagStartCondition tagStartCondition) {
    this.tagStartCondition = tagStartCondition;
  }


  public CiWorkflowCreateRequestDataAttributes pullRequestStartCondition(CiPullRequestStartCondition pullRequestStartCondition) {
    this.pullRequestStartCondition = pullRequestStartCondition;
    return this;
  }

   /**
   * Get pullRequestStartCondition
   * @return pullRequestStartCondition
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PULL_REQUEST_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiPullRequestStartCondition getPullRequestStartCondition() {
    return pullRequestStartCondition;
  }


  @JsonProperty(JSON_PROPERTY_PULL_REQUEST_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPullRequestStartCondition(CiPullRequestStartCondition pullRequestStartCondition) {
    this.pullRequestStartCondition = pullRequestStartCondition;
  }


  public CiWorkflowCreateRequestDataAttributes scheduledStartCondition(CiScheduledStartCondition scheduledStartCondition) {
    this.scheduledStartCondition = scheduledStartCondition;
    return this;
  }

   /**
   * Get scheduledStartCondition
   * @return scheduledStartCondition
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCHEDULED_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiScheduledStartCondition getScheduledStartCondition() {
    return scheduledStartCondition;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduledStartCondition(CiScheduledStartCondition scheduledStartCondition) {
    this.scheduledStartCondition = scheduledStartCondition;
  }


  public CiWorkflowCreateRequestDataAttributes manualBranchStartCondition(CiManualBranchStartCondition manualBranchStartCondition) {
    this.manualBranchStartCondition = manualBranchStartCondition;
    return this;
  }

   /**
   * Get manualBranchStartCondition
   * @return manualBranchStartCondition
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUAL_BRANCH_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiManualBranchStartCondition getManualBranchStartCondition() {
    return manualBranchStartCondition;
  }


  @JsonProperty(JSON_PROPERTY_MANUAL_BRANCH_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManualBranchStartCondition(CiManualBranchStartCondition manualBranchStartCondition) {
    this.manualBranchStartCondition = manualBranchStartCondition;
  }


  public CiWorkflowCreateRequestDataAttributes manualTagStartCondition(CiManualTagStartCondition manualTagStartCondition) {
    this.manualTagStartCondition = manualTagStartCondition;
    return this;
  }

   /**
   * Get manualTagStartCondition
   * @return manualTagStartCondition
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUAL_TAG_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiManualTagStartCondition getManualTagStartCondition() {
    return manualTagStartCondition;
  }


  @JsonProperty(JSON_PROPERTY_MANUAL_TAG_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManualTagStartCondition(CiManualTagStartCondition manualTagStartCondition) {
    this.manualTagStartCondition = manualTagStartCondition;
  }


  public CiWorkflowCreateRequestDataAttributes manualPullRequestStartCondition(CiManualPullRequestStartCondition manualPullRequestStartCondition) {
    this.manualPullRequestStartCondition = manualPullRequestStartCondition;
    return this;
  }

   /**
   * Get manualPullRequestStartCondition
   * @return manualPullRequestStartCondition
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUAL_PULL_REQUEST_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiManualPullRequestStartCondition getManualPullRequestStartCondition() {
    return manualPullRequestStartCondition;
  }


  @JsonProperty(JSON_PROPERTY_MANUAL_PULL_REQUEST_START_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManualPullRequestStartCondition(CiManualPullRequestStartCondition manualPullRequestStartCondition) {
    this.manualPullRequestStartCondition = manualPullRequestStartCondition;
  }


  public CiWorkflowCreateRequestDataAttributes actions(List<CiAction> actions) {
    this.actions = actions;
    return this;
  }

  public CiWorkflowCreateRequestDataAttributes addActionsItem(CiAction actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<CiAction> getActions() {
    return actions;
  }


  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActions(List<CiAction> actions) {
    this.actions = actions;
  }


  public CiWorkflowCreateRequestDataAttributes isEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

   /**
   * Get isEnabled
   * @return isEnabled
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsEnabled() {
    return isEnabled;
  }


  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public CiWorkflowCreateRequestDataAttributes isLockedForEditing(Boolean isLockedForEditing) {
    this.isLockedForEditing = isLockedForEditing;
    return this;
  }

   /**
   * Get isLockedForEditing
   * @return isLockedForEditing
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_LOCKED_FOR_EDITING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsLockedForEditing() {
    return isLockedForEditing;
  }


  @JsonProperty(JSON_PROPERTY_IS_LOCKED_FOR_EDITING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsLockedForEditing(Boolean isLockedForEditing) {
    this.isLockedForEditing = isLockedForEditing;
  }


  public CiWorkflowCreateRequestDataAttributes clean(Boolean clean) {
    this.clean = clean;
    return this;
  }

   /**
   * Get clean
   * @return clean
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLEAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getClean() {
    return clean;
  }


  @JsonProperty(JSON_PROPERTY_CLEAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClean(Boolean clean) {
    this.clean = clean;
  }


  public CiWorkflowCreateRequestDataAttributes containerFilePath(String containerFilePath) {
    this.containerFilePath = containerFilePath;
    return this;
  }

   /**
   * Get containerFilePath
   * @return containerFilePath
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTAINER_FILE_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContainerFilePath() {
    return containerFilePath;
  }


  @JsonProperty(JSON_PROPERTY_CONTAINER_FILE_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContainerFilePath(String containerFilePath) {
    this.containerFilePath = containerFilePath;
  }


  /**
   * Return true if this CiWorkflowCreateRequest_data_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CiWorkflowCreateRequestDataAttributes ciWorkflowCreateRequestDataAttributes = (CiWorkflowCreateRequestDataAttributes) o;
    return Objects.equals(this.name, ciWorkflowCreateRequestDataAttributes.name) &&
        Objects.equals(this.description, ciWorkflowCreateRequestDataAttributes.description) &&
        Objects.equals(this.branchStartCondition, ciWorkflowCreateRequestDataAttributes.branchStartCondition) &&
        Objects.equals(this.tagStartCondition, ciWorkflowCreateRequestDataAttributes.tagStartCondition) &&
        Objects.equals(this.pullRequestStartCondition, ciWorkflowCreateRequestDataAttributes.pullRequestStartCondition) &&
        Objects.equals(this.scheduledStartCondition, ciWorkflowCreateRequestDataAttributes.scheduledStartCondition) &&
        Objects.equals(this.manualBranchStartCondition, ciWorkflowCreateRequestDataAttributes.manualBranchStartCondition) &&
        Objects.equals(this.manualTagStartCondition, ciWorkflowCreateRequestDataAttributes.manualTagStartCondition) &&
        Objects.equals(this.manualPullRequestStartCondition, ciWorkflowCreateRequestDataAttributes.manualPullRequestStartCondition) &&
        Objects.equals(this.actions, ciWorkflowCreateRequestDataAttributes.actions) &&
        Objects.equals(this.isEnabled, ciWorkflowCreateRequestDataAttributes.isEnabled) &&
        Objects.equals(this.isLockedForEditing, ciWorkflowCreateRequestDataAttributes.isLockedForEditing) &&
        Objects.equals(this.clean, ciWorkflowCreateRequestDataAttributes.clean) &&
        Objects.equals(this.containerFilePath, ciWorkflowCreateRequestDataAttributes.containerFilePath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, branchStartCondition, tagStartCondition, pullRequestStartCondition, scheduledStartCondition, manualBranchStartCondition, manualTagStartCondition, manualPullRequestStartCondition, actions, isEnabled, isLockedForEditing, clean, containerFilePath);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CiWorkflowCreateRequestDataAttributes {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    branchStartCondition: ").append(toIndentedString(branchStartCondition)).append("\n");
    sb.append("    tagStartCondition: ").append(toIndentedString(tagStartCondition)).append("\n");
    sb.append("    pullRequestStartCondition: ").append(toIndentedString(pullRequestStartCondition)).append("\n");
    sb.append("    scheduledStartCondition: ").append(toIndentedString(scheduledStartCondition)).append("\n");
    sb.append("    manualBranchStartCondition: ").append(toIndentedString(manualBranchStartCondition)).append("\n");
    sb.append("    manualTagStartCondition: ").append(toIndentedString(manualTagStartCondition)).append("\n");
    sb.append("    manualPullRequestStartCondition: ").append(toIndentedString(manualPullRequestStartCondition)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    isLockedForEditing: ").append(toIndentedString(isLockedForEditing)).append("\n");
    sb.append("    clean: ").append(toIndentedString(clean)).append("\n");
    sb.append("    containerFilePath: ").append(toIndentedString(containerFilePath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

