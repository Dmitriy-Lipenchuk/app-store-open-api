/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.AppRelationshipsBuilds;
import org.openapitools.client.model.AppRelationshipsCiProduct;
import org.openapitools.client.model.CiBuildRunRelationshipsPullRequest;
import org.openapitools.client.model.CiBuildRunRelationshipsSourceBranchOrTag;
import org.openapitools.client.model.CiBuildRunRelationshipsWorkflow;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * CiBuildRunRelationships
 */
@JsonPropertyOrder({
  CiBuildRunRelationships.JSON_PROPERTY_BUILDS,
  CiBuildRunRelationships.JSON_PROPERTY_WORKFLOW,
  CiBuildRunRelationships.JSON_PROPERTY_PRODUCT,
  CiBuildRunRelationships.JSON_PROPERTY_SOURCE_BRANCH_OR_TAG,
  CiBuildRunRelationships.JSON_PROPERTY_DESTINATION_BRANCH,
  CiBuildRunRelationships.JSON_PROPERTY_PULL_REQUEST
})
@JsonTypeName("CiBuildRun_relationships")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class CiBuildRunRelationships {
  public static final String JSON_PROPERTY_BUILDS = "builds";
  private AppRelationshipsBuilds builds;

  public static final String JSON_PROPERTY_WORKFLOW = "workflow";
  private CiBuildRunRelationshipsWorkflow workflow;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private AppRelationshipsCiProduct product;

  public static final String JSON_PROPERTY_SOURCE_BRANCH_OR_TAG = "sourceBranchOrTag";
  private CiBuildRunRelationshipsSourceBranchOrTag sourceBranchOrTag;

  public static final String JSON_PROPERTY_DESTINATION_BRANCH = "destinationBranch";
  private CiBuildRunRelationshipsSourceBranchOrTag destinationBranch;

  public static final String JSON_PROPERTY_PULL_REQUEST = "pullRequest";
  private CiBuildRunRelationshipsPullRequest pullRequest;

  public CiBuildRunRelationships() { 
  }

  public CiBuildRunRelationships builds(AppRelationshipsBuilds builds) {
    this.builds = builds;
    return this;
  }

   /**
   * Get builds
   * @return builds
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUILDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AppRelationshipsBuilds getBuilds() {
    return builds;
  }


  @JsonProperty(JSON_PROPERTY_BUILDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuilds(AppRelationshipsBuilds builds) {
    this.builds = builds;
  }


  public CiBuildRunRelationships workflow(CiBuildRunRelationshipsWorkflow workflow) {
    this.workflow = workflow;
    return this;
  }

   /**
   * Get workflow
   * @return workflow
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORKFLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiBuildRunRelationshipsWorkflow getWorkflow() {
    return workflow;
  }


  @JsonProperty(JSON_PROPERTY_WORKFLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkflow(CiBuildRunRelationshipsWorkflow workflow) {
    this.workflow = workflow;
  }


  public CiBuildRunRelationships product(AppRelationshipsCiProduct product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AppRelationshipsCiProduct getProduct() {
    return product;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProduct(AppRelationshipsCiProduct product) {
    this.product = product;
  }


  public CiBuildRunRelationships sourceBranchOrTag(CiBuildRunRelationshipsSourceBranchOrTag sourceBranchOrTag) {
    this.sourceBranchOrTag = sourceBranchOrTag;
    return this;
  }

   /**
   * Get sourceBranchOrTag
   * @return sourceBranchOrTag
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_BRANCH_OR_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiBuildRunRelationshipsSourceBranchOrTag getSourceBranchOrTag() {
    return sourceBranchOrTag;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_BRANCH_OR_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceBranchOrTag(CiBuildRunRelationshipsSourceBranchOrTag sourceBranchOrTag) {
    this.sourceBranchOrTag = sourceBranchOrTag;
  }


  public CiBuildRunRelationships destinationBranch(CiBuildRunRelationshipsSourceBranchOrTag destinationBranch) {
    this.destinationBranch = destinationBranch;
    return this;
  }

   /**
   * Get destinationBranch
   * @return destinationBranch
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESTINATION_BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiBuildRunRelationshipsSourceBranchOrTag getDestinationBranch() {
    return destinationBranch;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestinationBranch(CiBuildRunRelationshipsSourceBranchOrTag destinationBranch) {
    this.destinationBranch = destinationBranch;
  }


  public CiBuildRunRelationships pullRequest(CiBuildRunRelationshipsPullRequest pullRequest) {
    this.pullRequest = pullRequest;
    return this;
  }

   /**
   * Get pullRequest
   * @return pullRequest
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PULL_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiBuildRunRelationshipsPullRequest getPullRequest() {
    return pullRequest;
  }


  @JsonProperty(JSON_PROPERTY_PULL_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPullRequest(CiBuildRunRelationshipsPullRequest pullRequest) {
    this.pullRequest = pullRequest;
  }


  /**
   * Return true if this CiBuildRun_relationships object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CiBuildRunRelationships ciBuildRunRelationships = (CiBuildRunRelationships) o;
    return Objects.equals(this.builds, ciBuildRunRelationships.builds) &&
        Objects.equals(this.workflow, ciBuildRunRelationships.workflow) &&
        Objects.equals(this.product, ciBuildRunRelationships.product) &&
        Objects.equals(this.sourceBranchOrTag, ciBuildRunRelationships.sourceBranchOrTag) &&
        Objects.equals(this.destinationBranch, ciBuildRunRelationships.destinationBranch) &&
        Objects.equals(this.pullRequest, ciBuildRunRelationships.pullRequest);
  }

  @Override
  public int hashCode() {
    return Objects.hash(builds, workflow, product, sourceBranchOrTag, destinationBranch, pullRequest);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CiBuildRunRelationships {\n");
    sb.append("    builds: ").append(toIndentedString(builds)).append("\n");
    sb.append("    workflow: ").append(toIndentedString(workflow)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    sourceBranchOrTag: ").append(toIndentedString(sourceBranchOrTag)).append("\n");
    sb.append("    destinationBranch: ").append(toIndentedString(destinationBranch)).append("\n");
    sb.append("    pullRequest: ").append(toIndentedString(pullRequest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

