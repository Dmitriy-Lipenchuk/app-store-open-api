/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * AppEventAttributesTerritorySchedulesInner
 */
@JsonPropertyOrder({
  AppEventAttributesTerritorySchedulesInner.JSON_PROPERTY_TERRITORIES,
  AppEventAttributesTerritorySchedulesInner.JSON_PROPERTY_PUBLISH_START,
  AppEventAttributesTerritorySchedulesInner.JSON_PROPERTY_EVENT_START,
  AppEventAttributesTerritorySchedulesInner.JSON_PROPERTY_EVENT_END
})
@JsonTypeName("AppEvent_attributes_territorySchedules_inner")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class AppEventAttributesTerritorySchedulesInner {
  public static final String JSON_PROPERTY_TERRITORIES = "territories";
  private List<String> territories = new ArrayList<>();

  public static final String JSON_PROPERTY_PUBLISH_START = "publishStart";
  private OffsetDateTime publishStart;

  public static final String JSON_PROPERTY_EVENT_START = "eventStart";
  private OffsetDateTime eventStart;

  public static final String JSON_PROPERTY_EVENT_END = "eventEnd";
  private OffsetDateTime eventEnd;

  public AppEventAttributesTerritorySchedulesInner() { 
  }

  public AppEventAttributesTerritorySchedulesInner territories(List<String> territories) {
    this.territories = territories;
    return this;
  }

  public AppEventAttributesTerritorySchedulesInner addTerritoriesItem(String territoriesItem) {
    if (this.territories == null) {
      this.territories = new ArrayList<>();
    }
    this.territories.add(territoriesItem);
    return this;
  }

   /**
   * Get territories
   * @return territories
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TERRITORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTerritories() {
    return territories;
  }


  @JsonProperty(JSON_PROPERTY_TERRITORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTerritories(List<String> territories) {
    this.territories = territories;
  }


  public AppEventAttributesTerritorySchedulesInner publishStart(OffsetDateTime publishStart) {
    this.publishStart = publishStart;
    return this;
  }

   /**
   * Get publishStart
   * @return publishStart
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLISH_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getPublishStart() {
    return publishStart;
  }


  @JsonProperty(JSON_PROPERTY_PUBLISH_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublishStart(OffsetDateTime publishStart) {
    this.publishStart = publishStart;
  }


  public AppEventAttributesTerritorySchedulesInner eventStart(OffsetDateTime eventStart) {
    this.eventStart = eventStart;
    return this;
  }

   /**
   * Get eventStart
   * @return eventStart
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEventStart() {
    return eventStart;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventStart(OffsetDateTime eventStart) {
    this.eventStart = eventStart;
  }


  public AppEventAttributesTerritorySchedulesInner eventEnd(OffsetDateTime eventEnd) {
    this.eventEnd = eventEnd;
    return this;
  }

   /**
   * Get eventEnd
   * @return eventEnd
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEventEnd() {
    return eventEnd;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventEnd(OffsetDateTime eventEnd) {
    this.eventEnd = eventEnd;
  }


  /**
   * Return true if this AppEvent_attributes_territorySchedules_inner object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppEventAttributesTerritorySchedulesInner appEventAttributesTerritorySchedulesInner = (AppEventAttributesTerritorySchedulesInner) o;
    return Objects.equals(this.territories, appEventAttributesTerritorySchedulesInner.territories) &&
        Objects.equals(this.publishStart, appEventAttributesTerritorySchedulesInner.publishStart) &&
        Objects.equals(this.eventStart, appEventAttributesTerritorySchedulesInner.eventStart) &&
        Objects.equals(this.eventEnd, appEventAttributesTerritorySchedulesInner.eventEnd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(territories, publishStart, eventStart, eventEnd);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppEventAttributesTerritorySchedulesInner {\n");
    sb.append("    territories: ").append(toIndentedString(territories)).append("\n");
    sb.append("    publishStart: ").append(toIndentedString(publishStart)).append("\n");
    sb.append("    eventStart: ").append(toIndentedString(eventStart)).append("\n");
    sb.append("    eventEnd: ").append(toIndentedString(eventEnd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

