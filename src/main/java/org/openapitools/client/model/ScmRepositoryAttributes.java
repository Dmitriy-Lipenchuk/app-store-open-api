/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * ScmRepositoryAttributes
 */
@JsonPropertyOrder({
  ScmRepositoryAttributes.JSON_PROPERTY_LAST_ACCESSED_DATE,
  ScmRepositoryAttributes.JSON_PROPERTY_HTTP_CLONE_URL,
  ScmRepositoryAttributes.JSON_PROPERTY_SSH_CLONE_URL,
  ScmRepositoryAttributes.JSON_PROPERTY_OWNER_NAME,
  ScmRepositoryAttributes.JSON_PROPERTY_REPOSITORY_NAME
})
@JsonTypeName("ScmRepository_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class ScmRepositoryAttributes {
  public static final String JSON_PROPERTY_LAST_ACCESSED_DATE = "lastAccessedDate";
  private OffsetDateTime lastAccessedDate;

  public static final String JSON_PROPERTY_HTTP_CLONE_URL = "httpCloneUrl";
  private URI httpCloneUrl;

  public static final String JSON_PROPERTY_SSH_CLONE_URL = "sshCloneUrl";
  private URI sshCloneUrl;

  public static final String JSON_PROPERTY_OWNER_NAME = "ownerName";
  private String ownerName;

  public static final String JSON_PROPERTY_REPOSITORY_NAME = "repositoryName";
  private String repositoryName;

  public ScmRepositoryAttributes() { 
  }

  public ScmRepositoryAttributes lastAccessedDate(OffsetDateTime lastAccessedDate) {
    this.lastAccessedDate = lastAccessedDate;
    return this;
  }

   /**
   * Get lastAccessedDate
   * @return lastAccessedDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_ACCESSED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastAccessedDate() {
    return lastAccessedDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_ACCESSED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastAccessedDate(OffsetDateTime lastAccessedDate) {
    this.lastAccessedDate = lastAccessedDate;
  }


  public ScmRepositoryAttributes httpCloneUrl(URI httpCloneUrl) {
    this.httpCloneUrl = httpCloneUrl;
    return this;
  }

   /**
   * Get httpCloneUrl
   * @return httpCloneUrl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HTTP_CLONE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getHttpCloneUrl() {
    return httpCloneUrl;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_CLONE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHttpCloneUrl(URI httpCloneUrl) {
    this.httpCloneUrl = httpCloneUrl;
  }


  public ScmRepositoryAttributes sshCloneUrl(URI sshCloneUrl) {
    this.sshCloneUrl = sshCloneUrl;
    return this;
  }

   /**
   * Get sshCloneUrl
   * @return sshCloneUrl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SSH_CLONE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getSshCloneUrl() {
    return sshCloneUrl;
  }


  @JsonProperty(JSON_PROPERTY_SSH_CLONE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSshCloneUrl(URI sshCloneUrl) {
    this.sshCloneUrl = sshCloneUrl;
  }


  public ScmRepositoryAttributes ownerName(String ownerName) {
    this.ownerName = ownerName;
    return this;
  }

   /**
   * Get ownerName
   * @return ownerName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerName() {
    return ownerName;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }


  public ScmRepositoryAttributes repositoryName(String repositoryName) {
    this.repositoryName = repositoryName;
    return this;
  }

   /**
   * Get repositoryName
   * @return repositoryName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPOSITORY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRepositoryName() {
    return repositoryName;
  }


  @JsonProperty(JSON_PROPERTY_REPOSITORY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepositoryName(String repositoryName) {
    this.repositoryName = repositoryName;
  }


  /**
   * Return true if this ScmRepository_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScmRepositoryAttributes scmRepositoryAttributes = (ScmRepositoryAttributes) o;
    return Objects.equals(this.lastAccessedDate, scmRepositoryAttributes.lastAccessedDate) &&
        Objects.equals(this.httpCloneUrl, scmRepositoryAttributes.httpCloneUrl) &&
        Objects.equals(this.sshCloneUrl, scmRepositoryAttributes.sshCloneUrl) &&
        Objects.equals(this.ownerName, scmRepositoryAttributes.ownerName) &&
        Objects.equals(this.repositoryName, scmRepositoryAttributes.repositoryName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastAccessedDate, httpCloneUrl, sshCloneUrl, ownerName, repositoryName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScmRepositoryAttributes {\n");
    sb.append("    lastAccessedDate: ").append(toIndentedString(lastAccessedDate)).append("\n");
    sb.append("    httpCloneUrl: ").append(toIndentedString(httpCloneUrl)).append("\n");
    sb.append("    sshCloneUrl: ").append(toIndentedString(sshCloneUrl)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    repositoryName: ").append(toIndentedString(repositoryName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

