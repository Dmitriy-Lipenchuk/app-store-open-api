/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * MarketplaceWebhookCreateRequestDataAttributes
 */
@JsonPropertyOrder({
  MarketplaceWebhookCreateRequestDataAttributes.JSON_PROPERTY_ENDPOINT_URL,
  MarketplaceWebhookCreateRequestDataAttributes.JSON_PROPERTY_SECRET
})
@JsonTypeName("MarketplaceWebhookCreateRequest_data_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class MarketplaceWebhookCreateRequestDataAttributes {
  public static final String JSON_PROPERTY_ENDPOINT_URL = "endpointUrl";
  private URI endpointUrl;

  public static final String JSON_PROPERTY_SECRET = "secret";
  private String secret;

  public MarketplaceWebhookCreateRequestDataAttributes() { 
  }

  public MarketplaceWebhookCreateRequestDataAttributes endpointUrl(URI endpointUrl) {
    this.endpointUrl = endpointUrl;
    return this;
  }

   /**
   * Get endpointUrl
   * @return endpointUrl
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENDPOINT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getEndpointUrl() {
    return endpointUrl;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndpointUrl(URI endpointUrl) {
    this.endpointUrl = endpointUrl;
  }


  public MarketplaceWebhookCreateRequestDataAttributes secret(String secret) {
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSecret() {
    return secret;
  }


  @JsonProperty(JSON_PROPERTY_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSecret(String secret) {
    this.secret = secret;
  }


  /**
   * Return true if this MarketplaceWebhookCreateRequest_data_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketplaceWebhookCreateRequestDataAttributes marketplaceWebhookCreateRequestDataAttributes = (MarketplaceWebhookCreateRequestDataAttributes) o;
    return Objects.equals(this.endpointUrl, marketplaceWebhookCreateRequestDataAttributes.endpointUrl) &&
        Objects.equals(this.secret, marketplaceWebhookCreateRequestDataAttributes.secret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointUrl, secret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketplaceWebhookCreateRequestDataAttributes {\n");
    sb.append("    endpointUrl: ").append(toIndentedString(endpointUrl)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

