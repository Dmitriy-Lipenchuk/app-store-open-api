/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.Platform;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * AppStoreVersionCreateRequestDataAttributes
 */
@JsonPropertyOrder({
  AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_PLATFORM,
  AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_VERSION_STRING,
  AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_COPYRIGHT,
  AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_REVIEW_TYPE,
  AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_RELEASE_TYPE,
  AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_EARLIEST_RELEASE_DATE
})
@JsonTypeName("AppStoreVersionCreateRequest_data_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class AppStoreVersionCreateRequestDataAttributes {
  public static final String JSON_PROPERTY_PLATFORM = "platform";
  private Platform platform;

  public static final String JSON_PROPERTY_VERSION_STRING = "versionString";
  private String versionString;

  public static final String JSON_PROPERTY_COPYRIGHT = "copyright";
  private String copyright;

  /**
   * Gets or Sets reviewType
   */
  public enum ReviewTypeEnum {
    APP_STORE("APP_STORE"),
    
    NOTARIZATION("NOTARIZATION");

    private String value;

    ReviewTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReviewTypeEnum fromValue(String value) {
      for (ReviewTypeEnum b : ReviewTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REVIEW_TYPE = "reviewType";
  private ReviewTypeEnum reviewType;

  /**
   * Gets or Sets releaseType
   */
  public enum ReleaseTypeEnum {
    MANUAL("MANUAL"),
    
    AFTER_APPROVAL("AFTER_APPROVAL"),
    
    SCHEDULED("SCHEDULED");

    private String value;

    ReleaseTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReleaseTypeEnum fromValue(String value) {
      for (ReleaseTypeEnum b : ReleaseTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RELEASE_TYPE = "releaseType";
  private ReleaseTypeEnum releaseType;

  public static final String JSON_PROPERTY_EARLIEST_RELEASE_DATE = "earliestReleaseDate";
  private OffsetDateTime earliestReleaseDate;

  public AppStoreVersionCreateRequestDataAttributes() { 
  }

  public AppStoreVersionCreateRequestDataAttributes platform(Platform platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Platform getPlatform() {
    return platform;
  }


  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPlatform(Platform platform) {
    this.platform = platform;
  }


  public AppStoreVersionCreateRequestDataAttributes versionString(String versionString) {
    this.versionString = versionString;
    return this;
  }

   /**
   * Get versionString
   * @return versionString
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VERSION_STRING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVersionString() {
    return versionString;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_STRING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersionString(String versionString) {
    this.versionString = versionString;
  }


  public AppStoreVersionCreateRequestDataAttributes copyright(String copyright) {
    this.copyright = copyright;
    return this;
  }

   /**
   * Get copyright
   * @return copyright
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COPYRIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCopyright() {
    return copyright;
  }


  @JsonProperty(JSON_PROPERTY_COPYRIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCopyright(String copyright) {
    this.copyright = copyright;
  }


  public AppStoreVersionCreateRequestDataAttributes reviewType(ReviewTypeEnum reviewType) {
    this.reviewType = reviewType;
    return this;
  }

   /**
   * Get reviewType
   * @return reviewType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVIEW_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReviewTypeEnum getReviewType() {
    return reviewType;
  }


  @JsonProperty(JSON_PROPERTY_REVIEW_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReviewType(ReviewTypeEnum reviewType) {
    this.reviewType = reviewType;
  }


  public AppStoreVersionCreateRequestDataAttributes releaseType(ReleaseTypeEnum releaseType) {
    this.releaseType = releaseType;
    return this;
  }

   /**
   * Get releaseType
   * @return releaseType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELEASE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReleaseTypeEnum getReleaseType() {
    return releaseType;
  }


  @JsonProperty(JSON_PROPERTY_RELEASE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReleaseType(ReleaseTypeEnum releaseType) {
    this.releaseType = releaseType;
  }


  public AppStoreVersionCreateRequestDataAttributes earliestReleaseDate(OffsetDateTime earliestReleaseDate) {
    this.earliestReleaseDate = earliestReleaseDate;
    return this;
  }

   /**
   * Get earliestReleaseDate
   * @return earliestReleaseDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EARLIEST_RELEASE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEarliestReleaseDate() {
    return earliestReleaseDate;
  }


  @JsonProperty(JSON_PROPERTY_EARLIEST_RELEASE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEarliestReleaseDate(OffsetDateTime earliestReleaseDate) {
    this.earliestReleaseDate = earliestReleaseDate;
  }


  /**
   * Return true if this AppStoreVersionCreateRequest_data_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppStoreVersionCreateRequestDataAttributes appStoreVersionCreateRequestDataAttributes = (AppStoreVersionCreateRequestDataAttributes) o;
    return Objects.equals(this.platform, appStoreVersionCreateRequestDataAttributes.platform) &&
        Objects.equals(this.versionString, appStoreVersionCreateRequestDataAttributes.versionString) &&
        Objects.equals(this.copyright, appStoreVersionCreateRequestDataAttributes.copyright) &&
        Objects.equals(this.reviewType, appStoreVersionCreateRequestDataAttributes.reviewType) &&
        Objects.equals(this.releaseType, appStoreVersionCreateRequestDataAttributes.releaseType) &&
        Objects.equals(this.earliestReleaseDate, appStoreVersionCreateRequestDataAttributes.earliestReleaseDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(platform, versionString, copyright, reviewType, releaseType, earliestReleaseDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppStoreVersionCreateRequestDataAttributes {\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    versionString: ").append(toIndentedString(versionString)).append("\n");
    sb.append("    copyright: ").append(toIndentedString(copyright)).append("\n");
    sb.append("    reviewType: ").append(toIndentedString(reviewType)).append("\n");
    sb.append("    releaseType: ").append(toIndentedString(releaseType)).append("\n");
    sb.append("    earliestReleaseDate: ").append(toIndentedString(earliestReleaseDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

