/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CiTestDestination;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * CiActionTestConfiguration
 */
@JsonPropertyOrder({
  CiActionTestConfiguration.JSON_PROPERTY_KIND,
  CiActionTestConfiguration.JSON_PROPERTY_TEST_PLAN_NAME,
  CiActionTestConfiguration.JSON_PROPERTY_TEST_DESTINATIONS
})
@JsonTypeName("CiAction_testConfiguration")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class CiActionTestConfiguration {
  /**
   * Gets or Sets kind
   */
  public enum KindEnum {
    USE_SCHEME_SETTINGS("USE_SCHEME_SETTINGS"),
    
    SPECIFIC_TEST_PLANS("SPECIFIC_TEST_PLANS");

    private String value;

    KindEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static KindEnum fromValue(String value) {
      for (KindEnum b : KindEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_KIND = "kind";
  private KindEnum kind;

  public static final String JSON_PROPERTY_TEST_PLAN_NAME = "testPlanName";
  private String testPlanName;

  public static final String JSON_PROPERTY_TEST_DESTINATIONS = "testDestinations";
  private List<CiTestDestination> testDestinations = new ArrayList<>();

  public CiActionTestConfiguration() { 
  }

  public CiActionTestConfiguration kind(KindEnum kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public KindEnum getKind() {
    return kind;
  }


  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKind(KindEnum kind) {
    this.kind = kind;
  }


  public CiActionTestConfiguration testPlanName(String testPlanName) {
    this.testPlanName = testPlanName;
    return this;
  }

   /**
   * Get testPlanName
   * @return testPlanName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEST_PLAN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTestPlanName() {
    return testPlanName;
  }


  @JsonProperty(JSON_PROPERTY_TEST_PLAN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestPlanName(String testPlanName) {
    this.testPlanName = testPlanName;
  }


  public CiActionTestConfiguration testDestinations(List<CiTestDestination> testDestinations) {
    this.testDestinations = testDestinations;
    return this;
  }

  public CiActionTestConfiguration addTestDestinationsItem(CiTestDestination testDestinationsItem) {
    if (this.testDestinations == null) {
      this.testDestinations = new ArrayList<>();
    }
    this.testDestinations.add(testDestinationsItem);
    return this;
  }

   /**
   * Get testDestinations
   * @return testDestinations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEST_DESTINATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CiTestDestination> getTestDestinations() {
    return testDestinations;
  }


  @JsonProperty(JSON_PROPERTY_TEST_DESTINATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestDestinations(List<CiTestDestination> testDestinations) {
    this.testDestinations = testDestinations;
  }


  /**
   * Return true if this CiAction_testConfiguration object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CiActionTestConfiguration ciActionTestConfiguration = (CiActionTestConfiguration) o;
    return Objects.equals(this.kind, ciActionTestConfiguration.kind) &&
        Objects.equals(this.testPlanName, ciActionTestConfiguration.testPlanName) &&
        Objects.equals(this.testDestinations, ciActionTestConfiguration.testDestinations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, testPlanName, testDestinations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CiActionTestConfiguration {\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    testPlanName: ").append(toIndentedString(testPlanName)).append("\n");
    sb.append("    testDestinations: ").append(toIndentedString(testDestinations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

