/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.GameCenterLeaderboardFormatter;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * GameCenterLeaderboardCreateRequestDataAttributes
 */
@JsonPropertyOrder({
  GameCenterLeaderboardCreateRequestDataAttributes.JSON_PROPERTY_DEFAULT_FORMATTER,
  GameCenterLeaderboardCreateRequestDataAttributes.JSON_PROPERTY_REFERENCE_NAME,
  GameCenterLeaderboardCreateRequestDataAttributes.JSON_PROPERTY_VENDOR_IDENTIFIER,
  GameCenterLeaderboardCreateRequestDataAttributes.JSON_PROPERTY_SUBMISSION_TYPE,
  GameCenterLeaderboardCreateRequestDataAttributes.JSON_PROPERTY_SCORE_SORT_TYPE,
  GameCenterLeaderboardCreateRequestDataAttributes.JSON_PROPERTY_SCORE_RANGE_START,
  GameCenterLeaderboardCreateRequestDataAttributes.JSON_PROPERTY_SCORE_RANGE_END,
  GameCenterLeaderboardCreateRequestDataAttributes.JSON_PROPERTY_RECURRENCE_START_DATE,
  GameCenterLeaderboardCreateRequestDataAttributes.JSON_PROPERTY_RECURRENCE_DURATION,
  GameCenterLeaderboardCreateRequestDataAttributes.JSON_PROPERTY_RECURRENCE_RULE
})
@JsonTypeName("GameCenterLeaderboardCreateRequest_data_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class GameCenterLeaderboardCreateRequestDataAttributes {
  public static final String JSON_PROPERTY_DEFAULT_FORMATTER = "defaultFormatter";
  private GameCenterLeaderboardFormatter defaultFormatter;

  public static final String JSON_PROPERTY_REFERENCE_NAME = "referenceName";
  private String referenceName;

  public static final String JSON_PROPERTY_VENDOR_IDENTIFIER = "vendorIdentifier";
  private String vendorIdentifier;

  /**
   * Gets or Sets submissionType
   */
  public enum SubmissionTypeEnum {
    BEST_SCORE("BEST_SCORE"),
    
    MOST_RECENT_SCORE("MOST_RECENT_SCORE");

    private String value;

    SubmissionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SubmissionTypeEnum fromValue(String value) {
      for (SubmissionTypeEnum b : SubmissionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SUBMISSION_TYPE = "submissionType";
  private SubmissionTypeEnum submissionType;

  /**
   * Gets or Sets scoreSortType
   */
  public enum ScoreSortTypeEnum {
    ASC("ASC"),
    
    DESC("DESC");

    private String value;

    ScoreSortTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ScoreSortTypeEnum fromValue(String value) {
      for (ScoreSortTypeEnum b : ScoreSortTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SCORE_SORT_TYPE = "scoreSortType";
  private ScoreSortTypeEnum scoreSortType;

  public static final String JSON_PROPERTY_SCORE_RANGE_START = "scoreRangeStart";
  private BigDecimal scoreRangeStart;

  public static final String JSON_PROPERTY_SCORE_RANGE_END = "scoreRangeEnd";
  private BigDecimal scoreRangeEnd;

  public static final String JSON_PROPERTY_RECURRENCE_START_DATE = "recurrenceStartDate";
  private OffsetDateTime recurrenceStartDate;

  public static final String JSON_PROPERTY_RECURRENCE_DURATION = "recurrenceDuration";
  private String recurrenceDuration;

  public static final String JSON_PROPERTY_RECURRENCE_RULE = "recurrenceRule";
  private String recurrenceRule;

  public GameCenterLeaderboardCreateRequestDataAttributes() { 
  }

  public GameCenterLeaderboardCreateRequestDataAttributes defaultFormatter(GameCenterLeaderboardFormatter defaultFormatter) {
    this.defaultFormatter = defaultFormatter;
    return this;
  }

   /**
   * Get defaultFormatter
   * @return defaultFormatter
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEFAULT_FORMATTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GameCenterLeaderboardFormatter getDefaultFormatter() {
    return defaultFormatter;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_FORMATTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefaultFormatter(GameCenterLeaderboardFormatter defaultFormatter) {
    this.defaultFormatter = defaultFormatter;
  }


  public GameCenterLeaderboardCreateRequestDataAttributes referenceName(String referenceName) {
    this.referenceName = referenceName;
    return this;
  }

   /**
   * Get referenceName
   * @return referenceName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REFERENCE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReferenceName() {
    return referenceName;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReferenceName(String referenceName) {
    this.referenceName = referenceName;
  }


  public GameCenterLeaderboardCreateRequestDataAttributes vendorIdentifier(String vendorIdentifier) {
    this.vendorIdentifier = vendorIdentifier;
    return this;
  }

   /**
   * Get vendorIdentifier
   * @return vendorIdentifier
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VENDOR_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVendorIdentifier() {
    return vendorIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_VENDOR_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVendorIdentifier(String vendorIdentifier) {
    this.vendorIdentifier = vendorIdentifier;
  }


  public GameCenterLeaderboardCreateRequestDataAttributes submissionType(SubmissionTypeEnum submissionType) {
    this.submissionType = submissionType;
    return this;
  }

   /**
   * Get submissionType
   * @return submissionType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBMISSION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SubmissionTypeEnum getSubmissionType() {
    return submissionType;
  }


  @JsonProperty(JSON_PROPERTY_SUBMISSION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmissionType(SubmissionTypeEnum submissionType) {
    this.submissionType = submissionType;
  }


  public GameCenterLeaderboardCreateRequestDataAttributes scoreSortType(ScoreSortTypeEnum scoreSortType) {
    this.scoreSortType = scoreSortType;
    return this;
  }

   /**
   * Get scoreSortType
   * @return scoreSortType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCORE_SORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ScoreSortTypeEnum getScoreSortType() {
    return scoreSortType;
  }


  @JsonProperty(JSON_PROPERTY_SCORE_SORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScoreSortType(ScoreSortTypeEnum scoreSortType) {
    this.scoreSortType = scoreSortType;
  }


  public GameCenterLeaderboardCreateRequestDataAttributes scoreRangeStart(BigDecimal scoreRangeStart) {
    this.scoreRangeStart = scoreRangeStart;
    return this;
  }

   /**
   * Get scoreRangeStart
   * @return scoreRangeStart
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCORE_RANGE_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getScoreRangeStart() {
    return scoreRangeStart;
  }


  @JsonProperty(JSON_PROPERTY_SCORE_RANGE_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScoreRangeStart(BigDecimal scoreRangeStart) {
    this.scoreRangeStart = scoreRangeStart;
  }


  public GameCenterLeaderboardCreateRequestDataAttributes scoreRangeEnd(BigDecimal scoreRangeEnd) {
    this.scoreRangeEnd = scoreRangeEnd;
    return this;
  }

   /**
   * Get scoreRangeEnd
   * @return scoreRangeEnd
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCORE_RANGE_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getScoreRangeEnd() {
    return scoreRangeEnd;
  }


  @JsonProperty(JSON_PROPERTY_SCORE_RANGE_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScoreRangeEnd(BigDecimal scoreRangeEnd) {
    this.scoreRangeEnd = scoreRangeEnd;
  }


  public GameCenterLeaderboardCreateRequestDataAttributes recurrenceStartDate(OffsetDateTime recurrenceStartDate) {
    this.recurrenceStartDate = recurrenceStartDate;
    return this;
  }

   /**
   * Get recurrenceStartDate
   * @return recurrenceStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECURRENCE_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getRecurrenceStartDate() {
    return recurrenceStartDate;
  }


  @JsonProperty(JSON_PROPERTY_RECURRENCE_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecurrenceStartDate(OffsetDateTime recurrenceStartDate) {
    this.recurrenceStartDate = recurrenceStartDate;
  }


  public GameCenterLeaderboardCreateRequestDataAttributes recurrenceDuration(String recurrenceDuration) {
    this.recurrenceDuration = recurrenceDuration;
    return this;
  }

   /**
   * Get recurrenceDuration
   * @return recurrenceDuration
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECURRENCE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecurrenceDuration() {
    return recurrenceDuration;
  }


  @JsonProperty(JSON_PROPERTY_RECURRENCE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecurrenceDuration(String recurrenceDuration) {
    this.recurrenceDuration = recurrenceDuration;
  }


  public GameCenterLeaderboardCreateRequestDataAttributes recurrenceRule(String recurrenceRule) {
    this.recurrenceRule = recurrenceRule;
    return this;
  }

   /**
   * Get recurrenceRule
   * @return recurrenceRule
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECURRENCE_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecurrenceRule() {
    return recurrenceRule;
  }


  @JsonProperty(JSON_PROPERTY_RECURRENCE_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecurrenceRule(String recurrenceRule) {
    this.recurrenceRule = recurrenceRule;
  }


  /**
   * Return true if this GameCenterLeaderboardCreateRequest_data_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameCenterLeaderboardCreateRequestDataAttributes gameCenterLeaderboardCreateRequestDataAttributes = (GameCenterLeaderboardCreateRequestDataAttributes) o;
    return Objects.equals(this.defaultFormatter, gameCenterLeaderboardCreateRequestDataAttributes.defaultFormatter) &&
        Objects.equals(this.referenceName, gameCenterLeaderboardCreateRequestDataAttributes.referenceName) &&
        Objects.equals(this.vendorIdentifier, gameCenterLeaderboardCreateRequestDataAttributes.vendorIdentifier) &&
        Objects.equals(this.submissionType, gameCenterLeaderboardCreateRequestDataAttributes.submissionType) &&
        Objects.equals(this.scoreSortType, gameCenterLeaderboardCreateRequestDataAttributes.scoreSortType) &&
        Objects.equals(this.scoreRangeStart, gameCenterLeaderboardCreateRequestDataAttributes.scoreRangeStart) &&
        Objects.equals(this.scoreRangeEnd, gameCenterLeaderboardCreateRequestDataAttributes.scoreRangeEnd) &&
        Objects.equals(this.recurrenceStartDate, gameCenterLeaderboardCreateRequestDataAttributes.recurrenceStartDate) &&
        Objects.equals(this.recurrenceDuration, gameCenterLeaderboardCreateRequestDataAttributes.recurrenceDuration) &&
        Objects.equals(this.recurrenceRule, gameCenterLeaderboardCreateRequestDataAttributes.recurrenceRule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultFormatter, referenceName, vendorIdentifier, submissionType, scoreSortType, scoreRangeStart, scoreRangeEnd, recurrenceStartDate, recurrenceDuration, recurrenceRule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameCenterLeaderboardCreateRequestDataAttributes {\n");
    sb.append("    defaultFormatter: ").append(toIndentedString(defaultFormatter)).append("\n");
    sb.append("    referenceName: ").append(toIndentedString(referenceName)).append("\n");
    sb.append("    vendorIdentifier: ").append(toIndentedString(vendorIdentifier)).append("\n");
    sb.append("    submissionType: ").append(toIndentedString(submissionType)).append("\n");
    sb.append("    scoreSortType: ").append(toIndentedString(scoreSortType)).append("\n");
    sb.append("    scoreRangeStart: ").append(toIndentedString(scoreRangeStart)).append("\n");
    sb.append("    scoreRangeEnd: ").append(toIndentedString(scoreRangeEnd)).append("\n");
    sb.append("    recurrenceStartDate: ").append(toIndentedString(recurrenceStartDate)).append("\n");
    sb.append("    recurrenceDuration: ").append(toIndentedString(recurrenceDuration)).append("\n");
    sb.append("    recurrenceRule: ").append(toIndentedString(recurrenceRule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

