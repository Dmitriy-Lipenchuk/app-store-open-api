/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AppMediaAssetState;
import org.openapitools.client.model.ImageAsset;
import org.openapitools.client.model.UploadOperation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * AppPreviewAttributes
 */
@JsonPropertyOrder({
  AppPreviewAttributes.JSON_PROPERTY_FILE_SIZE,
  AppPreviewAttributes.JSON_PROPERTY_FILE_NAME,
  AppPreviewAttributes.JSON_PROPERTY_SOURCE_FILE_CHECKSUM,
  AppPreviewAttributes.JSON_PROPERTY_PREVIEW_FRAME_TIME_CODE,
  AppPreviewAttributes.JSON_PROPERTY_MIME_TYPE,
  AppPreviewAttributes.JSON_PROPERTY_VIDEO_URL,
  AppPreviewAttributes.JSON_PROPERTY_PREVIEW_IMAGE,
  AppPreviewAttributes.JSON_PROPERTY_UPLOAD_OPERATIONS,
  AppPreviewAttributes.JSON_PROPERTY_ASSET_DELIVERY_STATE
})
@JsonTypeName("AppPreview_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class AppPreviewAttributes {
  public static final String JSON_PROPERTY_FILE_SIZE = "fileSize";
  private Integer fileSize;

  public static final String JSON_PROPERTY_FILE_NAME = "fileName";
  private String fileName;

  public static final String JSON_PROPERTY_SOURCE_FILE_CHECKSUM = "sourceFileChecksum";
  private String sourceFileChecksum;

  public static final String JSON_PROPERTY_PREVIEW_FRAME_TIME_CODE = "previewFrameTimeCode";
  private String previewFrameTimeCode;

  public static final String JSON_PROPERTY_MIME_TYPE = "mimeType";
  private String mimeType;

  public static final String JSON_PROPERTY_VIDEO_URL = "videoUrl";
  private String videoUrl;

  public static final String JSON_PROPERTY_PREVIEW_IMAGE = "previewImage";
  private ImageAsset previewImage;

  public static final String JSON_PROPERTY_UPLOAD_OPERATIONS = "uploadOperations";
  private List<UploadOperation> uploadOperations = new ArrayList<>();

  public static final String JSON_PROPERTY_ASSET_DELIVERY_STATE = "assetDeliveryState";
  private AppMediaAssetState assetDeliveryState;

  public AppPreviewAttributes() { 
  }

  public AppPreviewAttributes fileSize(Integer fileSize) {
    this.fileSize = fileSize;
    return this;
  }

   /**
   * Get fileSize
   * @return fileSize
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFileSize() {
    return fileSize;
  }


  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileSize(Integer fileSize) {
    this.fileSize = fileSize;
  }


  public AppPreviewAttributes fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileName() {
    return fileName;
  }


  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public AppPreviewAttributes sourceFileChecksum(String sourceFileChecksum) {
    this.sourceFileChecksum = sourceFileChecksum;
    return this;
  }

   /**
   * Get sourceFileChecksum
   * @return sourceFileChecksum
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_FILE_CHECKSUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceFileChecksum() {
    return sourceFileChecksum;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_FILE_CHECKSUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceFileChecksum(String sourceFileChecksum) {
    this.sourceFileChecksum = sourceFileChecksum;
  }


  public AppPreviewAttributes previewFrameTimeCode(String previewFrameTimeCode) {
    this.previewFrameTimeCode = previewFrameTimeCode;
    return this;
  }

   /**
   * Get previewFrameTimeCode
   * @return previewFrameTimeCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREVIEW_FRAME_TIME_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreviewFrameTimeCode() {
    return previewFrameTimeCode;
  }


  @JsonProperty(JSON_PROPERTY_PREVIEW_FRAME_TIME_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviewFrameTimeCode(String previewFrameTimeCode) {
    this.previewFrameTimeCode = previewFrameTimeCode;
  }


  public AppPreviewAttributes mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Get mimeType
   * @return mimeType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMimeType() {
    return mimeType;
  }


  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  public AppPreviewAttributes videoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
    return this;
  }

   /**
   * Get videoUrl
   * @return videoUrl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIDEO_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVideoUrl() {
    return videoUrl;
  }


  @JsonProperty(JSON_PROPERTY_VIDEO_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVideoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
  }


  public AppPreviewAttributes previewImage(ImageAsset previewImage) {
    this.previewImage = previewImage;
    return this;
  }

   /**
   * Get previewImage
   * @return previewImage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREVIEW_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ImageAsset getPreviewImage() {
    return previewImage;
  }


  @JsonProperty(JSON_PROPERTY_PREVIEW_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviewImage(ImageAsset previewImage) {
    this.previewImage = previewImage;
  }


  public AppPreviewAttributes uploadOperations(List<UploadOperation> uploadOperations) {
    this.uploadOperations = uploadOperations;
    return this;
  }

  public AppPreviewAttributes addUploadOperationsItem(UploadOperation uploadOperationsItem) {
    if (this.uploadOperations == null) {
      this.uploadOperations = new ArrayList<>();
    }
    this.uploadOperations.add(uploadOperationsItem);
    return this;
  }

   /**
   * Get uploadOperations
   * @return uploadOperations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPLOAD_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UploadOperation> getUploadOperations() {
    return uploadOperations;
  }


  @JsonProperty(JSON_PROPERTY_UPLOAD_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUploadOperations(List<UploadOperation> uploadOperations) {
    this.uploadOperations = uploadOperations;
  }


  public AppPreviewAttributes assetDeliveryState(AppMediaAssetState assetDeliveryState) {
    this.assetDeliveryState = assetDeliveryState;
    return this;
  }

   /**
   * Get assetDeliveryState
   * @return assetDeliveryState
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSET_DELIVERY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AppMediaAssetState getAssetDeliveryState() {
    return assetDeliveryState;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_DELIVERY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetDeliveryState(AppMediaAssetState assetDeliveryState) {
    this.assetDeliveryState = assetDeliveryState;
  }


  /**
   * Return true if this AppPreview_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppPreviewAttributes appPreviewAttributes = (AppPreviewAttributes) o;
    return Objects.equals(this.fileSize, appPreviewAttributes.fileSize) &&
        Objects.equals(this.fileName, appPreviewAttributes.fileName) &&
        Objects.equals(this.sourceFileChecksum, appPreviewAttributes.sourceFileChecksum) &&
        Objects.equals(this.previewFrameTimeCode, appPreviewAttributes.previewFrameTimeCode) &&
        Objects.equals(this.mimeType, appPreviewAttributes.mimeType) &&
        Objects.equals(this.videoUrl, appPreviewAttributes.videoUrl) &&
        Objects.equals(this.previewImage, appPreviewAttributes.previewImage) &&
        Objects.equals(this.uploadOperations, appPreviewAttributes.uploadOperations) &&
        Objects.equals(this.assetDeliveryState, appPreviewAttributes.assetDeliveryState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileSize, fileName, sourceFileChecksum, previewFrameTimeCode, mimeType, videoUrl, previewImage, uploadOperations, assetDeliveryState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppPreviewAttributes {\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    sourceFileChecksum: ").append(toIndentedString(sourceFileChecksum)).append("\n");
    sb.append("    previewFrameTimeCode: ").append(toIndentedString(previewFrameTimeCode)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    videoUrl: ").append(toIndentedString(videoUrl)).append("\n");
    sb.append("    previewImage: ").append(toIndentedString(previewImage)).append("\n");
    sb.append("    uploadOperations: ").append(toIndentedString(uploadOperations)).append("\n");
    sb.append("    assetDeliveryState: ").append(toIndentedString(assetDeliveryState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

