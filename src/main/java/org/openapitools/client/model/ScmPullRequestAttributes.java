/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * ScmPullRequestAttributes
 */
@JsonPropertyOrder({
  ScmPullRequestAttributes.JSON_PROPERTY_TITLE,
  ScmPullRequestAttributes.JSON_PROPERTY_NUMBER,
  ScmPullRequestAttributes.JSON_PROPERTY_WEB_URL,
  ScmPullRequestAttributes.JSON_PROPERTY_SOURCE_REPOSITORY_OWNER,
  ScmPullRequestAttributes.JSON_PROPERTY_SOURCE_REPOSITORY_NAME,
  ScmPullRequestAttributes.JSON_PROPERTY_SOURCE_BRANCH_NAME,
  ScmPullRequestAttributes.JSON_PROPERTY_DESTINATION_REPOSITORY_OWNER,
  ScmPullRequestAttributes.JSON_PROPERTY_DESTINATION_REPOSITORY_NAME,
  ScmPullRequestAttributes.JSON_PROPERTY_DESTINATION_BRANCH_NAME,
  ScmPullRequestAttributes.JSON_PROPERTY_IS_CLOSED,
  ScmPullRequestAttributes.JSON_PROPERTY_IS_CROSS_REPOSITORY
})
@JsonTypeName("ScmPullRequest_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class ScmPullRequestAttributes {
  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_NUMBER = "number";
  private Integer number;

  public static final String JSON_PROPERTY_WEB_URL = "webUrl";
  private URI webUrl;

  public static final String JSON_PROPERTY_SOURCE_REPOSITORY_OWNER = "sourceRepositoryOwner";
  private String sourceRepositoryOwner;

  public static final String JSON_PROPERTY_SOURCE_REPOSITORY_NAME = "sourceRepositoryName";
  private String sourceRepositoryName;

  public static final String JSON_PROPERTY_SOURCE_BRANCH_NAME = "sourceBranchName";
  private String sourceBranchName;

  public static final String JSON_PROPERTY_DESTINATION_REPOSITORY_OWNER = "destinationRepositoryOwner";
  private String destinationRepositoryOwner;

  public static final String JSON_PROPERTY_DESTINATION_REPOSITORY_NAME = "destinationRepositoryName";
  private String destinationRepositoryName;

  public static final String JSON_PROPERTY_DESTINATION_BRANCH_NAME = "destinationBranchName";
  private String destinationBranchName;

  public static final String JSON_PROPERTY_IS_CLOSED = "isClosed";
  private Boolean isClosed;

  public static final String JSON_PROPERTY_IS_CROSS_REPOSITORY = "isCrossRepository";
  private Boolean isCrossRepository;

  public ScmPullRequestAttributes() { 
  }

  public ScmPullRequestAttributes title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public ScmPullRequestAttributes number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(Integer number) {
    this.number = number;
  }


  public ScmPullRequestAttributes webUrl(URI webUrl) {
    this.webUrl = webUrl;
    return this;
  }

   /**
   * Get webUrl
   * @return webUrl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEB_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getWebUrl() {
    return webUrl;
  }


  @JsonProperty(JSON_PROPERTY_WEB_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebUrl(URI webUrl) {
    this.webUrl = webUrl;
  }


  public ScmPullRequestAttributes sourceRepositoryOwner(String sourceRepositoryOwner) {
    this.sourceRepositoryOwner = sourceRepositoryOwner;
    return this;
  }

   /**
   * Get sourceRepositoryOwner
   * @return sourceRepositoryOwner
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_REPOSITORY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceRepositoryOwner() {
    return sourceRepositoryOwner;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_REPOSITORY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceRepositoryOwner(String sourceRepositoryOwner) {
    this.sourceRepositoryOwner = sourceRepositoryOwner;
  }


  public ScmPullRequestAttributes sourceRepositoryName(String sourceRepositoryName) {
    this.sourceRepositoryName = sourceRepositoryName;
    return this;
  }

   /**
   * Get sourceRepositoryName
   * @return sourceRepositoryName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_REPOSITORY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceRepositoryName() {
    return sourceRepositoryName;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_REPOSITORY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceRepositoryName(String sourceRepositoryName) {
    this.sourceRepositoryName = sourceRepositoryName;
  }


  public ScmPullRequestAttributes sourceBranchName(String sourceBranchName) {
    this.sourceBranchName = sourceBranchName;
    return this;
  }

   /**
   * Get sourceBranchName
   * @return sourceBranchName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_BRANCH_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceBranchName() {
    return sourceBranchName;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_BRANCH_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceBranchName(String sourceBranchName) {
    this.sourceBranchName = sourceBranchName;
  }


  public ScmPullRequestAttributes destinationRepositoryOwner(String destinationRepositoryOwner) {
    this.destinationRepositoryOwner = destinationRepositoryOwner;
    return this;
  }

   /**
   * Get destinationRepositoryOwner
   * @return destinationRepositoryOwner
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESTINATION_REPOSITORY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDestinationRepositoryOwner() {
    return destinationRepositoryOwner;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_REPOSITORY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestinationRepositoryOwner(String destinationRepositoryOwner) {
    this.destinationRepositoryOwner = destinationRepositoryOwner;
  }


  public ScmPullRequestAttributes destinationRepositoryName(String destinationRepositoryName) {
    this.destinationRepositoryName = destinationRepositoryName;
    return this;
  }

   /**
   * Get destinationRepositoryName
   * @return destinationRepositoryName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESTINATION_REPOSITORY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDestinationRepositoryName() {
    return destinationRepositoryName;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_REPOSITORY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestinationRepositoryName(String destinationRepositoryName) {
    this.destinationRepositoryName = destinationRepositoryName;
  }


  public ScmPullRequestAttributes destinationBranchName(String destinationBranchName) {
    this.destinationBranchName = destinationBranchName;
    return this;
  }

   /**
   * Get destinationBranchName
   * @return destinationBranchName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESTINATION_BRANCH_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDestinationBranchName() {
    return destinationBranchName;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_BRANCH_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestinationBranchName(String destinationBranchName) {
    this.destinationBranchName = destinationBranchName;
  }


  public ScmPullRequestAttributes isClosed(Boolean isClosed) {
    this.isClosed = isClosed;
    return this;
  }

   /**
   * Get isClosed
   * @return isClosed
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_CLOSED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsClosed() {
    return isClosed;
  }


  @JsonProperty(JSON_PROPERTY_IS_CLOSED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsClosed(Boolean isClosed) {
    this.isClosed = isClosed;
  }


  public ScmPullRequestAttributes isCrossRepository(Boolean isCrossRepository) {
    this.isCrossRepository = isCrossRepository;
    return this;
  }

   /**
   * Get isCrossRepository
   * @return isCrossRepository
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_CROSS_REPOSITORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsCrossRepository() {
    return isCrossRepository;
  }


  @JsonProperty(JSON_PROPERTY_IS_CROSS_REPOSITORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCrossRepository(Boolean isCrossRepository) {
    this.isCrossRepository = isCrossRepository;
  }


  /**
   * Return true if this ScmPullRequest_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScmPullRequestAttributes scmPullRequestAttributes = (ScmPullRequestAttributes) o;
    return Objects.equals(this.title, scmPullRequestAttributes.title) &&
        Objects.equals(this.number, scmPullRequestAttributes.number) &&
        Objects.equals(this.webUrl, scmPullRequestAttributes.webUrl) &&
        Objects.equals(this.sourceRepositoryOwner, scmPullRequestAttributes.sourceRepositoryOwner) &&
        Objects.equals(this.sourceRepositoryName, scmPullRequestAttributes.sourceRepositoryName) &&
        Objects.equals(this.sourceBranchName, scmPullRequestAttributes.sourceBranchName) &&
        Objects.equals(this.destinationRepositoryOwner, scmPullRequestAttributes.destinationRepositoryOwner) &&
        Objects.equals(this.destinationRepositoryName, scmPullRequestAttributes.destinationRepositoryName) &&
        Objects.equals(this.destinationBranchName, scmPullRequestAttributes.destinationBranchName) &&
        Objects.equals(this.isClosed, scmPullRequestAttributes.isClosed) &&
        Objects.equals(this.isCrossRepository, scmPullRequestAttributes.isCrossRepository);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, number, webUrl, sourceRepositoryOwner, sourceRepositoryName, sourceBranchName, destinationRepositoryOwner, destinationRepositoryName, destinationBranchName, isClosed, isCrossRepository);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScmPullRequestAttributes {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("    sourceRepositoryOwner: ").append(toIndentedString(sourceRepositoryOwner)).append("\n");
    sb.append("    sourceRepositoryName: ").append(toIndentedString(sourceRepositoryName)).append("\n");
    sb.append("    sourceBranchName: ").append(toIndentedString(sourceBranchName)).append("\n");
    sb.append("    destinationRepositoryOwner: ").append(toIndentedString(destinationRepositoryOwner)).append("\n");
    sb.append("    destinationRepositoryName: ").append(toIndentedString(destinationRepositoryName)).append("\n");
    sb.append("    destinationBranchName: ").append(toIndentedString(destinationBranchName)).append("\n");
    sb.append("    isClosed: ").append(toIndentedString(isClosed)).append("\n");
    sb.append("    isCrossRepository: ").append(toIndentedString(isCrossRepository)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

