/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AppEventAssetType;
import org.openapitools.client.model.AppMediaAssetState;
import org.openapitools.client.model.ImageAsset;
import org.openapitools.client.model.UploadOperation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * AppEventScreenshotAttributes
 */
@JsonPropertyOrder({
  AppEventScreenshotAttributes.JSON_PROPERTY_FILE_SIZE,
  AppEventScreenshotAttributes.JSON_PROPERTY_FILE_NAME,
  AppEventScreenshotAttributes.JSON_PROPERTY_IMAGE_ASSET,
  AppEventScreenshotAttributes.JSON_PROPERTY_ASSET_TOKEN,
  AppEventScreenshotAttributes.JSON_PROPERTY_UPLOAD_OPERATIONS,
  AppEventScreenshotAttributes.JSON_PROPERTY_ASSET_DELIVERY_STATE,
  AppEventScreenshotAttributes.JSON_PROPERTY_APP_EVENT_ASSET_TYPE
})
@JsonTypeName("AppEventScreenshot_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class AppEventScreenshotAttributes {
  public static final String JSON_PROPERTY_FILE_SIZE = "fileSize";
  private Integer fileSize;

  public static final String JSON_PROPERTY_FILE_NAME = "fileName";
  private String fileName;

  public static final String JSON_PROPERTY_IMAGE_ASSET = "imageAsset";
  private ImageAsset imageAsset;

  public static final String JSON_PROPERTY_ASSET_TOKEN = "assetToken";
  private String assetToken;

  public static final String JSON_PROPERTY_UPLOAD_OPERATIONS = "uploadOperations";
  private List<UploadOperation> uploadOperations = new ArrayList<>();

  public static final String JSON_PROPERTY_ASSET_DELIVERY_STATE = "assetDeliveryState";
  private AppMediaAssetState assetDeliveryState;

  public static final String JSON_PROPERTY_APP_EVENT_ASSET_TYPE = "appEventAssetType";
  private AppEventAssetType appEventAssetType;

  public AppEventScreenshotAttributes() { 
  }

  public AppEventScreenshotAttributes fileSize(Integer fileSize) {
    this.fileSize = fileSize;
    return this;
  }

   /**
   * Get fileSize
   * @return fileSize
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFileSize() {
    return fileSize;
  }


  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileSize(Integer fileSize) {
    this.fileSize = fileSize;
  }


  public AppEventScreenshotAttributes fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileName() {
    return fileName;
  }


  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public AppEventScreenshotAttributes imageAsset(ImageAsset imageAsset) {
    this.imageAsset = imageAsset;
    return this;
  }

   /**
   * Get imageAsset
   * @return imageAsset
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ImageAsset getImageAsset() {
    return imageAsset;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_ASSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageAsset(ImageAsset imageAsset) {
    this.imageAsset = imageAsset;
  }


  public AppEventScreenshotAttributes assetToken(String assetToken) {
    this.assetToken = assetToken;
    return this;
  }

   /**
   * Get assetToken
   * @return assetToken
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSET_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssetToken() {
    return assetToken;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetToken(String assetToken) {
    this.assetToken = assetToken;
  }


  public AppEventScreenshotAttributes uploadOperations(List<UploadOperation> uploadOperations) {
    this.uploadOperations = uploadOperations;
    return this;
  }

  public AppEventScreenshotAttributes addUploadOperationsItem(UploadOperation uploadOperationsItem) {
    if (this.uploadOperations == null) {
      this.uploadOperations = new ArrayList<>();
    }
    this.uploadOperations.add(uploadOperationsItem);
    return this;
  }

   /**
   * Get uploadOperations
   * @return uploadOperations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPLOAD_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UploadOperation> getUploadOperations() {
    return uploadOperations;
  }


  @JsonProperty(JSON_PROPERTY_UPLOAD_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUploadOperations(List<UploadOperation> uploadOperations) {
    this.uploadOperations = uploadOperations;
  }


  public AppEventScreenshotAttributes assetDeliveryState(AppMediaAssetState assetDeliveryState) {
    this.assetDeliveryState = assetDeliveryState;
    return this;
  }

   /**
   * Get assetDeliveryState
   * @return assetDeliveryState
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSET_DELIVERY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AppMediaAssetState getAssetDeliveryState() {
    return assetDeliveryState;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_DELIVERY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetDeliveryState(AppMediaAssetState assetDeliveryState) {
    this.assetDeliveryState = assetDeliveryState;
  }


  public AppEventScreenshotAttributes appEventAssetType(AppEventAssetType appEventAssetType) {
    this.appEventAssetType = appEventAssetType;
    return this;
  }

   /**
   * Get appEventAssetType
   * @return appEventAssetType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APP_EVENT_ASSET_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AppEventAssetType getAppEventAssetType() {
    return appEventAssetType;
  }


  @JsonProperty(JSON_PROPERTY_APP_EVENT_ASSET_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppEventAssetType(AppEventAssetType appEventAssetType) {
    this.appEventAssetType = appEventAssetType;
  }


  /**
   * Return true if this AppEventScreenshot_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppEventScreenshotAttributes appEventScreenshotAttributes = (AppEventScreenshotAttributes) o;
    return Objects.equals(this.fileSize, appEventScreenshotAttributes.fileSize) &&
        Objects.equals(this.fileName, appEventScreenshotAttributes.fileName) &&
        Objects.equals(this.imageAsset, appEventScreenshotAttributes.imageAsset) &&
        Objects.equals(this.assetToken, appEventScreenshotAttributes.assetToken) &&
        Objects.equals(this.uploadOperations, appEventScreenshotAttributes.uploadOperations) &&
        Objects.equals(this.assetDeliveryState, appEventScreenshotAttributes.assetDeliveryState) &&
        Objects.equals(this.appEventAssetType, appEventScreenshotAttributes.appEventAssetType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileSize, fileName, imageAsset, assetToken, uploadOperations, assetDeliveryState, appEventAssetType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppEventScreenshotAttributes {\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    imageAsset: ").append(toIndentedString(imageAsset)).append("\n");
    sb.append("    assetToken: ").append(toIndentedString(assetToken)).append("\n");
    sb.append("    uploadOperations: ").append(toIndentedString(uploadOperations)).append("\n");
    sb.append("    assetDeliveryState: ").append(toIndentedString(assetDeliveryState)).append("\n");
    sb.append("    appEventAssetType: ").append(toIndentedString(appEventAssetType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

