/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.BuildBundleRelationshipsAppClipDomainCacheStatus;
import org.openapitools.client.model.BuildBundleRelationshipsBetaAppClipInvocations;
import org.openapitools.client.model.BuildBundleRelationshipsBuildBundleFileSizes;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * BuildBundleRelationships
 */
@JsonPropertyOrder({
  BuildBundleRelationships.JSON_PROPERTY_APP_CLIP_DOMAIN_CACHE_STATUS,
  BuildBundleRelationships.JSON_PROPERTY_APP_CLIP_DOMAIN_DEBUG_STATUS,
  BuildBundleRelationships.JSON_PROPERTY_BETA_APP_CLIP_INVOCATIONS,
  BuildBundleRelationships.JSON_PROPERTY_BUILD_BUNDLE_FILE_SIZES
})
@JsonTypeName("BuildBundle_relationships")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class BuildBundleRelationships {
  public static final String JSON_PROPERTY_APP_CLIP_DOMAIN_CACHE_STATUS = "appClipDomainCacheStatus";
  private BuildBundleRelationshipsAppClipDomainCacheStatus appClipDomainCacheStatus;

  public static final String JSON_PROPERTY_APP_CLIP_DOMAIN_DEBUG_STATUS = "appClipDomainDebugStatus";
  private BuildBundleRelationshipsAppClipDomainCacheStatus appClipDomainDebugStatus;

  public static final String JSON_PROPERTY_BETA_APP_CLIP_INVOCATIONS = "betaAppClipInvocations";
  private BuildBundleRelationshipsBetaAppClipInvocations betaAppClipInvocations;

  public static final String JSON_PROPERTY_BUILD_BUNDLE_FILE_SIZES = "buildBundleFileSizes";
  private BuildBundleRelationshipsBuildBundleFileSizes buildBundleFileSizes;

  public BuildBundleRelationships() { 
  }

  public BuildBundleRelationships appClipDomainCacheStatus(BuildBundleRelationshipsAppClipDomainCacheStatus appClipDomainCacheStatus) {
    this.appClipDomainCacheStatus = appClipDomainCacheStatus;
    return this;
  }

   /**
   * Get appClipDomainCacheStatus
   * @return appClipDomainCacheStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APP_CLIP_DOMAIN_CACHE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BuildBundleRelationshipsAppClipDomainCacheStatus getAppClipDomainCacheStatus() {
    return appClipDomainCacheStatus;
  }


  @JsonProperty(JSON_PROPERTY_APP_CLIP_DOMAIN_CACHE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppClipDomainCacheStatus(BuildBundleRelationshipsAppClipDomainCacheStatus appClipDomainCacheStatus) {
    this.appClipDomainCacheStatus = appClipDomainCacheStatus;
  }


  public BuildBundleRelationships appClipDomainDebugStatus(BuildBundleRelationshipsAppClipDomainCacheStatus appClipDomainDebugStatus) {
    this.appClipDomainDebugStatus = appClipDomainDebugStatus;
    return this;
  }

   /**
   * Get appClipDomainDebugStatus
   * @return appClipDomainDebugStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APP_CLIP_DOMAIN_DEBUG_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BuildBundleRelationshipsAppClipDomainCacheStatus getAppClipDomainDebugStatus() {
    return appClipDomainDebugStatus;
  }


  @JsonProperty(JSON_PROPERTY_APP_CLIP_DOMAIN_DEBUG_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppClipDomainDebugStatus(BuildBundleRelationshipsAppClipDomainCacheStatus appClipDomainDebugStatus) {
    this.appClipDomainDebugStatus = appClipDomainDebugStatus;
  }


  public BuildBundleRelationships betaAppClipInvocations(BuildBundleRelationshipsBetaAppClipInvocations betaAppClipInvocations) {
    this.betaAppClipInvocations = betaAppClipInvocations;
    return this;
  }

   /**
   * Get betaAppClipInvocations
   * @return betaAppClipInvocations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BETA_APP_CLIP_INVOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BuildBundleRelationshipsBetaAppClipInvocations getBetaAppClipInvocations() {
    return betaAppClipInvocations;
  }


  @JsonProperty(JSON_PROPERTY_BETA_APP_CLIP_INVOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBetaAppClipInvocations(BuildBundleRelationshipsBetaAppClipInvocations betaAppClipInvocations) {
    this.betaAppClipInvocations = betaAppClipInvocations;
  }


  public BuildBundleRelationships buildBundleFileSizes(BuildBundleRelationshipsBuildBundleFileSizes buildBundleFileSizes) {
    this.buildBundleFileSizes = buildBundleFileSizes;
    return this;
  }

   /**
   * Get buildBundleFileSizes
   * @return buildBundleFileSizes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUILD_BUNDLE_FILE_SIZES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BuildBundleRelationshipsBuildBundleFileSizes getBuildBundleFileSizes() {
    return buildBundleFileSizes;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_BUNDLE_FILE_SIZES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildBundleFileSizes(BuildBundleRelationshipsBuildBundleFileSizes buildBundleFileSizes) {
    this.buildBundleFileSizes = buildBundleFileSizes;
  }


  /**
   * Return true if this BuildBundle_relationships object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildBundleRelationships buildBundleRelationships = (BuildBundleRelationships) o;
    return Objects.equals(this.appClipDomainCacheStatus, buildBundleRelationships.appClipDomainCacheStatus) &&
        Objects.equals(this.appClipDomainDebugStatus, buildBundleRelationships.appClipDomainDebugStatus) &&
        Objects.equals(this.betaAppClipInvocations, buildBundleRelationships.betaAppClipInvocations) &&
        Objects.equals(this.buildBundleFileSizes, buildBundleRelationships.buildBundleFileSizes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appClipDomainCacheStatus, appClipDomainDebugStatus, betaAppClipInvocations, buildBundleFileSizes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildBundleRelationships {\n");
    sb.append("    appClipDomainCacheStatus: ").append(toIndentedString(appClipDomainCacheStatus)).append("\n");
    sb.append("    appClipDomainDebugStatus: ").append(toIndentedString(appClipDomainDebugStatus)).append("\n");
    sb.append("    betaAppClipInvocations: ").append(toIndentedString(betaAppClipInvocations)).append("\n");
    sb.append("    buildBundleFileSizes: ").append(toIndentedString(buildBundleFileSizes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

