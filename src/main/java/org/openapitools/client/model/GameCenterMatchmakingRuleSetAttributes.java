/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * GameCenterMatchmakingRuleSetAttributes
 */
@JsonPropertyOrder({
  GameCenterMatchmakingRuleSetAttributes.JSON_PROPERTY_REFERENCE_NAME,
  GameCenterMatchmakingRuleSetAttributes.JSON_PROPERTY_RULE_LANGUAGE_VERSION,
  GameCenterMatchmakingRuleSetAttributes.JSON_PROPERTY_MIN_PLAYERS,
  GameCenterMatchmakingRuleSetAttributes.JSON_PROPERTY_MAX_PLAYERS
})
@JsonTypeName("GameCenterMatchmakingRuleSet_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class GameCenterMatchmakingRuleSetAttributes {
  public static final String JSON_PROPERTY_REFERENCE_NAME = "referenceName";
  private String referenceName;

  public static final String JSON_PROPERTY_RULE_LANGUAGE_VERSION = "ruleLanguageVersion";
  private Integer ruleLanguageVersion;

  public static final String JSON_PROPERTY_MIN_PLAYERS = "minPlayers";
  private Integer minPlayers;

  public static final String JSON_PROPERTY_MAX_PLAYERS = "maxPlayers";
  private Integer maxPlayers;

  public GameCenterMatchmakingRuleSetAttributes() { 
  }

  public GameCenterMatchmakingRuleSetAttributes referenceName(String referenceName) {
    this.referenceName = referenceName;
    return this;
  }

   /**
   * Get referenceName
   * @return referenceName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReferenceName() {
    return referenceName;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceName(String referenceName) {
    this.referenceName = referenceName;
  }


  public GameCenterMatchmakingRuleSetAttributes ruleLanguageVersion(Integer ruleLanguageVersion) {
    this.ruleLanguageVersion = ruleLanguageVersion;
    return this;
  }

   /**
   * Get ruleLanguageVersion
   * @return ruleLanguageVersion
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RULE_LANGUAGE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRuleLanguageVersion() {
    return ruleLanguageVersion;
  }


  @JsonProperty(JSON_PROPERTY_RULE_LANGUAGE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRuleLanguageVersion(Integer ruleLanguageVersion) {
    this.ruleLanguageVersion = ruleLanguageVersion;
  }


  public GameCenterMatchmakingRuleSetAttributes minPlayers(Integer minPlayers) {
    this.minPlayers = minPlayers;
    return this;
  }

   /**
   * Get minPlayers
   * @return minPlayers
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_PLAYERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinPlayers() {
    return minPlayers;
  }


  @JsonProperty(JSON_PROPERTY_MIN_PLAYERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinPlayers(Integer minPlayers) {
    this.minPlayers = minPlayers;
  }


  public GameCenterMatchmakingRuleSetAttributes maxPlayers(Integer maxPlayers) {
    this.maxPlayers = maxPlayers;
    return this;
  }

   /**
   * Get maxPlayers
   * @return maxPlayers
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_PLAYERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxPlayers() {
    return maxPlayers;
  }


  @JsonProperty(JSON_PROPERTY_MAX_PLAYERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxPlayers(Integer maxPlayers) {
    this.maxPlayers = maxPlayers;
  }


  /**
   * Return true if this GameCenterMatchmakingRuleSet_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameCenterMatchmakingRuleSetAttributes gameCenterMatchmakingRuleSetAttributes = (GameCenterMatchmakingRuleSetAttributes) o;
    return Objects.equals(this.referenceName, gameCenterMatchmakingRuleSetAttributes.referenceName) &&
        Objects.equals(this.ruleLanguageVersion, gameCenterMatchmakingRuleSetAttributes.ruleLanguageVersion) &&
        Objects.equals(this.minPlayers, gameCenterMatchmakingRuleSetAttributes.minPlayers) &&
        Objects.equals(this.maxPlayers, gameCenterMatchmakingRuleSetAttributes.maxPlayers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceName, ruleLanguageVersion, minPlayers, maxPlayers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameCenterMatchmakingRuleSetAttributes {\n");
    sb.append("    referenceName: ").append(toIndentedString(referenceName)).append("\n");
    sb.append("    ruleLanguageVersion: ").append(toIndentedString(ruleLanguageVersion)).append("\n");
    sb.append("    minPlayers: ").append(toIndentedString(minPlayers)).append("\n");
    sb.append("    maxPlayers: ").append(toIndentedString(maxPlayers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

