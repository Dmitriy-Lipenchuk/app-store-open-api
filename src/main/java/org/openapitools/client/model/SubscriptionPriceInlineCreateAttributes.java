/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * SubscriptionPriceInlineCreateAttributes
 */
@JsonPropertyOrder({
  SubscriptionPriceInlineCreateAttributes.JSON_PROPERTY_START_DATE,
  SubscriptionPriceInlineCreateAttributes.JSON_PROPERTY_PRESERVE_CURRENT_PRICE
})
@JsonTypeName("SubscriptionPriceInlineCreate_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class SubscriptionPriceInlineCreateAttributes {
  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private LocalDate startDate;

  public static final String JSON_PROPERTY_PRESERVE_CURRENT_PRICE = "preserveCurrentPrice";
  private Boolean preserveCurrentPrice;

  public SubscriptionPriceInlineCreateAttributes() { 
  }

  public SubscriptionPriceInlineCreateAttributes startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }


  public SubscriptionPriceInlineCreateAttributes preserveCurrentPrice(Boolean preserveCurrentPrice) {
    this.preserveCurrentPrice = preserveCurrentPrice;
    return this;
  }

   /**
   * Get preserveCurrentPrice
   * @return preserveCurrentPrice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRESERVE_CURRENT_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPreserveCurrentPrice() {
    return preserveCurrentPrice;
  }


  @JsonProperty(JSON_PROPERTY_PRESERVE_CURRENT_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreserveCurrentPrice(Boolean preserveCurrentPrice) {
    this.preserveCurrentPrice = preserveCurrentPrice;
  }


  /**
   * Return true if this SubscriptionPriceInlineCreate_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionPriceInlineCreateAttributes subscriptionPriceInlineCreateAttributes = (SubscriptionPriceInlineCreateAttributes) o;
    return Objects.equals(this.startDate, subscriptionPriceInlineCreateAttributes.startDate) &&
        Objects.equals(this.preserveCurrentPrice, subscriptionPriceInlineCreateAttributes.preserveCurrentPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startDate, preserveCurrentPrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionPriceInlineCreateAttributes {\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    preserveCurrentPrice: ").append(toIndentedString(preserveCurrentPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

