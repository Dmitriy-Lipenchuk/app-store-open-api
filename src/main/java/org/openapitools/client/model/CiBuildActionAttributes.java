/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CiActionType;
import org.openapitools.client.model.CiCompletionStatus;
import org.openapitools.client.model.CiExecutionProgress;
import org.openapitools.client.model.CiIssueCounts;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * CiBuildActionAttributes
 */
@JsonPropertyOrder({
  CiBuildActionAttributes.JSON_PROPERTY_NAME,
  CiBuildActionAttributes.JSON_PROPERTY_ACTION_TYPE,
  CiBuildActionAttributes.JSON_PROPERTY_STARTED_DATE,
  CiBuildActionAttributes.JSON_PROPERTY_FINISHED_DATE,
  CiBuildActionAttributes.JSON_PROPERTY_ISSUE_COUNTS,
  CiBuildActionAttributes.JSON_PROPERTY_EXECUTION_PROGRESS,
  CiBuildActionAttributes.JSON_PROPERTY_COMPLETION_STATUS,
  CiBuildActionAttributes.JSON_PROPERTY_IS_REQUIRED_TO_PASS
})
@JsonTypeName("CiBuildAction_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class CiBuildActionAttributes {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ACTION_TYPE = "actionType";
  private CiActionType actionType;

  public static final String JSON_PROPERTY_STARTED_DATE = "startedDate";
  private OffsetDateTime startedDate;

  public static final String JSON_PROPERTY_FINISHED_DATE = "finishedDate";
  private OffsetDateTime finishedDate;

  public static final String JSON_PROPERTY_ISSUE_COUNTS = "issueCounts";
  private CiIssueCounts issueCounts;

  public static final String JSON_PROPERTY_EXECUTION_PROGRESS = "executionProgress";
  private CiExecutionProgress executionProgress;

  public static final String JSON_PROPERTY_COMPLETION_STATUS = "completionStatus";
  private CiCompletionStatus completionStatus;

  public static final String JSON_PROPERTY_IS_REQUIRED_TO_PASS = "isRequiredToPass";
  private Boolean isRequiredToPass;

  public CiBuildActionAttributes() { 
  }

  public CiBuildActionAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CiBuildActionAttributes actionType(CiActionType actionType) {
    this.actionType = actionType;
    return this;
  }

   /**
   * Get actionType
   * @return actionType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiActionType getActionType() {
    return actionType;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionType(CiActionType actionType) {
    this.actionType = actionType;
  }


  public CiBuildActionAttributes startedDate(OffsetDateTime startedDate) {
    this.startedDate = startedDate;
    return this;
  }

   /**
   * Get startedDate
   * @return startedDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STARTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartedDate() {
    return startedDate;
  }


  @JsonProperty(JSON_PROPERTY_STARTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartedDate(OffsetDateTime startedDate) {
    this.startedDate = startedDate;
  }


  public CiBuildActionAttributes finishedDate(OffsetDateTime finishedDate) {
    this.finishedDate = finishedDate;
    return this;
  }

   /**
   * Get finishedDate
   * @return finishedDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINISHED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFinishedDate() {
    return finishedDate;
  }


  @JsonProperty(JSON_PROPERTY_FINISHED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinishedDate(OffsetDateTime finishedDate) {
    this.finishedDate = finishedDate;
  }


  public CiBuildActionAttributes issueCounts(CiIssueCounts issueCounts) {
    this.issueCounts = issueCounts;
    return this;
  }

   /**
   * Get issueCounts
   * @return issueCounts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUE_COUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiIssueCounts getIssueCounts() {
    return issueCounts;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE_COUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssueCounts(CiIssueCounts issueCounts) {
    this.issueCounts = issueCounts;
  }


  public CiBuildActionAttributes executionProgress(CiExecutionProgress executionProgress) {
    this.executionProgress = executionProgress;
    return this;
  }

   /**
   * Get executionProgress
   * @return executionProgress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXECUTION_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiExecutionProgress getExecutionProgress() {
    return executionProgress;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTION_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutionProgress(CiExecutionProgress executionProgress) {
    this.executionProgress = executionProgress;
  }


  public CiBuildActionAttributes completionStatus(CiCompletionStatus completionStatus) {
    this.completionStatus = completionStatus;
    return this;
  }

   /**
   * Get completionStatus
   * @return completionStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPLETION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiCompletionStatus getCompletionStatus() {
    return completionStatus;
  }


  @JsonProperty(JSON_PROPERTY_COMPLETION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompletionStatus(CiCompletionStatus completionStatus) {
    this.completionStatus = completionStatus;
  }


  public CiBuildActionAttributes isRequiredToPass(Boolean isRequiredToPass) {
    this.isRequiredToPass = isRequiredToPass;
    return this;
  }

   /**
   * Get isRequiredToPass
   * @return isRequiredToPass
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_REQUIRED_TO_PASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsRequiredToPass() {
    return isRequiredToPass;
  }


  @JsonProperty(JSON_PROPERTY_IS_REQUIRED_TO_PASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsRequiredToPass(Boolean isRequiredToPass) {
    this.isRequiredToPass = isRequiredToPass;
  }


  /**
   * Return true if this CiBuildAction_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CiBuildActionAttributes ciBuildActionAttributes = (CiBuildActionAttributes) o;
    return Objects.equals(this.name, ciBuildActionAttributes.name) &&
        Objects.equals(this.actionType, ciBuildActionAttributes.actionType) &&
        Objects.equals(this.startedDate, ciBuildActionAttributes.startedDate) &&
        Objects.equals(this.finishedDate, ciBuildActionAttributes.finishedDate) &&
        Objects.equals(this.issueCounts, ciBuildActionAttributes.issueCounts) &&
        Objects.equals(this.executionProgress, ciBuildActionAttributes.executionProgress) &&
        Objects.equals(this.completionStatus, ciBuildActionAttributes.completionStatus) &&
        Objects.equals(this.isRequiredToPass, ciBuildActionAttributes.isRequiredToPass);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, actionType, startedDate, finishedDate, issueCounts, executionProgress, completionStatus, isRequiredToPass);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CiBuildActionAttributes {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    actionType: ").append(toIndentedString(actionType)).append("\n");
    sb.append("    startedDate: ").append(toIndentedString(startedDate)).append("\n");
    sb.append("    finishedDate: ").append(toIndentedString(finishedDate)).append("\n");
    sb.append("    issueCounts: ").append(toIndentedString(issueCounts)).append("\n");
    sb.append("    executionProgress: ").append(toIndentedString(executionProgress)).append("\n");
    sb.append("    completionStatus: ").append(toIndentedString(completionStatus)).append("\n");
    sb.append("    isRequiredToPass: ").append(toIndentedString(isRequiredToPass)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

