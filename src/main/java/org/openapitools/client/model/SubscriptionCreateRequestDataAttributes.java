/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * SubscriptionCreateRequestDataAttributes
 */
@JsonPropertyOrder({
  SubscriptionCreateRequestDataAttributes.JSON_PROPERTY_NAME,
  SubscriptionCreateRequestDataAttributes.JSON_PROPERTY_PRODUCT_ID,
  SubscriptionCreateRequestDataAttributes.JSON_PROPERTY_FAMILY_SHARABLE,
  SubscriptionCreateRequestDataAttributes.JSON_PROPERTY_SUBSCRIPTION_PERIOD,
  SubscriptionCreateRequestDataAttributes.JSON_PROPERTY_REVIEW_NOTE,
  SubscriptionCreateRequestDataAttributes.JSON_PROPERTY_GROUP_LEVEL
})
@JsonTypeName("SubscriptionCreateRequest_data_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class SubscriptionCreateRequestDataAttributes {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PRODUCT_ID = "productId";
  private String productId;

  public static final String JSON_PROPERTY_FAMILY_SHARABLE = "familySharable";
  private Boolean familySharable;

  /**
   * Gets or Sets subscriptionPeriod
   */
  public enum SubscriptionPeriodEnum {
    ONE_WEEK("ONE_WEEK"),
    
    ONE_MONTH("ONE_MONTH"),
    
    TWO_MONTHS("TWO_MONTHS"),
    
    THREE_MONTHS("THREE_MONTHS"),
    
    SIX_MONTHS("SIX_MONTHS"),
    
    ONE_YEAR("ONE_YEAR");

    private String value;

    SubscriptionPeriodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SubscriptionPeriodEnum fromValue(String value) {
      for (SubscriptionPeriodEnum b : SubscriptionPeriodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SUBSCRIPTION_PERIOD = "subscriptionPeriod";
  private SubscriptionPeriodEnum subscriptionPeriod;

  public static final String JSON_PROPERTY_REVIEW_NOTE = "reviewNote";
  private String reviewNote;

  public static final String JSON_PROPERTY_GROUP_LEVEL = "groupLevel";
  private Integer groupLevel;

  public SubscriptionCreateRequestDataAttributes() { 
  }

  public SubscriptionCreateRequestDataAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public SubscriptionCreateRequestDataAttributes productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProductId() {
    return productId;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductId(String productId) {
    this.productId = productId;
  }


  public SubscriptionCreateRequestDataAttributes familySharable(Boolean familySharable) {
    this.familySharable = familySharable;
    return this;
  }

   /**
   * Get familySharable
   * @return familySharable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAMILY_SHARABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFamilySharable() {
    return familySharable;
  }


  @JsonProperty(JSON_PROPERTY_FAMILY_SHARABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFamilySharable(Boolean familySharable) {
    this.familySharable = familySharable;
  }


  public SubscriptionCreateRequestDataAttributes subscriptionPeriod(SubscriptionPeriodEnum subscriptionPeriod) {
    this.subscriptionPeriod = subscriptionPeriod;
    return this;
  }

   /**
   * Get subscriptionPeriod
   * @return subscriptionPeriod
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SubscriptionPeriodEnum getSubscriptionPeriod() {
    return subscriptionPeriod;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionPeriod(SubscriptionPeriodEnum subscriptionPeriod) {
    this.subscriptionPeriod = subscriptionPeriod;
  }


  public SubscriptionCreateRequestDataAttributes reviewNote(String reviewNote) {
    this.reviewNote = reviewNote;
    return this;
  }

   /**
   * Get reviewNote
   * @return reviewNote
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVIEW_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReviewNote() {
    return reviewNote;
  }


  @JsonProperty(JSON_PROPERTY_REVIEW_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReviewNote(String reviewNote) {
    this.reviewNote = reviewNote;
  }


  public SubscriptionCreateRequestDataAttributes groupLevel(Integer groupLevel) {
    this.groupLevel = groupLevel;
    return this;
  }

   /**
   * Get groupLevel
   * @return groupLevel
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGroupLevel() {
    return groupLevel;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupLevel(Integer groupLevel) {
    this.groupLevel = groupLevel;
  }


  /**
   * Return true if this SubscriptionCreateRequest_data_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionCreateRequestDataAttributes subscriptionCreateRequestDataAttributes = (SubscriptionCreateRequestDataAttributes) o;
    return Objects.equals(this.name, subscriptionCreateRequestDataAttributes.name) &&
        Objects.equals(this.productId, subscriptionCreateRequestDataAttributes.productId) &&
        Objects.equals(this.familySharable, subscriptionCreateRequestDataAttributes.familySharable) &&
        Objects.equals(this.subscriptionPeriod, subscriptionCreateRequestDataAttributes.subscriptionPeriod) &&
        Objects.equals(this.reviewNote, subscriptionCreateRequestDataAttributes.reviewNote) &&
        Objects.equals(this.groupLevel, subscriptionCreateRequestDataAttributes.groupLevel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, productId, familySharable, subscriptionPeriod, reviewNote, groupLevel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionCreateRequestDataAttributes {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    familySharable: ").append(toIndentedString(familySharable)).append("\n");
    sb.append("    subscriptionPeriod: ").append(toIndentedString(subscriptionPeriod)).append("\n");
    sb.append("    reviewNote: ").append(toIndentedString(reviewNote)).append("\n");
    sb.append("    groupLevel: ").append(toIndentedString(groupLevel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

