/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * GameCenterDetailAttributes
 */
@JsonPropertyOrder({
  GameCenterDetailAttributes.JSON_PROPERTY_ARCADE_ENABLED,
  GameCenterDetailAttributes.JSON_PROPERTY_CHALLENGE_ENABLED
})
@JsonTypeName("GameCenterDetail_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class GameCenterDetailAttributes {
  public static final String JSON_PROPERTY_ARCADE_ENABLED = "arcadeEnabled";
  private Boolean arcadeEnabled;

  public static final String JSON_PROPERTY_CHALLENGE_ENABLED = "challengeEnabled";
  private Boolean challengeEnabled;

  public GameCenterDetailAttributes() { 
  }

  public GameCenterDetailAttributes arcadeEnabled(Boolean arcadeEnabled) {
    this.arcadeEnabled = arcadeEnabled;
    return this;
  }

   /**
   * Get arcadeEnabled
   * @return arcadeEnabled
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCADE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getArcadeEnabled() {
    return arcadeEnabled;
  }


  @JsonProperty(JSON_PROPERTY_ARCADE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArcadeEnabled(Boolean arcadeEnabled) {
    this.arcadeEnabled = arcadeEnabled;
  }


  public GameCenterDetailAttributes challengeEnabled(Boolean challengeEnabled) {
    this.challengeEnabled = challengeEnabled;
    return this;
  }

   /**
   * Get challengeEnabled
   * @return challengeEnabled
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHALLENGE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getChallengeEnabled() {
    return challengeEnabled;
  }


  @JsonProperty(JSON_PROPERTY_CHALLENGE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChallengeEnabled(Boolean challengeEnabled) {
    this.challengeEnabled = challengeEnabled;
  }


  /**
   * Return true if this GameCenterDetail_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameCenterDetailAttributes gameCenterDetailAttributes = (GameCenterDetailAttributes) o;
    return Objects.equals(this.arcadeEnabled, gameCenterDetailAttributes.arcadeEnabled) &&
        Objects.equals(this.challengeEnabled, gameCenterDetailAttributes.challengeEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arcadeEnabled, challengeEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameCenterDetailAttributes {\n");
    sb.append("    arcadeEnabled: ").append(toIndentedString(arcadeEnabled)).append("\n");
    sb.append("    challengeEnabled: ").append(toIndentedString(challengeEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

