/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * GameCenterAchievementLocalizationAttributes
 */
@JsonPropertyOrder({
  GameCenterAchievementLocalizationAttributes.JSON_PROPERTY_LOCALE,
  GameCenterAchievementLocalizationAttributes.JSON_PROPERTY_NAME,
  GameCenterAchievementLocalizationAttributes.JSON_PROPERTY_BEFORE_EARNED_DESCRIPTION,
  GameCenterAchievementLocalizationAttributes.JSON_PROPERTY_AFTER_EARNED_DESCRIPTION
})
@JsonTypeName("GameCenterAchievementLocalization_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class GameCenterAchievementLocalizationAttributes {
  public static final String JSON_PROPERTY_LOCALE = "locale";
  private String locale;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_BEFORE_EARNED_DESCRIPTION = "beforeEarnedDescription";
  private String beforeEarnedDescription;

  public static final String JSON_PROPERTY_AFTER_EARNED_DESCRIPTION = "afterEarnedDescription";
  private String afterEarnedDescription;

  public GameCenterAchievementLocalizationAttributes() { 
  }

  public GameCenterAchievementLocalizationAttributes locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocale() {
    return locale;
  }


  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocale(String locale) {
    this.locale = locale;
  }


  public GameCenterAchievementLocalizationAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public GameCenterAchievementLocalizationAttributes beforeEarnedDescription(String beforeEarnedDescription) {
    this.beforeEarnedDescription = beforeEarnedDescription;
    return this;
  }

   /**
   * Get beforeEarnedDescription
   * @return beforeEarnedDescription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BEFORE_EARNED_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBeforeEarnedDescription() {
    return beforeEarnedDescription;
  }


  @JsonProperty(JSON_PROPERTY_BEFORE_EARNED_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeforeEarnedDescription(String beforeEarnedDescription) {
    this.beforeEarnedDescription = beforeEarnedDescription;
  }


  public GameCenterAchievementLocalizationAttributes afterEarnedDescription(String afterEarnedDescription) {
    this.afterEarnedDescription = afterEarnedDescription;
    return this;
  }

   /**
   * Get afterEarnedDescription
   * @return afterEarnedDescription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AFTER_EARNED_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAfterEarnedDescription() {
    return afterEarnedDescription;
  }


  @JsonProperty(JSON_PROPERTY_AFTER_EARNED_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAfterEarnedDescription(String afterEarnedDescription) {
    this.afterEarnedDescription = afterEarnedDescription;
  }


  /**
   * Return true if this GameCenterAchievementLocalization_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameCenterAchievementLocalizationAttributes gameCenterAchievementLocalizationAttributes = (GameCenterAchievementLocalizationAttributes) o;
    return Objects.equals(this.locale, gameCenterAchievementLocalizationAttributes.locale) &&
        Objects.equals(this.name, gameCenterAchievementLocalizationAttributes.name) &&
        Objects.equals(this.beforeEarnedDescription, gameCenterAchievementLocalizationAttributes.beforeEarnedDescription) &&
        Objects.equals(this.afterEarnedDescription, gameCenterAchievementLocalizationAttributes.afterEarnedDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locale, name, beforeEarnedDescription, afterEarnedDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameCenterAchievementLocalizationAttributes {\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    beforeEarnedDescription: ").append(toIndentedString(beforeEarnedDescription)).append("\n");
    sb.append("    afterEarnedDescription: ").append(toIndentedString(afterEarnedDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

