/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.SubscriptionGracePeriodDuration;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * SubscriptionGracePeriodAttributes
 */
@JsonPropertyOrder({
  SubscriptionGracePeriodAttributes.JSON_PROPERTY_OPT_IN,
  SubscriptionGracePeriodAttributes.JSON_PROPERTY_SANDBOX_OPT_IN,
  SubscriptionGracePeriodAttributes.JSON_PROPERTY_DURATION,
  SubscriptionGracePeriodAttributes.JSON_PROPERTY_RENEWAL_TYPE
})
@JsonTypeName("SubscriptionGracePeriod_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class SubscriptionGracePeriodAttributes {
  public static final String JSON_PROPERTY_OPT_IN = "optIn";
  private Boolean optIn;

  public static final String JSON_PROPERTY_SANDBOX_OPT_IN = "sandboxOptIn";
  private Boolean sandboxOptIn;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private SubscriptionGracePeriodDuration duration;

  /**
   * Gets or Sets renewalType
   */
  public enum RenewalTypeEnum {
    ALL_RENEWALS("ALL_RENEWALS"),
    
    PAID_TO_PAID_ONLY("PAID_TO_PAID_ONLY");

    private String value;

    RenewalTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RenewalTypeEnum fromValue(String value) {
      for (RenewalTypeEnum b : RenewalTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RENEWAL_TYPE = "renewalType";
  private RenewalTypeEnum renewalType;

  public SubscriptionGracePeriodAttributes() { 
  }

  public SubscriptionGracePeriodAttributes optIn(Boolean optIn) {
    this.optIn = optIn;
    return this;
  }

   /**
   * Get optIn
   * @return optIn
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptIn() {
    return optIn;
  }


  @JsonProperty(JSON_PROPERTY_OPT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptIn(Boolean optIn) {
    this.optIn = optIn;
  }


  public SubscriptionGracePeriodAttributes sandboxOptIn(Boolean sandboxOptIn) {
    this.sandboxOptIn = sandboxOptIn;
    return this;
  }

   /**
   * Get sandboxOptIn
   * @return sandboxOptIn
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SANDBOX_OPT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSandboxOptIn() {
    return sandboxOptIn;
  }


  @JsonProperty(JSON_PROPERTY_SANDBOX_OPT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSandboxOptIn(Boolean sandboxOptIn) {
    this.sandboxOptIn = sandboxOptIn;
  }


  public SubscriptionGracePeriodAttributes duration(SubscriptionGracePeriodDuration duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SubscriptionGracePeriodDuration getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDuration(SubscriptionGracePeriodDuration duration) {
    this.duration = duration;
  }


  public SubscriptionGracePeriodAttributes renewalType(RenewalTypeEnum renewalType) {
    this.renewalType = renewalType;
    return this;
  }

   /**
   * Get renewalType
   * @return renewalType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RENEWAL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RenewalTypeEnum getRenewalType() {
    return renewalType;
  }


  @JsonProperty(JSON_PROPERTY_RENEWAL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRenewalType(RenewalTypeEnum renewalType) {
    this.renewalType = renewalType;
  }


  /**
   * Return true if this SubscriptionGracePeriod_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionGracePeriodAttributes subscriptionGracePeriodAttributes = (SubscriptionGracePeriodAttributes) o;
    return Objects.equals(this.optIn, subscriptionGracePeriodAttributes.optIn) &&
        Objects.equals(this.sandboxOptIn, subscriptionGracePeriodAttributes.sandboxOptIn) &&
        Objects.equals(this.duration, subscriptionGracePeriodAttributes.duration) &&
        Objects.equals(this.renewalType, subscriptionGracePeriodAttributes.renewalType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(optIn, sandboxOptIn, duration, renewalType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionGracePeriodAttributes {\n");
    sb.append("    optIn: ").append(toIndentedString(optIn)).append("\n");
    sb.append("    sandboxOptIn: ").append(toIndentedString(sandboxOptIn)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    renewalType: ").append(toIndentedString(renewalType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

