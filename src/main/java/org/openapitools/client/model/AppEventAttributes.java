/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AppEventAttributesTerritorySchedulesInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * AppEventAttributes
 */
@JsonPropertyOrder({
  AppEventAttributes.JSON_PROPERTY_REFERENCE_NAME,
  AppEventAttributes.JSON_PROPERTY_BADGE,
  AppEventAttributes.JSON_PROPERTY_EVENT_STATE,
  AppEventAttributes.JSON_PROPERTY_DEEP_LINK,
  AppEventAttributes.JSON_PROPERTY_PURCHASE_REQUIREMENT,
  AppEventAttributes.JSON_PROPERTY_PRIMARY_LOCALE,
  AppEventAttributes.JSON_PROPERTY_PRIORITY,
  AppEventAttributes.JSON_PROPERTY_PURPOSE,
  AppEventAttributes.JSON_PROPERTY_TERRITORY_SCHEDULES,
  AppEventAttributes.JSON_PROPERTY_ARCHIVED_TERRITORY_SCHEDULES
})
@JsonTypeName("AppEvent_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class AppEventAttributes {
  public static final String JSON_PROPERTY_REFERENCE_NAME = "referenceName";
  private String referenceName;

  /**
   * Gets or Sets badge
   */
  public enum BadgeEnum {
    LIVE_EVENT("LIVE_EVENT"),
    
    PREMIERE("PREMIERE"),
    
    CHALLENGE("CHALLENGE"),
    
    COMPETITION("COMPETITION"),
    
    NEW_SEASON("NEW_SEASON"),
    
    MAJOR_UPDATE("MAJOR_UPDATE"),
    
    SPECIAL_EVENT("SPECIAL_EVENT");

    private String value;

    BadgeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BadgeEnum fromValue(String value) {
      for (BadgeEnum b : BadgeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_BADGE = "badge";
  private BadgeEnum badge;

  /**
   * Gets or Sets eventState
   */
  public enum EventStateEnum {
    DRAFT("DRAFT"),
    
    READY_FOR_REVIEW("READY_FOR_REVIEW"),
    
    WAITING_FOR_REVIEW("WAITING_FOR_REVIEW"),
    
    IN_REVIEW("IN_REVIEW"),
    
    REJECTED("REJECTED"),
    
    ACCEPTED("ACCEPTED"),
    
    APPROVED("APPROVED"),
    
    PUBLISHED("PUBLISHED"),
    
    PAST("PAST"),
    
    ARCHIVED("ARCHIVED");

    private String value;

    EventStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EventStateEnum fromValue(String value) {
      for (EventStateEnum b : EventStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EVENT_STATE = "eventState";
  private EventStateEnum eventState;

  public static final String JSON_PROPERTY_DEEP_LINK = "deepLink";
  private URI deepLink;

  /**
   * Gets or Sets purchaseRequirement
   */
  public enum PurchaseRequirementEnum {
    NO_COST_ASSOCIATED("NO_COST_ASSOCIATED"),
    
    IN_APP_PURCHASE("IN_APP_PURCHASE"),
    
    SUBSCRIPTION("SUBSCRIPTION"),
    
    IN_APP_PURCHASE_AND_SUBSCRIPTION("IN_APP_PURCHASE_AND_SUBSCRIPTION"),
    
    IN_APP_PURCHASE_OR_SUBSCRIPTION("IN_APP_PURCHASE_OR_SUBSCRIPTION");

    private String value;

    PurchaseRequirementEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PurchaseRequirementEnum fromValue(String value) {
      for (PurchaseRequirementEnum b : PurchaseRequirementEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PURCHASE_REQUIREMENT = "purchaseRequirement";
  private PurchaseRequirementEnum purchaseRequirement;

  public static final String JSON_PROPERTY_PRIMARY_LOCALE = "primaryLocale";
  private String primaryLocale;

  /**
   * Gets or Sets priority
   */
  public enum PriorityEnum {
    HIGH("HIGH"),
    
    NORMAL("NORMAL");

    private String value;

    PriorityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PriorityEnum fromValue(String value) {
      for (PriorityEnum b : PriorityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PRIORITY = "priority";
  private PriorityEnum priority;

  /**
   * Gets or Sets purpose
   */
  public enum PurposeEnum {
    APPROPRIATE_FOR_ALL_USERS("APPROPRIATE_FOR_ALL_USERS"),
    
    ATTRACT_NEW_USERS("ATTRACT_NEW_USERS"),
    
    KEEP_ACTIVE_USERS_INFORMED("KEEP_ACTIVE_USERS_INFORMED"),
    
    BRING_BACK_LAPSED_USERS("BRING_BACK_LAPSED_USERS");

    private String value;

    PurposeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PurposeEnum fromValue(String value) {
      for (PurposeEnum b : PurposeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PURPOSE = "purpose";
  private PurposeEnum purpose;

  public static final String JSON_PROPERTY_TERRITORY_SCHEDULES = "territorySchedules";
  private List<AppEventAttributesTerritorySchedulesInner> territorySchedules = new ArrayList<>();

  public static final String JSON_PROPERTY_ARCHIVED_TERRITORY_SCHEDULES = "archivedTerritorySchedules";
  private List<AppEventAttributesTerritorySchedulesInner> archivedTerritorySchedules = new ArrayList<>();

  public AppEventAttributes() { 
  }

  public AppEventAttributes referenceName(String referenceName) {
    this.referenceName = referenceName;
    return this;
  }

   /**
   * Get referenceName
   * @return referenceName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReferenceName() {
    return referenceName;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceName(String referenceName) {
    this.referenceName = referenceName;
  }


  public AppEventAttributes badge(BadgeEnum badge) {
    this.badge = badge;
    return this;
  }

   /**
   * Get badge
   * @return badge
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BADGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BadgeEnum getBadge() {
    return badge;
  }


  @JsonProperty(JSON_PROPERTY_BADGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBadge(BadgeEnum badge) {
    this.badge = badge;
  }


  public AppEventAttributes eventState(EventStateEnum eventState) {
    this.eventState = eventState;
    return this;
  }

   /**
   * Get eventState
   * @return eventState
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EventStateEnum getEventState() {
    return eventState;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventState(EventStateEnum eventState) {
    this.eventState = eventState;
  }


  public AppEventAttributes deepLink(URI deepLink) {
    this.deepLink = deepLink;
    return this;
  }

   /**
   * Get deepLink
   * @return deepLink
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEEP_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getDeepLink() {
    return deepLink;
  }


  @JsonProperty(JSON_PROPERTY_DEEP_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeepLink(URI deepLink) {
    this.deepLink = deepLink;
  }


  public AppEventAttributes purchaseRequirement(PurchaseRequirementEnum purchaseRequirement) {
    this.purchaseRequirement = purchaseRequirement;
    return this;
  }

   /**
   * Get purchaseRequirement
   * @return purchaseRequirement
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASE_REQUIREMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PurchaseRequirementEnum getPurchaseRequirement() {
    return purchaseRequirement;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_REQUIREMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchaseRequirement(PurchaseRequirementEnum purchaseRequirement) {
    this.purchaseRequirement = purchaseRequirement;
  }


  public AppEventAttributes primaryLocale(String primaryLocale) {
    this.primaryLocale = primaryLocale;
    return this;
  }

   /**
   * Get primaryLocale
   * @return primaryLocale
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIMARY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrimaryLocale() {
    return primaryLocale;
  }


  @JsonProperty(JSON_PROPERTY_PRIMARY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrimaryLocale(String primaryLocale) {
    this.primaryLocale = primaryLocale;
  }


  public AppEventAttributes priority(PriorityEnum priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PriorityEnum getPriority() {
    return priority;
  }


  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriority(PriorityEnum priority) {
    this.priority = priority;
  }


  public AppEventAttributes purpose(PurposeEnum purpose) {
    this.purpose = purpose;
    return this;
  }

   /**
   * Get purpose
   * @return purpose
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PurposeEnum getPurpose() {
    return purpose;
  }


  @JsonProperty(JSON_PROPERTY_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurpose(PurposeEnum purpose) {
    this.purpose = purpose;
  }


  public AppEventAttributes territorySchedules(List<AppEventAttributesTerritorySchedulesInner> territorySchedules) {
    this.territorySchedules = territorySchedules;
    return this;
  }

  public AppEventAttributes addTerritorySchedulesItem(AppEventAttributesTerritorySchedulesInner territorySchedulesItem) {
    if (this.territorySchedules == null) {
      this.territorySchedules = new ArrayList<>();
    }
    this.territorySchedules.add(territorySchedulesItem);
    return this;
  }

   /**
   * Get territorySchedules
   * @return territorySchedules
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TERRITORY_SCHEDULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AppEventAttributesTerritorySchedulesInner> getTerritorySchedules() {
    return territorySchedules;
  }


  @JsonProperty(JSON_PROPERTY_TERRITORY_SCHEDULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTerritorySchedules(List<AppEventAttributesTerritorySchedulesInner> territorySchedules) {
    this.territorySchedules = territorySchedules;
  }


  public AppEventAttributes archivedTerritorySchedules(List<AppEventAttributesTerritorySchedulesInner> archivedTerritorySchedules) {
    this.archivedTerritorySchedules = archivedTerritorySchedules;
    return this;
  }

  public AppEventAttributes addArchivedTerritorySchedulesItem(AppEventAttributesTerritorySchedulesInner archivedTerritorySchedulesItem) {
    if (this.archivedTerritorySchedules == null) {
      this.archivedTerritorySchedules = new ArrayList<>();
    }
    this.archivedTerritorySchedules.add(archivedTerritorySchedulesItem);
    return this;
  }

   /**
   * Get archivedTerritorySchedules
   * @return archivedTerritorySchedules
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCHIVED_TERRITORY_SCHEDULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AppEventAttributesTerritorySchedulesInner> getArchivedTerritorySchedules() {
    return archivedTerritorySchedules;
  }


  @JsonProperty(JSON_PROPERTY_ARCHIVED_TERRITORY_SCHEDULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArchivedTerritorySchedules(List<AppEventAttributesTerritorySchedulesInner> archivedTerritorySchedules) {
    this.archivedTerritorySchedules = archivedTerritorySchedules;
  }


  /**
   * Return true if this AppEvent_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppEventAttributes appEventAttributes = (AppEventAttributes) o;
    return Objects.equals(this.referenceName, appEventAttributes.referenceName) &&
        Objects.equals(this.badge, appEventAttributes.badge) &&
        Objects.equals(this.eventState, appEventAttributes.eventState) &&
        Objects.equals(this.deepLink, appEventAttributes.deepLink) &&
        Objects.equals(this.purchaseRequirement, appEventAttributes.purchaseRequirement) &&
        Objects.equals(this.primaryLocale, appEventAttributes.primaryLocale) &&
        Objects.equals(this.priority, appEventAttributes.priority) &&
        Objects.equals(this.purpose, appEventAttributes.purpose) &&
        Objects.equals(this.territorySchedules, appEventAttributes.territorySchedules) &&
        Objects.equals(this.archivedTerritorySchedules, appEventAttributes.archivedTerritorySchedules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceName, badge, eventState, deepLink, purchaseRequirement, primaryLocale, priority, purpose, territorySchedules, archivedTerritorySchedules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppEventAttributes {\n");
    sb.append("    referenceName: ").append(toIndentedString(referenceName)).append("\n");
    sb.append("    badge: ").append(toIndentedString(badge)).append("\n");
    sb.append("    eventState: ").append(toIndentedString(eventState)).append("\n");
    sb.append("    deepLink: ").append(toIndentedString(deepLink)).append("\n");
    sb.append("    purchaseRequirement: ").append(toIndentedString(purchaseRequirement)).append("\n");
    sb.append("    primaryLocale: ").append(toIndentedString(primaryLocale)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    territorySchedules: ").append(toIndentedString(territorySchedules)).append("\n");
    sb.append("    archivedTerritorySchedules: ").append(toIndentedString(archivedTerritorySchedules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

