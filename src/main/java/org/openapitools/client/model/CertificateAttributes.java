/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.BundleIdPlatform;
import org.openapitools.client.model.CertificateType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * CertificateAttributes
 */
@JsonPropertyOrder({
  CertificateAttributes.JSON_PROPERTY_NAME,
  CertificateAttributes.JSON_PROPERTY_CERTIFICATE_TYPE,
  CertificateAttributes.JSON_PROPERTY_DISPLAY_NAME,
  CertificateAttributes.JSON_PROPERTY_SERIAL_NUMBER,
  CertificateAttributes.JSON_PROPERTY_PLATFORM,
  CertificateAttributes.JSON_PROPERTY_EXPIRATION_DATE,
  CertificateAttributes.JSON_PROPERTY_CERTIFICATE_CONTENT
})
@JsonTypeName("Certificate_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class CertificateAttributes {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CERTIFICATE_TYPE = "certificateType";
  private CertificateType certificateType;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_SERIAL_NUMBER = "serialNumber";
  private String serialNumber;

  public static final String JSON_PROPERTY_PLATFORM = "platform";
  private BundleIdPlatform platform;

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expirationDate";
  private OffsetDateTime expirationDate;

  public static final String JSON_PROPERTY_CERTIFICATE_CONTENT = "certificateContent";
  private String certificateContent;

  public CertificateAttributes() { 
  }

  public CertificateAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CertificateAttributes certificateType(CertificateType certificateType) {
    this.certificateType = certificateType;
    return this;
  }

   /**
   * Get certificateType
   * @return certificateType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CERTIFICATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CertificateType getCertificateType() {
    return certificateType;
  }


  @JsonProperty(JSON_PROPERTY_CERTIFICATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCertificateType(CertificateType certificateType) {
    this.certificateType = certificateType;
  }


  public CertificateAttributes displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CertificateAttributes serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Get serialNumber
   * @return serialNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSerialNumber() {
    return serialNumber;
  }


  @JsonProperty(JSON_PROPERTY_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }


  public CertificateAttributes platform(BundleIdPlatform platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BundleIdPlatform getPlatform() {
    return platform;
  }


  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlatform(BundleIdPlatform platform) {
    this.platform = platform;
  }


  public CertificateAttributes expirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }


  public CertificateAttributes certificateContent(String certificateContent) {
    this.certificateContent = certificateContent;
    return this;
  }

   /**
   * Get certificateContent
   * @return certificateContent
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CERTIFICATE_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCertificateContent() {
    return certificateContent;
  }


  @JsonProperty(JSON_PROPERTY_CERTIFICATE_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCertificateContent(String certificateContent) {
    this.certificateContent = certificateContent;
  }


  /**
   * Return true if this Certificate_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificateAttributes certificateAttributes = (CertificateAttributes) o;
    return Objects.equals(this.name, certificateAttributes.name) &&
        Objects.equals(this.certificateType, certificateAttributes.certificateType) &&
        Objects.equals(this.displayName, certificateAttributes.displayName) &&
        Objects.equals(this.serialNumber, certificateAttributes.serialNumber) &&
        Objects.equals(this.platform, certificateAttributes.platform) &&
        Objects.equals(this.expirationDate, certificateAttributes.expirationDate) &&
        Objects.equals(this.certificateContent, certificateAttributes.certificateContent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, certificateType, displayName, serialNumber, platform, expirationDate, certificateContent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificateAttributes {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    certificateType: ").append(toIndentedString(certificateType)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    certificateContent: ").append(toIndentedString(certificateContent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

