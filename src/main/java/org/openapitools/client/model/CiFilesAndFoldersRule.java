/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CiStartConditionFileMatcher;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * CiFilesAndFoldersRule
 */
@JsonPropertyOrder({
  CiFilesAndFoldersRule.JSON_PROPERTY_MODE,
  CiFilesAndFoldersRule.JSON_PROPERTY_MATCHERS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class CiFilesAndFoldersRule {
  /**
   * Gets or Sets mode
   */
  public enum ModeEnum {
    START_IF_ANY_FILE_MATCHES("START_IF_ANY_FILE_MATCHES"),
    
    DO_NOT_START_IF_ALL_FILES_MATCH("DO_NOT_START_IF_ALL_FILES_MATCH");

    private String value;

    ModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ModeEnum fromValue(String value) {
      for (ModeEnum b : ModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MODE = "mode";
  private ModeEnum mode;

  public static final String JSON_PROPERTY_MATCHERS = "matchers";
  private List<CiStartConditionFileMatcher> matchers = new ArrayList<>();

  public CiFilesAndFoldersRule() { 
  }

  public CiFilesAndFoldersRule mode(ModeEnum mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ModeEnum getMode() {
    return mode;
  }


  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }


  public CiFilesAndFoldersRule matchers(List<CiStartConditionFileMatcher> matchers) {
    this.matchers = matchers;
    return this;
  }

  public CiFilesAndFoldersRule addMatchersItem(CiStartConditionFileMatcher matchersItem) {
    if (this.matchers == null) {
      this.matchers = new ArrayList<>();
    }
    this.matchers.add(matchersItem);
    return this;
  }

   /**
   * Get matchers
   * @return matchers
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATCHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CiStartConditionFileMatcher> getMatchers() {
    return matchers;
  }


  @JsonProperty(JSON_PROPERTY_MATCHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatchers(List<CiStartConditionFileMatcher> matchers) {
    this.matchers = matchers;
  }


  /**
   * Return true if this CiFilesAndFoldersRule object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CiFilesAndFoldersRule ciFilesAndFoldersRule = (CiFilesAndFoldersRule) o;
    return Objects.equals(this.mode, ciFilesAndFoldersRule.mode) &&
        Objects.equals(this.matchers, ciFilesAndFoldersRule.matchers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mode, matchers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CiFilesAndFoldersRule {\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    matchers: ").append(toIndentedString(matchers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

