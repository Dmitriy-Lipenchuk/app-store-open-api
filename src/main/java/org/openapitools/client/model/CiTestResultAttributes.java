/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CiTestResultAttributesDestinationTestResultsInner;
import org.openapitools.client.model.CiTestStatus;
import org.openapitools.client.model.FileLocation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.client.JSON;


/**
 * CiTestResultAttributes
 */
@JsonPropertyOrder({
  CiTestResultAttributes.JSON_PROPERTY_CLASS_NAME,
  CiTestResultAttributes.JSON_PROPERTY_NAME,
  CiTestResultAttributes.JSON_PROPERTY_STATUS,
  CiTestResultAttributes.JSON_PROPERTY_FILE_SOURCE,
  CiTestResultAttributes.JSON_PROPERTY_MESSAGE,
  CiTestResultAttributes.JSON_PROPERTY_DESTINATION_TEST_RESULTS
})
@JsonTypeName("CiTestResult_attributes")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T23:41:20.466109+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class CiTestResultAttributes {
  public static final String JSON_PROPERTY_CLASS_NAME = "className";
  private String className;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_STATUS = "status";
  private CiTestStatus status;

  public static final String JSON_PROPERTY_FILE_SOURCE = "fileSource";
  private FileLocation fileSource;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_DESTINATION_TEST_RESULTS = "destinationTestResults";
  private List<CiTestResultAttributesDestinationTestResultsInner> destinationTestResults = new ArrayList<>();

  public CiTestResultAttributes() { 
  }

  public CiTestResultAttributes className(String className) {
    this.className = className;
    return this;
  }

   /**
   * Get className
   * @return className
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClassName() {
    return className;
  }


  @JsonProperty(JSON_PROPERTY_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClassName(String className) {
    this.className = className;
  }


  public CiTestResultAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CiTestResultAttributes status(CiTestStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CiTestStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(CiTestStatus status) {
    this.status = status;
  }


  public CiTestResultAttributes fileSource(FileLocation fileSource) {
    this.fileSource = fileSource;
    return this;
  }

   /**
   * Get fileSource
   * @return fileSource
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FileLocation getFileSource() {
    return fileSource;
  }


  @JsonProperty(JSON_PROPERTY_FILE_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileSource(FileLocation fileSource) {
    this.fileSource = fileSource;
  }


  public CiTestResultAttributes message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }


  public CiTestResultAttributes destinationTestResults(List<CiTestResultAttributesDestinationTestResultsInner> destinationTestResults) {
    this.destinationTestResults = destinationTestResults;
    return this;
  }

  public CiTestResultAttributes addDestinationTestResultsItem(CiTestResultAttributesDestinationTestResultsInner destinationTestResultsItem) {
    if (this.destinationTestResults == null) {
      this.destinationTestResults = new ArrayList<>();
    }
    this.destinationTestResults.add(destinationTestResultsItem);
    return this;
  }

   /**
   * Get destinationTestResults
   * @return destinationTestResults
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESTINATION_TEST_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CiTestResultAttributesDestinationTestResultsInner> getDestinationTestResults() {
    return destinationTestResults;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_TEST_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestinationTestResults(List<CiTestResultAttributesDestinationTestResultsInner> destinationTestResults) {
    this.destinationTestResults = destinationTestResults;
  }


  /**
   * Return true if this CiTestResult_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CiTestResultAttributes ciTestResultAttributes = (CiTestResultAttributes) o;
    return Objects.equals(this.className, ciTestResultAttributes.className) &&
        Objects.equals(this.name, ciTestResultAttributes.name) &&
        Objects.equals(this.status, ciTestResultAttributes.status) &&
        Objects.equals(this.fileSource, ciTestResultAttributes.fileSource) &&
        Objects.equals(this.message, ciTestResultAttributes.message) &&
        Objects.equals(this.destinationTestResults, ciTestResultAttributes.destinationTestResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(className, name, status, fileSource, message, destinationTestResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CiTestResultAttributes {\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    fileSource: ").append(toIndentedString(fileSource)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    destinationTestResults: ").append(toIndentedString(destinationTestResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

