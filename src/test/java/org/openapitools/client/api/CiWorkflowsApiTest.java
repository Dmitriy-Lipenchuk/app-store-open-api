/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.*;
import org.openapitools.client.auth.*;
import org.openapitools.client.model.CiBuildRunsResponse;
import org.openapitools.client.model.CiWorkflowCreateRequest;
import org.openapitools.client.model.CiWorkflowResponse;
import org.openapitools.client.model.CiWorkflowUpdateRequest;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ScmRepositoryResponse;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CiWorkflowsApi
 */
public class CiWorkflowsApiTest {

    private final CiWorkflowsApi api = new CiWorkflowsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ciWorkflowsBuildRunsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterBuilds = null;
        //List<String> sort = null;
        //List<String> fieldsScmGitReferences = null;
        //List<String> fieldsCiBuildRuns = null;
        //List<String> fieldsCiWorkflows = null;
        //List<String> fieldsScmPullRequests = null;
        //List<String> fieldsCiProducts = null;
        //List<String> fieldsBuilds = null;
        //Integer limit = null;
        //Integer limitBuilds = null;
        //List<String> include = null;
        //CiBuildRunsResponse response = api.ciWorkflowsBuildRunsGetToManyRelated(id, filterBuilds, sort, fieldsScmGitReferences, fieldsCiBuildRuns, fieldsCiWorkflows, fieldsScmPullRequests, fieldsCiProducts, fieldsBuilds, limit, limitBuilds, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ciWorkflowsCreateInstanceTest() throws ApiException {
        //CiWorkflowCreateRequest ciWorkflowCreateRequest = null;
        //CiWorkflowResponse response = api.ciWorkflowsCreateInstance(ciWorkflowCreateRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ciWorkflowsDeleteInstanceTest() throws ApiException {
        //String id = null;
        //api.ciWorkflowsDeleteInstance(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ciWorkflowsGetInstanceTest() throws ApiException {
        //String id = null;
        //List<String> fieldsCiWorkflows = null;
        //List<String> include = null;
        //List<String> fieldsCiBuildRuns = null;
        //List<String> fieldsScmRepositories = null;
        //CiWorkflowResponse response = api.ciWorkflowsGetInstance(id, fieldsCiWorkflows, include, fieldsCiBuildRuns, fieldsScmRepositories);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ciWorkflowsRepositoryGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsScmGitReferences = null;
        //List<String> fieldsScmProviders = null;
        //List<String> fieldsScmRepositories = null;
        //List<String> include = null;
        //ScmRepositoryResponse response = api.ciWorkflowsRepositoryGetToOneRelated(id, fieldsScmGitReferences, fieldsScmProviders, fieldsScmRepositories, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ciWorkflowsUpdateInstanceTest() throws ApiException {
        //String id = null;
        //CiWorkflowUpdateRequest ciWorkflowUpdateRequest = null;
        //CiWorkflowResponse response = api.ciWorkflowsUpdateInstance(id, ciWorkflowUpdateRequest);
        // TODO: test validations
    }

}
