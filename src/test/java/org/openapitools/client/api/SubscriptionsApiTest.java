/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.*;
import org.openapitools.client.auth.*;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.PromotedPurchaseResponse;
import org.openapitools.client.model.SubscriptionAppStoreReviewScreenshotResponse;
import org.openapitools.client.model.SubscriptionAvailabilityResponse;
import org.openapitools.client.model.SubscriptionCreateRequest;
import org.openapitools.client.model.SubscriptionIntroductoryOffersLinkagesRequest;
import org.openapitools.client.model.SubscriptionIntroductoryOffersLinkagesResponse;
import org.openapitools.client.model.SubscriptionIntroductoryOffersResponse;
import org.openapitools.client.model.SubscriptionLocalizationsResponse;
import org.openapitools.client.model.SubscriptionOfferCodesResponse;
import org.openapitools.client.model.SubscriptionPricePointsResponse;
import org.openapitools.client.model.SubscriptionPricesLinkagesRequest;
import org.openapitools.client.model.SubscriptionPricesLinkagesResponse;
import org.openapitools.client.model.SubscriptionPricesResponse;
import org.openapitools.client.model.SubscriptionPromotionalOffersResponse;
import org.openapitools.client.model.SubscriptionResponse;
import org.openapitools.client.model.SubscriptionUpdateRequest;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubscriptionsApi
 */
public class SubscriptionsApiTest {

    private final SubscriptionsApi api = new SubscriptionsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsAppStoreReviewScreenshotGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsSubscriptionAppStoreReviewScreenshots = null;
        //List<String> fieldsSubscriptions = null;
        //List<String> include = null;
        //SubscriptionAppStoreReviewScreenshotResponse response = api.subscriptionsAppStoreReviewScreenshotGetToOneRelated(id, fieldsSubscriptionAppStoreReviewScreenshots, fieldsSubscriptions, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsCreateInstanceTest() throws ApiException {
        //SubscriptionCreateRequest subscriptionCreateRequest = null;
        //SubscriptionResponse response = api.subscriptionsCreateInstance(subscriptionCreateRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsDeleteInstanceTest() throws ApiException {
        //String id = null;
        //api.subscriptionsDeleteInstance(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsGetInstanceTest() throws ApiException {
        //String id = null;
        //List<String> fieldsSubscriptions = null;
        //List<String> include = null;
        //List<String> fieldsPromotedPurchases = null;
        //List<String> fieldsSubscriptionPricePoints = null;
        //List<String> fieldsSubscriptionPromotionalOffers = null;
        //List<String> fieldsSubscriptionOfferCodes = null;
        //List<String> fieldsSubscriptionAppStoreReviewScreenshots = null;
        //List<String> fieldsSubscriptionAvailabilities = null;
        //List<String> fieldsSubscriptionPrices = null;
        //List<String> fieldsSubscriptionIntroductoryOffers = null;
        //List<String> fieldsSubscriptionLocalizations = null;
        //Integer limitIntroductoryOffers = null;
        //Integer limitOfferCodes = null;
        //Integer limitPrices = null;
        //Integer limitPromotionalOffers = null;
        //Integer limitSubscriptionLocalizations = null;
        //SubscriptionResponse response = api.subscriptionsGetInstance(id, fieldsSubscriptions, include, fieldsPromotedPurchases, fieldsSubscriptionPricePoints, fieldsSubscriptionPromotionalOffers, fieldsSubscriptionOfferCodes, fieldsSubscriptionAppStoreReviewScreenshots, fieldsSubscriptionAvailabilities, fieldsSubscriptionPrices, fieldsSubscriptionIntroductoryOffers, fieldsSubscriptionLocalizations, limitIntroductoryOffers, limitOfferCodes, limitPrices, limitPromotionalOffers, limitSubscriptionLocalizations);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsIntroductoryOffersDeleteToManyRelationshipTest() throws ApiException {
        //String id = null;
        //SubscriptionIntroductoryOffersLinkagesRequest subscriptionIntroductoryOffersLinkagesRequest = null;
        //api.subscriptionsIntroductoryOffersDeleteToManyRelationship(id, subscriptionIntroductoryOffersLinkagesRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsIntroductoryOffersGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterTerritory = null;
        //List<String> fieldsSubscriptionPricePoints = null;
        //List<String> fieldsSubscriptions = null;
        //List<String> fieldsSubscriptionIntroductoryOffers = null;
        //List<String> fieldsTerritories = null;
        //Integer limit = null;
        //List<String> include = null;
        //SubscriptionIntroductoryOffersResponse response = api.subscriptionsIntroductoryOffersGetToManyRelated(id, filterTerritory, fieldsSubscriptionPricePoints, fieldsSubscriptions, fieldsSubscriptionIntroductoryOffers, fieldsTerritories, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsIntroductoryOffersGetToManyRelationshipTest() throws ApiException {
        //String id = null;
        //Integer limit = null;
        //SubscriptionIntroductoryOffersLinkagesResponse response = api.subscriptionsIntroductoryOffersGetToManyRelationship(id, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsOfferCodesGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterTerritory = null;
        //List<String> fieldsSubscriptionOfferCodeCustomCodes = null;
        //List<String> fieldsSubscriptionOfferCodes = null;
        //List<String> fieldsSubscriptionOfferCodeOneTimeUseCodes = null;
        //List<String> fieldsSubscriptions = null;
        //List<String> fieldsSubscriptionOfferCodePrices = null;
        //Integer limit = null;
        //Integer limitOneTimeUseCodes = null;
        //Integer limitCustomCodes = null;
        //Integer limitPrices = null;
        //List<String> include = null;
        //SubscriptionOfferCodesResponse response = api.subscriptionsOfferCodesGetToManyRelated(id, filterTerritory, fieldsSubscriptionOfferCodeCustomCodes, fieldsSubscriptionOfferCodes, fieldsSubscriptionOfferCodeOneTimeUseCodes, fieldsSubscriptions, fieldsSubscriptionOfferCodePrices, limit, limitOneTimeUseCodes, limitCustomCodes, limitPrices, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsPricePointsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterTerritory = null;
        //List<String> fieldsSubscriptionPricePoints = null;
        //List<String> fieldsTerritories = null;
        //Integer limit = null;
        //List<String> include = null;
        //SubscriptionPricePointsResponse response = api.subscriptionsPricePointsGetToManyRelated(id, filterTerritory, fieldsSubscriptionPricePoints, fieldsTerritories, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsPricesDeleteToManyRelationshipTest() throws ApiException {
        //String id = null;
        //SubscriptionPricesLinkagesRequest subscriptionPricesLinkagesRequest = null;
        //api.subscriptionsPricesDeleteToManyRelationship(id, subscriptionPricesLinkagesRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsPricesGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterSubscriptionPricePoint = null;
        //List<String> filterTerritory = null;
        //List<String> fieldsSubscriptionPricePoints = null;
        //List<String> fieldsSubscriptionPrices = null;
        //List<String> fieldsTerritories = null;
        //Integer limit = null;
        //List<String> include = null;
        //SubscriptionPricesResponse response = api.subscriptionsPricesGetToManyRelated(id, filterSubscriptionPricePoint, filterTerritory, fieldsSubscriptionPricePoints, fieldsSubscriptionPrices, fieldsTerritories, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsPricesGetToManyRelationshipTest() throws ApiException {
        //String id = null;
        //Integer limit = null;
        //SubscriptionPricesLinkagesResponse response = api.subscriptionsPricesGetToManyRelationship(id, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsPromotedPurchaseGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsPromotedPurchases = null;
        //List<String> fieldsSubscriptions = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> fieldsPromotedPurchaseImages = null;
        //Integer limitPromotionImages = null;
        //List<String> include = null;
        //PromotedPurchaseResponse response = api.subscriptionsPromotedPurchaseGetToOneRelated(id, fieldsPromotedPurchases, fieldsSubscriptions, fieldsInAppPurchases, fieldsPromotedPurchaseImages, limitPromotionImages, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsPromotionalOffersGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterTerritory = null;
        //List<String> fieldsSubscriptionPromotionalOffers = null;
        //List<String> fieldsSubscriptions = null;
        //List<String> fieldsSubscriptionPromotionalOfferPrices = null;
        //Integer limit = null;
        //Integer limitPrices = null;
        //List<String> include = null;
        //SubscriptionPromotionalOffersResponse response = api.subscriptionsPromotionalOffersGetToManyRelated(id, filterTerritory, fieldsSubscriptionPromotionalOffers, fieldsSubscriptions, fieldsSubscriptionPromotionalOfferPrices, limit, limitPrices, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsSubscriptionAvailabilityGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsSubscriptionAvailabilities = null;
        //List<String> fieldsSubscriptions = null;
        //List<String> fieldsTerritories = null;
        //Integer limitAvailableTerritories = null;
        //List<String> include = null;
        //SubscriptionAvailabilityResponse response = api.subscriptionsSubscriptionAvailabilityGetToOneRelated(id, fieldsSubscriptionAvailabilities, fieldsSubscriptions, fieldsTerritories, limitAvailableTerritories, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsSubscriptionLocalizationsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsSubscriptions = null;
        //List<String> fieldsSubscriptionLocalizations = null;
        //Integer limit = null;
        //List<String> include = null;
        //SubscriptionLocalizationsResponse response = api.subscriptionsSubscriptionLocalizationsGetToManyRelated(id, fieldsSubscriptions, fieldsSubscriptionLocalizations, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsUpdateInstanceTest() throws ApiException {
        //String id = null;
        //SubscriptionUpdateRequest subscriptionUpdateRequest = null;
        //SubscriptionResponse response = api.subscriptionsUpdateInstance(id, subscriptionUpdateRequest);
        // TODO: test validations
    }

}
