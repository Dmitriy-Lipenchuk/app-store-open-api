/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.*;
import org.openapitools.client.auth.*;
import org.openapitools.client.model.AppStoreVersionExperimentCreateRequest;
import org.openapitools.client.model.AppStoreVersionExperimentResponse;
import org.openapitools.client.model.AppStoreVersionExperimentTreatmentsResponse;
import org.openapitools.client.model.AppStoreVersionExperimentUpdateRequest;
import org.openapitools.client.model.AppStoreVersionExperimentV2CreateRequest;
import org.openapitools.client.model.AppStoreVersionExperimentV2Response;
import org.openapitools.client.model.AppStoreVersionExperimentV2UpdateRequest;
import org.openapitools.client.model.ErrorResponse;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppStoreVersionExperimentsApi
 */
public class AppStoreVersionExperimentsApiTest {

    private final AppStoreVersionExperimentsApi api = new AppStoreVersionExperimentsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAppStoreVersionExperiments = null;
        //List<String> fieldsAppStoreVersionExperimentTreatments = null;
        //List<String> fieldsAppStoreVersionExperimentTreatmentLocalizations = null;
        //Integer limit = null;
        //Integer limitAppStoreVersionExperimentTreatmentLocalizations = null;
        //List<String> include = null;
        //AppStoreVersionExperimentTreatmentsResponse response = api.appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelated(id, fieldsAppStoreVersionExperiments, fieldsAppStoreVersionExperimentTreatments, fieldsAppStoreVersionExperimentTreatmentLocalizations, limit, limitAppStoreVersionExperimentTreatmentLocalizations, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appStoreVersionExperimentsCreateInstanceTest() throws ApiException {
        //AppStoreVersionExperimentCreateRequest appStoreVersionExperimentCreateRequest = null;
        //AppStoreVersionExperimentResponse response = api.appStoreVersionExperimentsCreateInstance(appStoreVersionExperimentCreateRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appStoreVersionExperimentsDeleteInstanceTest() throws ApiException {
        //String id = null;
        //api.appStoreVersionExperimentsDeleteInstance(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appStoreVersionExperimentsGetInstanceTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAppStoreVersionExperiments = null;
        //List<String> include = null;
        //List<String> fieldsAppStoreVersionExperimentTreatments = null;
        //Integer limitAppStoreVersionExperimentTreatments = null;
        //AppStoreVersionExperimentResponse response = api.appStoreVersionExperimentsGetInstance(id, fieldsAppStoreVersionExperiments, include, fieldsAppStoreVersionExperimentTreatments, limitAppStoreVersionExperimentTreatments);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appStoreVersionExperimentsUpdateInstanceTest() throws ApiException {
        //String id = null;
        //AppStoreVersionExperimentUpdateRequest appStoreVersionExperimentUpdateRequest = null;
        //AppStoreVersionExperimentResponse response = api.appStoreVersionExperimentsUpdateInstance(id, appStoreVersionExperimentUpdateRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAppStoreVersionExperiments = null;
        //List<String> fieldsAppStoreVersionExperimentTreatments = null;
        //List<String> fieldsAppStoreVersionExperimentTreatmentLocalizations = null;
        //Integer limit = null;
        //Integer limitAppStoreVersionExperimentTreatmentLocalizations = null;
        //List<String> include = null;
        //AppStoreVersionExperimentTreatmentsResponse response = api.appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelated(id, fieldsAppStoreVersionExperiments, fieldsAppStoreVersionExperimentTreatments, fieldsAppStoreVersionExperimentTreatmentLocalizations, limit, limitAppStoreVersionExperimentTreatmentLocalizations, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appStoreVersionExperimentsV2CreateInstanceTest() throws ApiException {
        //AppStoreVersionExperimentV2CreateRequest appStoreVersionExperimentV2CreateRequest = null;
        //AppStoreVersionExperimentV2Response response = api.appStoreVersionExperimentsV2CreateInstance(appStoreVersionExperimentV2CreateRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appStoreVersionExperimentsV2DeleteInstanceTest() throws ApiException {
        //String id = null;
        //api.appStoreVersionExperimentsV2DeleteInstance(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appStoreVersionExperimentsV2GetInstanceTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAppStoreVersionExperiments = null;
        //List<String> include = null;
        //List<String> fieldsAppStoreVersionExperimentTreatments = null;
        //Integer limitAppStoreVersionExperimentTreatments = null;
        //Integer limitControlVersions = null;
        //AppStoreVersionExperimentV2Response response = api.appStoreVersionExperimentsV2GetInstance(id, fieldsAppStoreVersionExperiments, include, fieldsAppStoreVersionExperimentTreatments, limitAppStoreVersionExperimentTreatments, limitControlVersions);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appStoreVersionExperimentsV2UpdateInstanceTest() throws ApiException {
        //String id = null;
        //AppStoreVersionExperimentV2UpdateRequest appStoreVersionExperimentV2UpdateRequest = null;
        //AppStoreVersionExperimentV2Response response = api.appStoreVersionExperimentsV2UpdateInstance(id, appStoreVersionExperimentV2UpdateRequest);
        // TODO: test validations
    }

}
