/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.*;
import org.openapitools.client.auth.*;
import org.openapitools.client.model.AppEncryptionDeclarationBuildsLinkagesRequest;
import org.openapitools.client.model.AppEncryptionDeclarationDocumentResponse;
import org.openapitools.client.model.AppEncryptionDeclarationResponse;
import org.openapitools.client.model.AppEncryptionDeclarationsResponse;
import org.openapitools.client.model.AppWithoutIncludesResponse;
import org.openapitools.client.model.ErrorResponse;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppEncryptionDeclarationsApi
 */
public class AppEncryptionDeclarationsApiTest {

    private final AppEncryptionDeclarationsApi api = new AppEncryptionDeclarationsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAppEncryptionDeclarationDocuments = null;
        //AppEncryptionDeclarationDocumentResponse response = api.appEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelated(id, fieldsAppEncryptionDeclarationDocuments);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appEncryptionDeclarationsAppGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsApps = null;
        //AppWithoutIncludesResponse response = api.appEncryptionDeclarationsAppGetToOneRelated(id, fieldsApps);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appEncryptionDeclarationsBuildsCreateToManyRelationshipTest() throws ApiException {
        //String id = null;
        //AppEncryptionDeclarationBuildsLinkagesRequest appEncryptionDeclarationBuildsLinkagesRequest = null;
        //api.appEncryptionDeclarationsBuildsCreateToManyRelationship(id, appEncryptionDeclarationBuildsLinkagesRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appEncryptionDeclarationsGetCollectionTest() throws ApiException {
        //List<String> filterPlatform = null;
        //List<String> filterApp = null;
        //List<String> filterBuilds = null;
        //List<String> fieldsAppEncryptionDeclarations = null;
        //Integer limit = null;
        //List<String> include = null;
        //List<String> fieldsAppEncryptionDeclarationDocuments = null;
        //List<String> fieldsApps = null;
        //Integer limitBuilds = null;
        //AppEncryptionDeclarationsResponse response = api.appEncryptionDeclarationsGetCollection(filterPlatform, filterApp, filterBuilds, fieldsAppEncryptionDeclarations, limit, include, fieldsAppEncryptionDeclarationDocuments, fieldsApps, limitBuilds);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appEncryptionDeclarationsGetInstanceTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAppEncryptionDeclarations = null;
        //List<String> include = null;
        //List<String> fieldsAppEncryptionDeclarationDocuments = null;
        //List<String> fieldsApps = null;
        //Integer limitBuilds = null;
        //AppEncryptionDeclarationResponse response = api.appEncryptionDeclarationsGetInstance(id, fieldsAppEncryptionDeclarations, include, fieldsAppEncryptionDeclarationDocuments, fieldsApps, limitBuilds);
        // TODO: test validations
    }

}
