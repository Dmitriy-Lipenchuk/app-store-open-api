/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.*;
import org.openapitools.client.auth.*;
import org.openapitools.client.model.AlternativeDistributionKeyResponse;
import org.openapitools.client.model.AnalyticsReportRequestsResponse;
import org.openapitools.client.model.AppAvailabilityResponse;
import org.openapitools.client.model.AppBetaTestersLinkagesRequest;
import org.openapitools.client.model.AppClipsResponse;
import org.openapitools.client.model.AppCustomProductPagesResponse;
import org.openapitools.client.model.AppEncryptionDeclarationsResponse;
import org.openapitools.client.model.AppEventsResponse;
import org.openapitools.client.model.AppInfosResponse;
import org.openapitools.client.model.AppPreOrderWithoutIncludesResponse;
import org.openapitools.client.model.AppPricePointsV3Response;
import org.openapitools.client.model.AppPriceScheduleResponse;
import org.openapitools.client.model.AppPromotedPurchasesLinkagesRequest;
import org.openapitools.client.model.AppPromotedPurchasesLinkagesResponse;
import org.openapitools.client.model.AppResponse;
import org.openapitools.client.model.AppStoreVersionExperimentsV2Response;
import org.openapitools.client.model.AppStoreVersionsResponse;
import org.openapitools.client.model.AppUpdateRequest;
import org.openapitools.client.model.AppsBetaTesterUsagesV1MetricResponse;
import org.openapitools.client.model.AppsResponse;
import org.openapitools.client.model.BetaAppLocalizationsWithoutIncludesResponse;
import org.openapitools.client.model.BetaAppReviewDetailWithoutIncludesResponse;
import org.openapitools.client.model.BetaGroupsWithoutIncludesResponse;
import org.openapitools.client.model.BetaLicenseAgreementWithoutIncludesResponse;
import org.openapitools.client.model.BuildsWithoutIncludesResponse;
import org.openapitools.client.model.CiProductResponse;
import org.openapitools.client.model.CustomerReviewsResponse;
import org.openapitools.client.model.EndUserLicenseAgreementWithoutIncludesResponse;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.GameCenterDetailResponse;
import org.openapitools.client.model.GameCenterEnabledVersionsResponse;
import org.openapitools.client.model.InAppPurchasesResponse;
import org.openapitools.client.model.InAppPurchasesV2Response;
import org.openapitools.client.model.MarketplaceSearchDetailResponse;
import org.openapitools.client.model.PreReleaseVersionsWithoutIncludesResponse;
import org.openapitools.client.model.PromotedPurchasesResponse;
import org.openapitools.client.model.ReviewSubmissionsResponse;
import org.openapitools.client.model.SubscriptionGracePeriodResponse;
import org.openapitools.client.model.SubscriptionGroupsResponse;
import org.openapitools.client.model.XcodeMetrics;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppsApi
 */
public class AppsApiTest {

    private final AppsApi api = new AppsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAlternativeDistributionKeyGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAlternativeDistributionKeys = null;
        //AlternativeDistributionKeyResponse response = api.appsAlternativeDistributionKeyGetToOneRelated(id, fieldsAlternativeDistributionKeys);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAnalyticsReportRequestsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterAccessType = null;
        //List<String> fieldsAnalyticsReportRequests = null;
        //List<String> fieldsAnalyticsReports = null;
        //Integer limit = null;
        //Integer limitReports = null;
        //List<String> include = null;
        //AnalyticsReportRequestsResponse response = api.appsAnalyticsReportRequestsGetToManyRelated(id, filterAccessType, fieldsAnalyticsReportRequests, fieldsAnalyticsReports, limit, limitReports, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppAvailabilityGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAppAvailabilities = null;
        //List<String> fieldsApps = null;
        //List<String> fieldsTerritories = null;
        //Integer limitAvailableTerritories = null;
        //List<String> include = null;
        //AppAvailabilityResponse response = api.appsAppAvailabilityGetToOneRelated(id, fieldsAppAvailabilities, fieldsApps, fieldsTerritories, limitAvailableTerritories, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppClipsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterBundleId = null;
        //List<String> fieldsAppClips = null;
        //List<String> fieldsApps = null;
        //List<String> fieldsAppClipDefaultExperiences = null;
        //Integer limit = null;
        //Integer limitAppClipDefaultExperiences = null;
        //List<String> include = null;
        //AppClipsResponse response = api.appsAppClipsGetToManyRelated(id, filterBundleId, fieldsAppClips, fieldsApps, fieldsAppClipDefaultExperiences, limit, limitAppClipDefaultExperiences, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppCustomProductPagesGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterVisible = null;
        //List<String> fieldsAppCustomProductPages = null;
        //List<String> fieldsAppCustomProductPageVersions = null;
        //List<String> fieldsApps = null;
        //Integer limit = null;
        //Integer limitAppCustomProductPageVersions = null;
        //List<String> include = null;
        //AppCustomProductPagesResponse response = api.appsAppCustomProductPagesGetToManyRelated(id, filterVisible, fieldsAppCustomProductPages, fieldsAppCustomProductPageVersions, fieldsApps, limit, limitAppCustomProductPageVersions, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppEncryptionDeclarationsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterPlatform = null;
        //List<String> filterBuilds = null;
        //List<String> fieldsAppEncryptionDeclarations = null;
        //List<String> fieldsApps = null;
        //List<String> fieldsAppEncryptionDeclarationDocuments = null;
        //List<String> fieldsBuilds = null;
        //Integer limit = null;
        //Integer limitBuilds = null;
        //List<String> include = null;
        //AppEncryptionDeclarationsResponse response = api.appsAppEncryptionDeclarationsGetToManyRelated(id, filterPlatform, filterBuilds, fieldsAppEncryptionDeclarations, fieldsApps, fieldsAppEncryptionDeclarationDocuments, fieldsBuilds, limit, limitBuilds, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppEventsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterEventState = null;
        //List<String> filterId = null;
        //List<String> fieldsAppEventLocalizations = null;
        //List<String> fieldsAppEvents = null;
        //Integer limit = null;
        //Integer limitLocalizations = null;
        //List<String> include = null;
        //AppEventsResponse response = api.appsAppEventsGetToManyRelated(id, filterEventState, filterId, fieldsAppEventLocalizations, fieldsAppEvents, limit, limitLocalizations, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppInfosGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAgeRatingDeclarations = null;
        //List<String> fieldsAppInfos = null;
        //List<String> fieldsAppInfoLocalizations = null;
        //List<String> fieldsAppCategories = null;
        //List<String> fieldsApps = null;
        //Integer limit = null;
        //Integer limitAppInfoLocalizations = null;
        //List<String> include = null;
        //AppInfosResponse response = api.appsAppInfosGetToManyRelated(id, fieldsAgeRatingDeclarations, fieldsAppInfos, fieldsAppInfoLocalizations, fieldsAppCategories, fieldsApps, limit, limitAppInfoLocalizations, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppPricePointsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterTerritory = null;
        //List<String> fieldsAppPricePoints = null;
        //List<String> fieldsApps = null;
        //List<String> fieldsTerritories = null;
        //Integer limit = null;
        //List<String> include = null;
        //AppPricePointsV3Response response = api.appsAppPricePointsGetToManyRelated(id, filterTerritory, fieldsAppPricePoints, fieldsApps, fieldsTerritories, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppPriceScheduleGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAppPrices = null;
        //List<String> fieldsAppPriceSchedules = null;
        //List<String> fieldsApps = null;
        //List<String> fieldsTerritories = null;
        //Integer limitManualPrices = null;
        //Integer limitAutomaticPrices = null;
        //List<String> include = null;
        //AppPriceScheduleResponse response = api.appsAppPriceScheduleGetToOneRelated(id, fieldsAppPrices, fieldsAppPriceSchedules, fieldsApps, fieldsTerritories, limitManualPrices, limitAutomaticPrices, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppStoreVersionExperimentsV2GetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterState = null;
        //List<String> fieldsAppStoreVersionExperiments = null;
        //List<String> fieldsAppStoreVersionExperimentTreatments = null;
        //List<String> fieldsAppStoreVersions = null;
        //List<String> fieldsApps = null;
        //Integer limit = null;
        //Integer limitControlVersions = null;
        //Integer limitAppStoreVersionExperimentTreatments = null;
        //List<String> include = null;
        //AppStoreVersionExperimentsV2Response response = api.appsAppStoreVersionExperimentsV2GetToManyRelated(id, filterState, fieldsAppStoreVersionExperiments, fieldsAppStoreVersionExperimentTreatments, fieldsAppStoreVersions, fieldsApps, limit, limitControlVersions, limitAppStoreVersionExperimentTreatments, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppStoreVersionsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterAppStoreState = null;
        //List<String> filterAppVersionState = null;
        //List<String> filterPlatform = null;
        //List<String> filterVersionString = null;
        //List<String> filterId = null;
        //List<String> fieldsAgeRatingDeclarations = null;
        //List<String> fieldsAppStoreReviewDetails = null;
        //List<String> fieldsAppStoreVersionLocalizations = null;
        //List<String> fieldsAppStoreVersionExperiments = null;
        //List<String> fieldsAppStoreVersionSubmissions = null;
        //List<String> fieldsAlternativeDistributionPackages = null;
        //List<String> fieldsAppStoreVersions = null;
        //List<String> fieldsApps = null;
        //List<String> fieldsRoutingAppCoverages = null;
        //List<String> fieldsAppClipDefaultExperiences = null;
        //List<String> fieldsAppStoreVersionPhasedReleases = null;
        //List<String> fieldsBuilds = null;
        //Integer limit = null;
        //Integer limitAppStoreVersionLocalizations = null;
        //Integer limitAppStoreVersionExperiments = null;
        //Integer limitAppStoreVersionExperimentsV2 = null;
        //List<String> include = null;
        //AppStoreVersionsResponse response = api.appsAppStoreVersionsGetToManyRelated(id, filterAppStoreState, filterAppVersionState, filterPlatform, filterVersionString, filterId, fieldsAgeRatingDeclarations, fieldsAppStoreReviewDetails, fieldsAppStoreVersionLocalizations, fieldsAppStoreVersionExperiments, fieldsAppStoreVersionSubmissions, fieldsAlternativeDistributionPackages, fieldsAppStoreVersions, fieldsApps, fieldsRoutingAppCoverages, fieldsAppClipDefaultExperiences, fieldsAppStoreVersionPhasedReleases, fieldsBuilds, limit, limitAppStoreVersionLocalizations, limitAppStoreVersionExperiments, limitAppStoreVersionExperimentsV2, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsBetaAppLocalizationsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsBetaAppLocalizations = null;
        //Integer limit = null;
        //BetaAppLocalizationsWithoutIncludesResponse response = api.appsBetaAppLocalizationsGetToManyRelated(id, fieldsBetaAppLocalizations, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsBetaAppReviewDetailGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsBetaAppReviewDetails = null;
        //BetaAppReviewDetailWithoutIncludesResponse response = api.appsBetaAppReviewDetailGetToOneRelated(id, fieldsBetaAppReviewDetails);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsBetaGroupsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsBetaGroups = null;
        //Integer limit = null;
        //BetaGroupsWithoutIncludesResponse response = api.appsBetaGroupsGetToManyRelated(id, fieldsBetaGroups, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsBetaLicenseAgreementGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsBetaLicenseAgreements = null;
        //BetaLicenseAgreementWithoutIncludesResponse response = api.appsBetaLicenseAgreementGetToOneRelated(id, fieldsBetaLicenseAgreements);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsBetaTesterUsagesGetMetricsTest() throws ApiException {
        //String id = null;
        //Integer limit = null;
        //List<String> groupBy = null;
        //String filterBetaTesters = null;
        //String period = null;
        //AppsBetaTesterUsagesV1MetricResponse response = api.appsBetaTesterUsagesGetMetrics(id, limit, groupBy, filterBetaTesters, period);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsBetaTestersDeleteToManyRelationshipTest() throws ApiException {
        //String id = null;
        //AppBetaTestersLinkagesRequest appBetaTestersLinkagesRequest = null;
        //api.appsBetaTestersDeleteToManyRelationship(id, appBetaTestersLinkagesRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsBuildsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsBuilds = null;
        //Integer limit = null;
        //BuildsWithoutIncludesResponse response = api.appsBuildsGetToManyRelated(id, fieldsBuilds, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsCiProductGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsCiProducts = null;
        //List<String> fieldsApps = null;
        //List<String> fieldsScmRepositories = null;
        //List<String> fieldsBundleIds = null;
        //Integer limitPrimaryRepositories = null;
        //List<String> include = null;
        //CiProductResponse response = api.appsCiProductGetToOneRelated(id, fieldsCiProducts, fieldsApps, fieldsScmRepositories, fieldsBundleIds, limitPrimaryRepositories, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsCustomerReviewsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterRating = null;
        //List<String> filterTerritory = null;
        //Boolean existsPublishedResponse = null;
        //List<String> sort = null;
        //List<String> fieldsCustomerReviews = null;
        //List<String> fieldsCustomerReviewResponses = null;
        //Integer limit = null;
        //List<String> include = null;
        //CustomerReviewsResponse response = api.appsCustomerReviewsGetToManyRelated(id, filterRating, filterTerritory, existsPublishedResponse, sort, fieldsCustomerReviews, fieldsCustomerReviewResponses, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsEndUserLicenseAgreementGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsEndUserLicenseAgreements = null;
        //EndUserLicenseAgreementWithoutIncludesResponse response = api.appsEndUserLicenseAgreementGetToOneRelated(id, fieldsEndUserLicenseAgreements);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsGameCenterDetailGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsGameCenterAchievementReleases = null;
        //List<String> fieldsGameCenterLeaderboardSetReleases = null;
        //List<String> fieldsGameCenterLeaderboardSets = null;
        //List<String> fieldsGameCenterGroups = null;
        //List<String> fieldsGameCenterDetails = null;
        //List<String> fieldsGameCenterLeaderboards = null;
        //List<String> fieldsGameCenterAppVersions = null;
        //List<String> fieldsGameCenterAchievements = null;
        //List<String> fieldsApps = null;
        //List<String> fieldsGameCenterLeaderboardReleases = null;
        //Integer limitGameCenterAppVersions = null;
        //Integer limitGameCenterLeaderboards = null;
        //Integer limitGameCenterLeaderboardSets = null;
        //Integer limitGameCenterAchievements = null;
        //Integer limitAchievementReleases = null;
        //Integer limitLeaderboardReleases = null;
        //Integer limitLeaderboardSetReleases = null;
        //List<String> include = null;
        //GameCenterDetailResponse response = api.appsGameCenterDetailGetToOneRelated(id, fieldsGameCenterAchievementReleases, fieldsGameCenterLeaderboardSetReleases, fieldsGameCenterLeaderboardSets, fieldsGameCenterGroups, fieldsGameCenterDetails, fieldsGameCenterLeaderboards, fieldsGameCenterAppVersions, fieldsGameCenterAchievements, fieldsApps, fieldsGameCenterLeaderboardReleases, limitGameCenterAppVersions, limitGameCenterLeaderboards, limitGameCenterLeaderboardSets, limitGameCenterAchievements, limitAchievementReleases, limitLeaderboardReleases, limitLeaderboardSetReleases, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsGameCenterEnabledVersionsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterPlatform = null;
        //List<String> filterVersionString = null;
        //List<String> filterId = null;
        //List<String> sort = null;
        //List<String> fieldsGameCenterEnabledVersions = null;
        //List<String> fieldsApps = null;
        //Integer limit = null;
        //Integer limitCompatibleVersions = null;
        //List<String> include = null;
        //GameCenterEnabledVersionsResponse response = api.appsGameCenterEnabledVersionsGetToManyRelated(id, filterPlatform, filterVersionString, filterId, sort, fieldsGameCenterEnabledVersions, fieldsApps, limit, limitCompatibleVersions, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsGetCollectionTest() throws ApiException {
        //List<String> filterAppStoreVersionsAppStoreState = null;
        //List<String> filterAppStoreVersionsAppVersionState = null;
        //List<String> filterAppStoreVersionsPlatform = null;
        //List<String> filterBundleId = null;
        //List<String> filterName = null;
        //List<String> filterSku = null;
        //List<String> filterAppStoreVersions = null;
        //List<String> filterId = null;
        //Boolean existsGameCenterEnabledVersions = null;
        //List<String> sort = null;
        //List<String> fieldsApps = null;
        //Integer limit = null;
        //List<String> include = null;
        //List<String> fieldsBetaAppReviewDetails = null;
        //List<String> fieldsGameCenterDetails = null;
        //List<String> fieldsAppPriceSchedules = null;
        //List<String> fieldsCiProducts = null;
        //List<String> fieldsAlternativeDistributionKeys = null;
        //List<String> fieldsReviewSubmissions = null;
        //List<String> fieldsBetaGroups = null;
        //List<String> fieldsPromotedPurchases = null;
        //List<String> fieldsAppAvailabilities = null;
        //List<String> fieldsCustomerReviews = null;
        //List<String> fieldsAppEvents = null;
        //List<String> fieldsBuilds = null;
        //List<String> fieldsBetaLicenseAgreements = null;
        //List<String> fieldsMarketplaceSearchDetails = null;
        //List<String> fieldsAppClips = null;
        //List<String> fieldsAppInfos = null;
        //List<String> fieldsBetaAppLocalizations = null;
        //List<String> fieldsAppPricePoints = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> fieldsPreReleaseVersions = null;
        //List<String> fieldsSubscriptionGroups = null;
        //List<String> fieldsAnalyticsReportRequests = null;
        //List<String> fieldsAppPreOrders = null;
        //List<String> fieldsAppStoreVersionExperiments = null;
        //List<String> fieldsGameCenterEnabledVersions = null;
        //List<String> fieldsSubscriptionGracePeriods = null;
        //List<String> fieldsEndUserLicenseAgreements = null;
        //List<String> fieldsAppStoreVersions = null;
        //List<String> fieldsAppCustomProductPages = null;
        //List<String> fieldsAppEncryptionDeclarations = null;
        //List<String> fieldsPerfPowerMetrics = null;
        //Integer limitAppClips = null;
        //Integer limitAppCustomProductPages = null;
        //Integer limitAppEncryptionDeclarations = null;
        //Integer limitAppEvents = null;
        //Integer limitAppInfos = null;
        //Integer limitAppStoreVersionExperimentsV2 = null;
        //Integer limitAppStoreVersions = null;
        //Integer limitBetaAppLocalizations = null;
        //Integer limitBetaGroups = null;
        //Integer limitBuilds = null;
        //Integer limitGameCenterEnabledVersions = null;
        //Integer limitInAppPurchases = null;
        //Integer limitInAppPurchasesV2 = null;
        //Integer limitPreReleaseVersions = null;
        //Integer limitPromotedPurchases = null;
        //Integer limitReviewSubmissions = null;
        //Integer limitSubscriptionGroups = null;
        //AppsResponse response = api.appsGetCollection(filterAppStoreVersionsAppStoreState, filterAppStoreVersionsAppVersionState, filterAppStoreVersionsPlatform, filterBundleId, filterName, filterSku, filterAppStoreVersions, filterId, existsGameCenterEnabledVersions, sort, fieldsApps, limit, include, fieldsBetaAppReviewDetails, fieldsGameCenterDetails, fieldsAppPriceSchedules, fieldsCiProducts, fieldsAlternativeDistributionKeys, fieldsReviewSubmissions, fieldsBetaGroups, fieldsPromotedPurchases, fieldsAppAvailabilities, fieldsCustomerReviews, fieldsAppEvents, fieldsBuilds, fieldsBetaLicenseAgreements, fieldsMarketplaceSearchDetails, fieldsAppClips, fieldsAppInfos, fieldsBetaAppLocalizations, fieldsAppPricePoints, fieldsInAppPurchases, fieldsPreReleaseVersions, fieldsSubscriptionGroups, fieldsAnalyticsReportRequests, fieldsAppPreOrders, fieldsAppStoreVersionExperiments, fieldsGameCenterEnabledVersions, fieldsSubscriptionGracePeriods, fieldsEndUserLicenseAgreements, fieldsAppStoreVersions, fieldsAppCustomProductPages, fieldsAppEncryptionDeclarations, fieldsPerfPowerMetrics, limitAppClips, limitAppCustomProductPages, limitAppEncryptionDeclarations, limitAppEvents, limitAppInfos, limitAppStoreVersionExperimentsV2, limitAppStoreVersions, limitBetaAppLocalizations, limitBetaGroups, limitBuilds, limitGameCenterEnabledVersions, limitInAppPurchases, limitInAppPurchasesV2, limitPreReleaseVersions, limitPromotedPurchases, limitReviewSubmissions, limitSubscriptionGroups);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsGetInstanceTest() throws ApiException {
        //String id = null;
        //List<String> fieldsApps = null;
        //List<String> include = null;
        //List<String> fieldsBetaAppReviewDetails = null;
        //List<String> fieldsGameCenterDetails = null;
        //List<String> fieldsAppPriceSchedules = null;
        //List<String> fieldsCiProducts = null;
        //List<String> fieldsAlternativeDistributionKeys = null;
        //List<String> fieldsReviewSubmissions = null;
        //List<String> fieldsBetaGroups = null;
        //List<String> fieldsPromotedPurchases = null;
        //List<String> fieldsAppAvailabilities = null;
        //List<String> fieldsCustomerReviews = null;
        //List<String> fieldsAppEvents = null;
        //List<String> fieldsBuilds = null;
        //List<String> fieldsBetaLicenseAgreements = null;
        //List<String> fieldsMarketplaceSearchDetails = null;
        //List<String> fieldsAppClips = null;
        //List<String> fieldsAppInfos = null;
        //List<String> fieldsBetaAppLocalizations = null;
        //List<String> fieldsAppPricePoints = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> fieldsPreReleaseVersions = null;
        //List<String> fieldsSubscriptionGroups = null;
        //List<String> fieldsAnalyticsReportRequests = null;
        //List<String> fieldsAppPreOrders = null;
        //List<String> fieldsAppStoreVersionExperiments = null;
        //List<String> fieldsGameCenterEnabledVersions = null;
        //List<String> fieldsSubscriptionGracePeriods = null;
        //List<String> fieldsEndUserLicenseAgreements = null;
        //List<String> fieldsAppStoreVersions = null;
        //List<String> fieldsAppCustomProductPages = null;
        //List<String> fieldsAppEncryptionDeclarations = null;
        //List<String> fieldsPerfPowerMetrics = null;
        //Integer limitAppClips = null;
        //Integer limitAppCustomProductPages = null;
        //Integer limitAppEncryptionDeclarations = null;
        //Integer limitAppEvents = null;
        //Integer limitAppInfos = null;
        //Integer limitAppStoreVersionExperimentsV2 = null;
        //Integer limitAppStoreVersions = null;
        //Integer limitBetaAppLocalizations = null;
        //Integer limitBetaGroups = null;
        //Integer limitBuilds = null;
        //Integer limitGameCenterEnabledVersions = null;
        //Integer limitInAppPurchases = null;
        //Integer limitInAppPurchasesV2 = null;
        //Integer limitPreReleaseVersions = null;
        //Integer limitPromotedPurchases = null;
        //Integer limitReviewSubmissions = null;
        //Integer limitSubscriptionGroups = null;
        //AppResponse response = api.appsGetInstance(id, fieldsApps, include, fieldsBetaAppReviewDetails, fieldsGameCenterDetails, fieldsAppPriceSchedules, fieldsCiProducts, fieldsAlternativeDistributionKeys, fieldsReviewSubmissions, fieldsBetaGroups, fieldsPromotedPurchases, fieldsAppAvailabilities, fieldsCustomerReviews, fieldsAppEvents, fieldsBuilds, fieldsBetaLicenseAgreements, fieldsMarketplaceSearchDetails, fieldsAppClips, fieldsAppInfos, fieldsBetaAppLocalizations, fieldsAppPricePoints, fieldsInAppPurchases, fieldsPreReleaseVersions, fieldsSubscriptionGroups, fieldsAnalyticsReportRequests, fieldsAppPreOrders, fieldsAppStoreVersionExperiments, fieldsGameCenterEnabledVersions, fieldsSubscriptionGracePeriods, fieldsEndUserLicenseAgreements, fieldsAppStoreVersions, fieldsAppCustomProductPages, fieldsAppEncryptionDeclarations, fieldsPerfPowerMetrics, limitAppClips, limitAppCustomProductPages, limitAppEncryptionDeclarations, limitAppEvents, limitAppInfos, limitAppStoreVersionExperimentsV2, limitAppStoreVersions, limitBetaAppLocalizations, limitBetaGroups, limitBuilds, limitGameCenterEnabledVersions, limitInAppPurchases, limitInAppPurchasesV2, limitPreReleaseVersions, limitPromotedPurchases, limitReviewSubmissions, limitSubscriptionGroups);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsInAppPurchasesGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterInAppPurchaseType = null;
        //List<String> filterCanBeSubmitted = null;
        //List<String> sort = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> fieldsApps = null;
        //Integer limit = null;
        //Integer limitApps = null;
        //List<String> include = null;
        //InAppPurchasesResponse response = api.appsInAppPurchasesGetToManyRelated(id, filterInAppPurchaseType, filterCanBeSubmitted, sort, fieldsInAppPurchases, fieldsApps, limit, limitApps, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsInAppPurchasesV2GetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterInAppPurchaseType = null;
        //List<String> filterName = null;
        //List<String> filterProductId = null;
        //List<String> filterState = null;
        //List<String> sort = null;
        //List<String> fieldsInAppPurchaseAppStoreReviewScreenshots = null;
        //List<String> fieldsInAppPurchaseAvailabilities = null;
        //List<String> fieldsPromotedPurchases = null;
        //List<String> fieldsInAppPurchaseLocalizations = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> fieldsInAppPurchasePriceSchedules = null;
        //List<String> fieldsInAppPurchaseContents = null;
        //Integer limit = null;
        //Integer limitInAppPurchaseLocalizations = null;
        //List<String> include = null;
        //InAppPurchasesV2Response response = api.appsInAppPurchasesV2GetToManyRelated(id, filterInAppPurchaseType, filterName, filterProductId, filterState, sort, fieldsInAppPurchaseAppStoreReviewScreenshots, fieldsInAppPurchaseAvailabilities, fieldsPromotedPurchases, fieldsInAppPurchaseLocalizations, fieldsInAppPurchases, fieldsInAppPurchasePriceSchedules, fieldsInAppPurchaseContents, limit, limitInAppPurchaseLocalizations, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsMarketplaceSearchDetailGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsMarketplaceSearchDetails = null;
        //MarketplaceSearchDetailResponse response = api.appsMarketplaceSearchDetailGetToOneRelated(id, fieldsMarketplaceSearchDetails);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsPerfPowerMetricsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterDeviceType = null;
        //List<String> filterMetricType = null;
        //List<String> filterPlatform = null;
        //XcodeMetrics response = api.appsPerfPowerMetricsGetToManyRelated(id, filterDeviceType, filterMetricType, filterPlatform);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsPreOrderGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAppPreOrders = null;
        //AppPreOrderWithoutIncludesResponse response = api.appsPreOrderGetToOneRelated(id, fieldsAppPreOrders);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsPreReleaseVersionsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsPreReleaseVersions = null;
        //Integer limit = null;
        //PreReleaseVersionsWithoutIncludesResponse response = api.appsPreReleaseVersionsGetToManyRelated(id, fieldsPreReleaseVersions, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsPromotedPurchasesGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsPromotedPurchases = null;
        //List<String> fieldsSubscriptions = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> fieldsPromotedPurchaseImages = null;
        //Integer limit = null;
        //Integer limitPromotionImages = null;
        //List<String> include = null;
        //PromotedPurchasesResponse response = api.appsPromotedPurchasesGetToManyRelated(id, fieldsPromotedPurchases, fieldsSubscriptions, fieldsInAppPurchases, fieldsPromotedPurchaseImages, limit, limitPromotionImages, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsPromotedPurchasesGetToManyRelationshipTest() throws ApiException {
        //String id = null;
        //Integer limit = null;
        //AppPromotedPurchasesLinkagesResponse response = api.appsPromotedPurchasesGetToManyRelationship(id, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsPromotedPurchasesReplaceToManyRelationshipTest() throws ApiException {
        //String id = null;
        //AppPromotedPurchasesLinkagesRequest appPromotedPurchasesLinkagesRequest = null;
        //api.appsPromotedPurchasesReplaceToManyRelationship(id, appPromotedPurchasesLinkagesRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsReviewSubmissionsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterPlatform = null;
        //List<String> filterState = null;
        //List<String> fieldsReviewSubmissionItems = null;
        //List<String> fieldsActors = null;
        //List<String> fieldsAppStoreVersions = null;
        //List<String> fieldsApps = null;
        //List<String> fieldsReviewSubmissions = null;
        //Integer limit = null;
        //Integer limitItems = null;
        //List<String> include = null;
        //ReviewSubmissionsResponse response = api.appsReviewSubmissionsGetToManyRelated(id, filterPlatform, filterState, fieldsReviewSubmissionItems, fieldsActors, fieldsAppStoreVersions, fieldsApps, fieldsReviewSubmissions, limit, limitItems, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsSubscriptionGracePeriodGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsSubscriptionGracePeriods = null;
        //SubscriptionGracePeriodResponse response = api.appsSubscriptionGracePeriodGetToOneRelated(id, fieldsSubscriptionGracePeriods);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsSubscriptionGroupsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterReferenceName = null;
        //List<String> filterSubscriptionsState = null;
        //List<String> sort = null;
        //List<String> fieldsSubscriptions = null;
        //List<String> fieldsSubscriptionGroups = null;
        //List<String> fieldsSubscriptionGroupLocalizations = null;
        //Integer limit = null;
        //Integer limitSubscriptions = null;
        //Integer limitSubscriptionGroupLocalizations = null;
        //List<String> include = null;
        //SubscriptionGroupsResponse response = api.appsSubscriptionGroupsGetToManyRelated(id, filterReferenceName, filterSubscriptionsState, sort, fieldsSubscriptions, fieldsSubscriptionGroups, fieldsSubscriptionGroupLocalizations, limit, limitSubscriptions, limitSubscriptionGroupLocalizations, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsUpdateInstanceTest() throws ApiException {
        //String id = null;
        //AppUpdateRequest appUpdateRequest = null;
        //AppResponse response = api.appsUpdateInstance(id, appUpdateRequest);
        // TODO: test validations
    }

}
