/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.*;
import org.openapitools.client.auth.*;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ScmGitReferencesResponse;
import org.openapitools.client.model.ScmPullRequestsResponse;
import org.openapitools.client.model.ScmRepositoriesResponse;
import org.openapitools.client.model.ScmRepositoryResponse;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScmRepositoriesApi
 */
public class ScmRepositoriesApiTest {

    private final ScmRepositoriesApi api = new ScmRepositoriesApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scmRepositoriesGetCollectionTest() throws ApiException {
        //List<String> filterId = null;
        //List<String> fieldsScmRepositories = null;
        //Integer limit = null;
        //List<String> include = null;
        //List<String> fieldsScmGitReferences = null;
        //List<String> fieldsScmPullRequests = null;
        //ScmRepositoriesResponse response = api.scmRepositoriesGetCollection(filterId, fieldsScmRepositories, limit, include, fieldsScmGitReferences, fieldsScmPullRequests);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scmRepositoriesGetInstanceTest() throws ApiException {
        //String id = null;
        //List<String> fieldsScmRepositories = null;
        //List<String> include = null;
        //List<String> fieldsScmGitReferences = null;
        //List<String> fieldsScmPullRequests = null;
        //ScmRepositoryResponse response = api.scmRepositoriesGetInstance(id, fieldsScmRepositories, include, fieldsScmGitReferences, fieldsScmPullRequests);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scmRepositoriesGitReferencesGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsScmGitReferences = null;
        //List<String> fieldsScmRepositories = null;
        //Integer limit = null;
        //List<String> include = null;
        //ScmGitReferencesResponse response = api.scmRepositoriesGitReferencesGetToManyRelated(id, fieldsScmGitReferences, fieldsScmRepositories, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scmRepositoriesPullRequestsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsScmPullRequests = null;
        //List<String> fieldsScmRepositories = null;
        //Integer limit = null;
        //List<String> include = null;
        //ScmPullRequestsResponse response = api.scmRepositoriesPullRequestsGetToManyRelated(id, fieldsScmPullRequests, fieldsScmRepositories, limit, include);
        // TODO: test validations
    }

}
