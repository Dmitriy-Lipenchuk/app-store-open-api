/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.*;
import org.openapitools.client.auth.*;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ReviewSubmissionCreateRequest;
import org.openapitools.client.model.ReviewSubmissionItemsResponse;
import org.openapitools.client.model.ReviewSubmissionResponse;
import org.openapitools.client.model.ReviewSubmissionUpdateRequest;
import org.openapitools.client.model.ReviewSubmissionsResponse;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReviewSubmissionsApi
 */
public class ReviewSubmissionsApiTest {

    private final ReviewSubmissionsApi api = new ReviewSubmissionsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewSubmissionsCreateInstanceTest() throws ApiException {
        //ReviewSubmissionCreateRequest reviewSubmissionCreateRequest = null;
        //ReviewSubmissionResponse response = api.reviewSubmissionsCreateInstance(reviewSubmissionCreateRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewSubmissionsGetCollectionTest() throws ApiException {
        //List<String> filterApp = null;
        //List<String> filterPlatform = null;
        //List<String> filterState = null;
        //List<String> fieldsReviewSubmissions = null;
        //Integer limit = null;
        //List<String> include = null;
        //List<String> fieldsReviewSubmissionItems = null;
        //Integer limitItems = null;
        //ReviewSubmissionsResponse response = api.reviewSubmissionsGetCollection(filterApp, filterPlatform, filterState, fieldsReviewSubmissions, limit, include, fieldsReviewSubmissionItems, limitItems);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewSubmissionsGetInstanceTest() throws ApiException {
        //String id = null;
        //List<String> fieldsReviewSubmissions = null;
        //List<String> include = null;
        //List<String> fieldsReviewSubmissionItems = null;
        //Integer limitItems = null;
        //ReviewSubmissionResponse response = api.reviewSubmissionsGetInstance(id, fieldsReviewSubmissions, include, fieldsReviewSubmissionItems, limitItems);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewSubmissionsItemsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsAppStoreVersionExperiments = null;
        //List<String> fieldsReviewSubmissionItems = null;
        //List<String> fieldsAppStoreVersions = null;
        //List<String> fieldsAppCustomProductPageVersions = null;
        //List<String> fieldsAppEvents = null;
        //Integer limit = null;
        //List<String> include = null;
        //ReviewSubmissionItemsResponse response = api.reviewSubmissionsItemsGetToManyRelated(id, fieldsAppStoreVersionExperiments, fieldsReviewSubmissionItems, fieldsAppStoreVersions, fieldsAppCustomProductPageVersions, fieldsAppEvents, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewSubmissionsUpdateInstanceTest() throws ApiException {
        //String id = null;
        //ReviewSubmissionUpdateRequest reviewSubmissionUpdateRequest = null;
        //ReviewSubmissionResponse response = api.reviewSubmissionsUpdateInstance(id, reviewSubmissionUpdateRequest);
        // TODO: test validations
    }

}
