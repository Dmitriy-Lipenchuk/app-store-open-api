/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.*;
import org.openapitools.client.auth.*;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.GameCenterLeaderboardCreateRequest;
import org.openapitools.client.model.GameCenterLeaderboardGroupLeaderboardLinkageRequest;
import org.openapitools.client.model.GameCenterLeaderboardGroupLeaderboardLinkageResponse;
import org.openapitools.client.model.GameCenterLeaderboardLocalizationsResponse;
import org.openapitools.client.model.GameCenterLeaderboardReleasesResponse;
import org.openapitools.client.model.GameCenterLeaderboardResponse;
import org.openapitools.client.model.GameCenterLeaderboardUpdateRequest;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GameCenterLeaderboardsApi
 */
public class GameCenterLeaderboardsApiTest {

    private final GameCenterLeaderboardsApi api = new GameCenterLeaderboardsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gameCenterLeaderboardsCreateInstanceTest() throws ApiException {
        //GameCenterLeaderboardCreateRequest gameCenterLeaderboardCreateRequest = null;
        //GameCenterLeaderboardResponse response = api.gameCenterLeaderboardsCreateInstance(gameCenterLeaderboardCreateRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gameCenterLeaderboardsDeleteInstanceTest() throws ApiException {
        //String id = null;
        //api.gameCenterLeaderboardsDeleteInstance(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gameCenterLeaderboardsGetInstanceTest() throws ApiException {
        //String id = null;
        //List<String> fieldsGameCenterLeaderboards = null;
        //List<String> include = null;
        //List<String> fieldsGameCenterLeaderboardLocalizations = null;
        //List<String> fieldsGameCenterLeaderboardReleases = null;
        //Integer limitGameCenterLeaderboardSets = null;
        //Integer limitLocalizations = null;
        //Integer limitReleases = null;
        //GameCenterLeaderboardResponse response = api.gameCenterLeaderboardsGetInstance(id, fieldsGameCenterLeaderboards, include, fieldsGameCenterLeaderboardLocalizations, fieldsGameCenterLeaderboardReleases, limitGameCenterLeaderboardSets, limitLocalizations, limitReleases);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gameCenterLeaderboardsGroupLeaderboardGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsGameCenterLeaderboardLocalizations = null;
        //List<String> fieldsGameCenterLeaderboardSets = null;
        //List<String> fieldsGameCenterGroups = null;
        //List<String> fieldsGameCenterDetails = null;
        //List<String> fieldsGameCenterLeaderboards = null;
        //List<String> fieldsGameCenterLeaderboardReleases = null;
        //Integer limitGameCenterLeaderboardSets = null;
        //Integer limitLocalizations = null;
        //Integer limitReleases = null;
        //List<String> include = null;
        //GameCenterLeaderboardResponse response = api.gameCenterLeaderboardsGroupLeaderboardGetToOneRelated(id, fieldsGameCenterLeaderboardLocalizations, fieldsGameCenterLeaderboardSets, fieldsGameCenterGroups, fieldsGameCenterDetails, fieldsGameCenterLeaderboards, fieldsGameCenterLeaderboardReleases, limitGameCenterLeaderboardSets, limitLocalizations, limitReleases, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipTest() throws ApiException {
        //String id = null;
        //GameCenterLeaderboardGroupLeaderboardLinkageResponse response = api.gameCenterLeaderboardsGroupLeaderboardGetToOneRelationship(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipTest() throws ApiException {
        //String id = null;
        //GameCenterLeaderboardGroupLeaderboardLinkageRequest gameCenterLeaderboardGroupLeaderboardLinkageRequest = null;
        //api.gameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationship(id, gameCenterLeaderboardGroupLeaderboardLinkageRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gameCenterLeaderboardsLocalizationsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsGameCenterLeaderboardLocalizations = null;
        //List<String> fieldsGameCenterLeaderboardImages = null;
        //List<String> fieldsGameCenterLeaderboards = null;
        //Integer limit = null;
        //List<String> include = null;
        //GameCenterLeaderboardLocalizationsResponse response = api.gameCenterLeaderboardsLocalizationsGetToManyRelated(id, fieldsGameCenterLeaderboardLocalizations, fieldsGameCenterLeaderboardImages, fieldsGameCenterLeaderboards, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gameCenterLeaderboardsReleasesGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterLive = null;
        //List<String> filterGameCenterDetail = null;
        //List<String> fieldsGameCenterDetails = null;
        //List<String> fieldsGameCenterLeaderboards = null;
        //List<String> fieldsGameCenterLeaderboardReleases = null;
        //Integer limit = null;
        //List<String> include = null;
        //GameCenterLeaderboardReleasesResponse response = api.gameCenterLeaderboardsReleasesGetToManyRelated(id, filterLive, filterGameCenterDetail, fieldsGameCenterDetails, fieldsGameCenterLeaderboards, fieldsGameCenterLeaderboardReleases, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gameCenterLeaderboardsUpdateInstanceTest() throws ApiException {
        //String id = null;
        //GameCenterLeaderboardUpdateRequest gameCenterLeaderboardUpdateRequest = null;
        //GameCenterLeaderboardResponse response = api.gameCenterLeaderboardsUpdateInstance(id, gameCenterLeaderboardUpdateRequest);
        // TODO: test validations
    }

}
