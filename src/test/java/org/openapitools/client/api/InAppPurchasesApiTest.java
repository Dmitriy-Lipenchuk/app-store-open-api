/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.*;
import org.openapitools.client.auth.*;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.InAppPurchaseAppStoreReviewScreenshotResponse;
import org.openapitools.client.model.InAppPurchaseAvailabilityResponse;
import org.openapitools.client.model.InAppPurchaseContentResponse;
import org.openapitools.client.model.InAppPurchaseLocalizationsResponse;
import org.openapitools.client.model.InAppPurchasePricePointsResponse;
import org.openapitools.client.model.InAppPurchasePriceScheduleResponse;
import org.openapitools.client.model.InAppPurchaseResponse;
import org.openapitools.client.model.InAppPurchaseV2CreateRequest;
import org.openapitools.client.model.InAppPurchaseV2Response;
import org.openapitools.client.model.InAppPurchaseV2UpdateRequest;
import org.openapitools.client.model.PromotedPurchaseResponse;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InAppPurchasesApi
 */
public class InAppPurchasesApiTest {

    private final InAppPurchasesApi api = new InAppPurchasesApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesGetInstanceTest() throws ApiException {
        //String id = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> include = null;
        //Integer limitApps = null;
        //InAppPurchaseResponse response = api.inAppPurchasesGetInstance(id, fieldsInAppPurchases, include, limitApps);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsInAppPurchaseAppStoreReviewScreenshots = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> include = null;
        //InAppPurchaseAppStoreReviewScreenshotResponse response = api.inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelated(id, fieldsInAppPurchaseAppStoreReviewScreenshots, fieldsInAppPurchases, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesV2ContentGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> fieldsInAppPurchaseContents = null;
        //List<String> include = null;
        //InAppPurchaseContentResponse response = api.inAppPurchasesV2ContentGetToOneRelated(id, fieldsInAppPurchases, fieldsInAppPurchaseContents, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesV2CreateInstanceTest() throws ApiException {
        //InAppPurchaseV2CreateRequest inAppPurchaseV2CreateRequest = null;
        //InAppPurchaseV2Response response = api.inAppPurchasesV2CreateInstance(inAppPurchaseV2CreateRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesV2DeleteInstanceTest() throws ApiException {
        //String id = null;
        //api.inAppPurchasesV2DeleteInstance(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesV2GetInstanceTest() throws ApiException {
        //String id = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> include = null;
        //List<String> fieldsInAppPurchaseAvailabilities = null;
        //List<String> fieldsInAppPurchaseAppStoreReviewScreenshots = null;
        //List<String> fieldsPromotedPurchases = null;
        //List<String> fieldsInAppPurchasePricePoints = null;
        //List<String> fieldsInAppPurchaseLocalizations = null;
        //List<String> fieldsInAppPurchasePriceSchedules = null;
        //List<String> fieldsInAppPurchaseContents = null;
        //Integer limitInAppPurchaseLocalizations = null;
        //Integer limitPricePoints = null;
        //InAppPurchaseV2Response response = api.inAppPurchasesV2GetInstance(id, fieldsInAppPurchases, include, fieldsInAppPurchaseAvailabilities, fieldsInAppPurchaseAppStoreReviewScreenshots, fieldsPromotedPurchases, fieldsInAppPurchasePricePoints, fieldsInAppPurchaseLocalizations, fieldsInAppPurchasePriceSchedules, fieldsInAppPurchaseContents, limitInAppPurchaseLocalizations, limitPricePoints);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesV2IapPriceScheduleGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsInAppPurchasePrices = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> fieldsInAppPurchasePriceSchedules = null;
        //List<String> fieldsTerritories = null;
        //Integer limitManualPrices = null;
        //Integer limitAutomaticPrices = null;
        //List<String> include = null;
        //InAppPurchasePriceScheduleResponse response = api.inAppPurchasesV2IapPriceScheduleGetToOneRelated(id, fieldsInAppPurchasePrices, fieldsInAppPurchases, fieldsInAppPurchasePriceSchedules, fieldsTerritories, limitManualPrices, limitAutomaticPrices, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsInAppPurchaseAvailabilities = null;
        //List<String> fieldsTerritories = null;
        //Integer limitAvailableTerritories = null;
        //List<String> include = null;
        //InAppPurchaseAvailabilityResponse response = api.inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelated(id, fieldsInAppPurchaseAvailabilities, fieldsTerritories, limitAvailableTerritories, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsInAppPurchaseLocalizations = null;
        //List<String> fieldsInAppPurchases = null;
        //Integer limit = null;
        //List<String> include = null;
        //InAppPurchaseLocalizationsResponse response = api.inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelated(id, fieldsInAppPurchaseLocalizations, fieldsInAppPurchases, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesV2PricePointsGetToManyRelatedTest() throws ApiException {
        //String id = null;
        //List<String> filterTerritory = null;
        //List<String> fieldsInAppPurchasePricePoints = null;
        //List<String> fieldsTerritories = null;
        //Integer limit = null;
        //List<String> include = null;
        //InAppPurchasePricePointsResponse response = api.inAppPurchasesV2PricePointsGetToManyRelated(id, filterTerritory, fieldsInAppPurchasePricePoints, fieldsTerritories, limit, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesV2PromotedPurchaseGetToOneRelatedTest() throws ApiException {
        //String id = null;
        //List<String> fieldsPromotedPurchases = null;
        //List<String> fieldsSubscriptions = null;
        //List<String> fieldsInAppPurchases = null;
        //List<String> fieldsPromotedPurchaseImages = null;
        //Integer limitPromotionImages = null;
        //List<String> include = null;
        //PromotedPurchaseResponse response = api.inAppPurchasesV2PromotedPurchaseGetToOneRelated(id, fieldsPromotedPurchases, fieldsSubscriptions, fieldsInAppPurchases, fieldsPromotedPurchaseImages, limitPromotionImages, include);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inAppPurchasesV2UpdateInstanceTest() throws ApiException {
        //String id = null;
        //InAppPurchaseV2UpdateRequest inAppPurchaseV2UpdateRequest = null;
        //InAppPurchaseV2Response response = api.inAppPurchasesV2UpdateInstance(id, inAppPurchaseV2UpdateRequest);
        // TODO: test validations
    }

}
